// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_fh1_Nl12
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtFh1Nl12(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot, const Scalar p_init0,
    const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x, const Scalar rot_init_y,
    const Scalar rot_init_z, const Scalar rot_init_w, const Scalar epsilon) {
  // Total ops: 303

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (106)
  const Scalar _tmp0 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp1 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp4 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                       2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp8 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp7 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = 2 * _tmp3;
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = _tmp0 * _tmp4;
  const Scalar _tmp13 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp9;
  const Scalar _tmp15 = _tmp14 + _tmp6;
  const Scalar _tmp16 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp17 = _tmp0 * _tmp10;
  const Scalar _tmp18 = _tmp1 * _tmp4;
  const Scalar _tmp19 =
      -Scalar(0.010999999999999999) * _tmp17 + Scalar(0.010999999999999999) * _tmp18;
  const Scalar _tmp20 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp22 = _tmp19 + _tmp21;
  const Scalar _tmp23 = _tmp16 + _tmp22;
  const Scalar _tmp24 = _tmp23 + p_init1 + Scalar(-4.7752063900000001);
  const Scalar _tmp25 = _tmp15 + p_init0 + Scalar(-2.71799795);
  const Scalar _tmp26 = std::pow(Scalar(std::pow(_tmp24, Scalar(2)) + std::pow(_tmp25, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp27 = _tmp24 * _tmp26;
  const Scalar _tmp28 = _tmp25 * _tmp26;
  const Scalar _tmp29 = _tmp15 * _tmp27 - _tmp23 * _tmp28;
  const Scalar _tmp30 = -_tmp16;
  const Scalar _tmp31 = _tmp22 + _tmp30;
  const Scalar _tmp32 = _tmp31 + p_init1 + Scalar(-4.8333311099999996);
  const Scalar _tmp33 = _tmp13 - _tmp9;
  const Scalar _tmp34 = _tmp33 + _tmp6;
  const Scalar _tmp35 = _tmp34 + p_init0 + Scalar(1.79662371);
  const Scalar _tmp36 = std::pow(Scalar(std::pow(_tmp32, Scalar(2)) + std::pow(_tmp35, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp37 = _tmp35 * _tmp36;
  const Scalar _tmp38 = _tmp19 - _tmp21;
  const Scalar _tmp39 = _tmp30 + _tmp38;
  const Scalar _tmp40 = _tmp39 + p_init1 + Scalar(8.3196563700000006);
  const Scalar _tmp41 = -_tmp6;
  const Scalar _tmp42 = _tmp33 + _tmp41;
  const Scalar _tmp43 = _tmp42 + p_init0 + Scalar(1.9874742000000001);
  const Scalar _tmp44 =
      std::sqrt(Scalar(std::pow(_tmp40, Scalar(2)) + std::pow(_tmp43, Scalar(2))));
  const Scalar _tmp45 = Scalar(1.0) / (_tmp44);
  const Scalar _tmp46 = Scalar(1.0) / (_tmp43);
  const Scalar _tmp47 = _tmp44 * _tmp46;
  const Scalar _tmp48 = _tmp47 * (-_tmp39 * _tmp43 * _tmp45 + _tmp40 * _tmp42 * _tmp45);
  const Scalar _tmp49 = _tmp40 * _tmp46;
  const Scalar _tmp50 = _tmp32 * _tmp36;
  const Scalar _tmp51 = _tmp37 * _tmp49 - _tmp50;
  const Scalar _tmp52 = _tmp14 + _tmp41;
  const Scalar _tmp53 = _tmp52 + p_init0 + Scalar(-2.5202214700000001);
  const Scalar _tmp54 = _tmp16 + _tmp38;
  const Scalar _tmp55 = _tmp54 + p_init1 + Scalar(8.3888750099999996);
  const Scalar _tmp56 = std::pow(Scalar(std::pow(_tmp53, Scalar(2)) + std::pow(_tmp55, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp57 = _tmp55 * _tmp56;
  const Scalar _tmp58 = _tmp53 * _tmp56;
  const Scalar _tmp59 = Scalar(1.0) / (_tmp49 * _tmp58 - _tmp57);
  const Scalar _tmp60 = _tmp59 * (_tmp48 * _tmp58 - _tmp52 * _tmp57 + _tmp54 * _tmp58);
  const Scalar _tmp61 = _tmp31 * _tmp37 - _tmp34 * _tmp50 + _tmp37 * _tmp48 - _tmp51 * _tmp60;
  const Scalar _tmp62 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp63 = Scalar(1.0) * _tmp62;
  const Scalar _tmp64 = _tmp51 * _tmp59;
  const Scalar _tmp65 = _tmp58 * _tmp64;
  const Scalar _tmp66 = _tmp29 * _tmp47 * (_tmp37 * _tmp63 - _tmp63 * _tmp65);
  const Scalar _tmp67 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp68 = -_tmp67;
  const Scalar _tmp69 = -Scalar(0.010999999999999999) * _tmp20 -
                        Scalar(0.010999999999999999) * _tmp7 + Scalar(-0.010999999999999999);
  const Scalar _tmp70 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp71 = _tmp69 - _tmp70;
  const Scalar _tmp72 = _tmp68 + _tmp71;
  const Scalar _tmp73 = _tmp67 + _tmp71;
  const Scalar _tmp74 = _tmp49 * _tmp72;
  const Scalar _tmp75 = _tmp59 * (_tmp57 * _tmp73 - _tmp58 * _tmp74);
  const Scalar _tmp76 = _tmp68 + _tmp69 + _tmp70;
  const Scalar _tmp77 = Scalar(1.0) * _tmp39;
  const Scalar _tmp78 = Scalar(1.0) * _tmp42;
  const Scalar _tmp79 = (-_tmp52 + _tmp78) / (_tmp54 - _tmp77);
  const Scalar _tmp80 = _tmp59 * (_tmp58 * _tmp72 - _tmp58 * _tmp73);
  const Scalar _tmp81 = _tmp37 * _tmp72 - _tmp37 * _tmp76 - _tmp51 * _tmp80 -
                        _tmp79 * (-_tmp37 * _tmp74 + _tmp50 * _tmp76 - _tmp51 * _tmp75);
  const Scalar _tmp82 = Scalar(1.0) / (_tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp75 * _tmp79 - Scalar(1.0) * _tmp80;
  const Scalar _tmp84 = _tmp61 * _tmp82;
  const Scalar _tmp85 = _tmp62 * _tmp81;
  const Scalar _tmp86 = _tmp83 + _tmp85 * (-Scalar(1.0) * _tmp60 - _tmp83 * _tmp84);
  const Scalar _tmp87 = _tmp82 * _tmp86;
  const Scalar _tmp88 = _tmp51 * _tmp82;
  const Scalar _tmp89 = _tmp59 * (-_tmp86 * _tmp88 + Scalar(1.0));
  const Scalar _tmp90 = _tmp27 * _tmp47 * (_tmp37 * _tmp87 + _tmp58 * _tmp89);
  const Scalar _tmp91 = _tmp49 * _tmp80 - _tmp72 - _tmp79 * (_tmp49 * _tmp75 + _tmp74);
  const Scalar _tmp92 = _tmp85 * (-_tmp48 + _tmp49 * _tmp60 - _tmp84 * _tmp91) + _tmp91;
  const Scalar _tmp93 = _tmp59 * (-_tmp49 - _tmp88 * _tmp92);
  const Scalar _tmp94 = _tmp82 * _tmp92;
  const Scalar _tmp95 = _tmp28 * _tmp47 * (_tmp37 * _tmp94 + _tmp58 * _tmp93 + Scalar(1.0));
  const Scalar _tmp96 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp97 = _tmp77 * _tmp79 + _tmp78;
  const Scalar _tmp98 = 0;
  const Scalar _tmp99 = _tmp28 * _tmp93;
  const Scalar _tmp100 = _tmp27 * _tmp89;
  const Scalar _tmp101 = _tmp29 * _tmp63;
  const Scalar _tmp102 = _tmp101 * fh1;
  const Scalar _tmp103 = _tmp96 * _tmp98;
  const Scalar _tmp104 = _tmp27 * _tmp87;
  const Scalar _tmp105 = _tmp28 * _tmp94;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = -std::exp(-fh1);
  _res(1, 0) = -(-_tmp66 - _tmp90 - _tmp95) *
               std::exp(_tmp47 * _tmp96 * (_tmp37 * _tmp98 - _tmp65 * _tmp98) + _tmp66 * fh1 +
                        _tmp90 * fh1 + _tmp95 * fh1);
  _res(2, 0) = -(_tmp100 - _tmp101 * _tmp64 + _tmp99) *
               std::exp(-_tmp100 * fh1 + _tmp102 * _tmp64 + _tmp103 * _tmp64 - _tmp99 * fh1);
  _res(3, 0) =
      -(_tmp101 + _tmp104 + _tmp105) * std::exp(-_tmp102 - _tmp103 - _tmp104 * fh1 - _tmp105 * fh1);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
