// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl3
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl3(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot, const Scalar p_init0,
    const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x, const Scalar rot_init_y,
    const Scalar rot_init_z, const Scalar rot_init_w, const Scalar epsilon) {
  // Total ops: 595

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (191)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp4 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp5 = 2 * _tmp4;
  const Scalar _tmp6 = _tmp3 * _tmp5;
  const Scalar _tmp7 = -_DeltaRot[0] * rot_init_x - _DeltaRot[1] * rot_init_y -
                       _DeltaRot[2] * rot_init_z + _DeltaRot[3] * rot_init_w;
  const Scalar _tmp8 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp9 = 2 * _tmp8;
  const Scalar _tmp10 = _tmp7 * _tmp9;
  const Scalar _tmp11 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp12 = -_tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp14 = 1 - 2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp3 * _tmp9;
  const Scalar _tmp17 = _tmp5 * _tmp7;
  const Scalar _tmp18 = _tmp16 + _tmp17;
  const Scalar _tmp19 = -Scalar(0.010999999999999999) * _tmp18;
  const Scalar _tmp20 = -_tmp15 + _tmp19;
  const Scalar _tmp21 = _tmp12 + _tmp20;
  const Scalar _tmp22 = _tmp21 + p_init0;
  const Scalar _tmp23 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp25 = -_tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp27 = _tmp5 * _tmp8;
  const Scalar _tmp28 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp29 = _tmp27 - _tmp28;
  const Scalar _tmp30 = Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp31 = -_tmp30;
  const Scalar _tmp32 = -_tmp26 + _tmp31;
  const Scalar _tmp33 = _tmp25 + _tmp32;
  const Scalar _tmp34 = _tmp33 + p_init1;
  const Scalar _tmp35 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp36 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp37 = _tmp24 + _tmp26;
  const Scalar _tmp38 = _tmp31 + _tmp37;
  const Scalar _tmp39 = Scalar(1.0) * _tmp38;
  const Scalar _tmp40 = -_tmp39;
  const Scalar _tmp41 = _tmp24 + _tmp32;
  const Scalar _tmp42 = Scalar(1.0) / (_tmp40 + _tmp41);
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp44 = -Scalar(0.010999999999999999) * _tmp13 -
                        Scalar(0.010999999999999999) * _tmp23 + Scalar(-0.010999999999999999);
  const Scalar _tmp45 = Scalar(0.20999999999999999) * _tmp27 + Scalar(0.20999999999999999) * _tmp28;
  const Scalar _tmp46 = _tmp44 - _tmp45;
  const Scalar _tmp47 = _tmp43 + _tmp46;
  const Scalar _tmp48 = _tmp15 + _tmp19;
  const Scalar _tmp49 = _tmp12 + _tmp48;
  const Scalar _tmp50 = _tmp49 + p_init0;
  const Scalar _tmp51 = _tmp50 + Scalar(-2.5202214700000001);
  const Scalar _tmp52 = _tmp25 + _tmp26 + _tmp31;
  const Scalar _tmp53 = _tmp52 + p_init1;
  const Scalar _tmp54 = _tmp53 + Scalar(8.3888750099999996);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp54 * _tmp55;
  const Scalar _tmp57 = _tmp44 + _tmp45;
  const Scalar _tmp58 = _tmp43 + _tmp57;
  const Scalar _tmp59 = _tmp11 + _tmp48;
  const Scalar _tmp60 = _tmp59 + p_init0;
  const Scalar _tmp61 = _tmp60 + Scalar(-2.71799795);
  const Scalar _tmp62 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp63 = _tmp38 + p_init1;
  const Scalar _tmp64 = _tmp63 + Scalar(-4.7752063900000001);
  const Scalar _tmp65 = _tmp62 * _tmp64;
  const Scalar _tmp66 = _tmp58 * _tmp65;
  const Scalar _tmp67 = _tmp41 + p_init1;
  const Scalar _tmp68 = _tmp67 + Scalar(-4.8333311099999996);
  const Scalar _tmp69 = _tmp11 + _tmp20;
  const Scalar _tmp70 = _tmp69 + p_init0;
  const Scalar _tmp71 = _tmp70 + Scalar(1.79662371);
  const Scalar _tmp72 = std::pow(Scalar(std::pow(_tmp68, Scalar(2)) + std::pow(_tmp71, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp73 = _tmp71 * _tmp72;
  const Scalar _tmp74 = -_tmp43;
  const Scalar _tmp75 = _tmp57 + _tmp74;
  const Scalar _tmp76 = _tmp68 * _tmp72;
  const Scalar _tmp77 = -_tmp66 * _tmp73 + _tmp75 * _tmp76;
  const Scalar _tmp78 = _tmp51 * _tmp55;
  const Scalar _tmp79 = -_tmp56 + _tmp65 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp65 * _tmp73 - _tmp76);
  const Scalar _tmp81 = _tmp79 * _tmp80;
  const Scalar _tmp82 = _tmp47 * _tmp56 - _tmp66 * _tmp78 - _tmp77 * _tmp81;
  const Scalar _tmp83 = _tmp58 * _tmp73 - _tmp73 * _tmp75;
  const Scalar _tmp84 = Scalar(1.0) * _tmp59;
  const Scalar _tmp85 = -_tmp69 + _tmp84;
  const Scalar _tmp86 = _tmp42 * _tmp85;
  const Scalar _tmp87 = -_tmp47 * _tmp78 + _tmp58 * _tmp78 - _tmp81 * _tmp83 - _tmp82 * _tmp86;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 = _tmp39 * _tmp86 + _tmp84;
  const Scalar _tmp90 = 0;
  const Scalar _tmp91 = _tmp40 + _tmp52;
  const Scalar _tmp92 = _tmp86 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (-_tmp49 + _tmp84 - _tmp92);
  const Scalar _tmp94 = _tmp89 * _tmp93;
  const Scalar _tmp95 = _tmp42 * (_tmp40 - _tmp82 * _tmp90 - _tmp91 * _tmp94);
  const Scalar _tmp96 = -Scalar(1.0) * _tmp94 - Scalar(1.0) * _tmp95 + Scalar(1.0);
  const Scalar _tmp97 = Scalar(1.0) * _tmp93;
  const Scalar _tmp98 = Scalar(1.0) * _tmp80;
  const Scalar _tmp99 = Scalar(1.0) * _tmp42;
  const Scalar _tmp100 = _tmp77 * _tmp80 * _tmp85 * _tmp99 - _tmp83 * _tmp98;
  const Scalar _tmp101 =
      std::sqrt(Scalar(std::pow(_tmp61, Scalar(2)) + std::pow(_tmp64, Scalar(2))));
  const Scalar _tmp102 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp103 = _tmp101 * _tmp62;
  const Scalar _tmp104 = _tmp103 * (-_tmp102 * _tmp38 * _tmp61 + _tmp102 * _tmp59 * _tmp64);
  const Scalar _tmp105 = _tmp104 * _tmp73 + _tmp41 * _tmp73 - _tmp69 * _tmp76;
  const Scalar _tmp106 = _tmp104 * _tmp78 - _tmp105 * _tmp81 - _tmp49 * _tmp56 + _tmp52 * _tmp78;
  const Scalar _tmp107 = _tmp106 * _tmp88;
  const Scalar _tmp108 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp109 = _tmp108 * _tmp87;
  const Scalar _tmp110 = _tmp109 * (-_tmp100 * _tmp107 - _tmp105 * _tmp98);
  const Scalar _tmp111 = _tmp91 * _tmp93;
  const Scalar _tmp112 = _tmp88 * (_tmp100 + _tmp110);
  const Scalar _tmp113 = _tmp110 * _tmp111 - _tmp112 * _tmp82 - _tmp77 * _tmp98;
  const Scalar _tmp114 = _tmp34 + Scalar(8.3196563700000006);
  const Scalar _tmp115 = _tmp22 + Scalar(1.9874742000000001);
  const Scalar _tmp116 =
      std::pow(Scalar(std::pow(_tmp114, Scalar(2)) + std::pow(_tmp115, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp117 = _tmp114 * _tmp116;
  const Scalar _tmp118 = _tmp117 * fh1;
  const Scalar _tmp119 = fh1 * (_tmp46 + _tmp74);
  const Scalar _tmp120 = -_tmp117 * _tmp119 - Scalar(3.29616) * _tmp29 - _tmp33 * fv1;
  const Scalar _tmp121 = _tmp92 * _tmp97 + Scalar(1.0);
  const Scalar _tmp122 = _tmp86 * _tmp97;
  const Scalar _tmp123 = -Scalar(1.0) * _tmp121 * _tmp99 + Scalar(1.0) * _tmp122;
  const Scalar _tmp124 = _tmp65 * _tmp80;
  const Scalar _tmp125 = _tmp124 * _tmp77 + _tmp66;
  const Scalar _tmp126 = _tmp124 * _tmp83 - _tmp125 * _tmp86 - _tmp58;
  const Scalar _tmp127 = _tmp109 * (-_tmp104 + _tmp105 * _tmp124 - _tmp107 * _tmp126);
  const Scalar _tmp128 = _tmp88 * (_tmp126 + _tmp127);
  const Scalar _tmp129 = _tmp111 * _tmp127 + _tmp125 - _tmp128 * _tmp82;
  const Scalar _tmp130 = _tmp115 * _tmp116;
  const Scalar _tmp131 = _tmp130 * fh1;
  const Scalar _tmp132 = _tmp109 * _tmp97;
  const Scalar _tmp133 = Scalar(1.0) * _tmp108;
  const Scalar _tmp134 = _tmp91 * _tmp97;
  const Scalar _tmp135 = _tmp109 * _tmp134 - _tmp133 * _tmp82;
  const Scalar _tmp136 = fh1 * (_tmp117 * _tmp21 - _tmp130 * _tmp33);
  const Scalar _tmp137 = _tmp119 * _tmp130 + Scalar(3.29616) * _tmp18 + _tmp21 * fv1;
  const Scalar _tmp138 = Scalar(1.0) * _tmp134 * _tmp42 - Scalar(1.0) * _tmp97;
  const Scalar _tmp139 =
      Scalar(1.0) * _tmp118 * (_tmp110 * _tmp97 - _tmp113 * _tmp99) + _tmp120 * _tmp123 +
      Scalar(1.0) * _tmp131 * (_tmp127 * _tmp97 - _tmp129 * _tmp99) +
      Scalar(1.0) * _tmp136 * (_tmp132 - _tmp135 * _tmp99) + _tmp137 * _tmp138 + _tmp36 * _tmp96;
  const Scalar _tmp140 = _tmp81 * _tmp90;
  const Scalar _tmp141 = _tmp103 * (-_tmp140 * _tmp73 + _tmp78 * _tmp90);
  const Scalar _tmp142 = _tmp108 * _tmp79 * _tmp98;
  const Scalar _tmp143 = -_tmp128 * _tmp79 - _tmp65;
  const Scalar _tmp144 = _tmp73 * _tmp80;
  const Scalar _tmp145 = -_tmp112 * _tmp79 + Scalar(1.0);
  const Scalar _tmp146 = -_tmp103 * _tmp118 * (_tmp112 * _tmp78 + _tmp144 * _tmp145) -
                         _tmp103 * _tmp131 * (_tmp128 * _tmp78 + _tmp143 * _tmp144 + Scalar(1.0)) -
                         _tmp103 * _tmp136 * (_tmp133 * _tmp78 - _tmp142 * _tmp73) -
                         _tmp141 * _tmp36;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 = std::asinh(_tmp139 * _tmp147);
  const Scalar _tmp149 = Scalar(1.0) * _tmp148;
  const Scalar _tmp150 = Scalar(9.6622558468725703) * _tmp146;
  const Scalar _tmp151 =
      -_tmp148 * _tmp150 -
      Scalar(4.7752063900000001) *
          std::sqrt(
              Scalar(Scalar(0.32397683292140877) *
                         std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp60), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp63), Scalar(2))));
  const Scalar _tmp152 = Scalar(0.1034955) * _tmp147;
  const Scalar _tmp153 = _tmp151 * _tmp152;
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp141;
  const Scalar _tmp155 = std::pow(_tmp146, Scalar(-2));
  const Scalar _tmp156 = _tmp141 * _tmp155;
  const Scalar _tmp157 = _tmp30 + _tmp37;
  const Scalar _tmp158 =
      (-_tmp139 * _tmp156 + _tmp147 * (_tmp123 * _tmp157 + _tmp138 * _tmp21 - _tmp96)) /
      std::sqrt(Scalar(std::pow(_tmp139, Scalar(2)) * _tmp155 + 1));
  const Scalar _tmp159 = _tmp137 * _tmp97;
  const Scalar _tmp160 = _tmp42 * _tmp91;
  const Scalar _tmp161 = _tmp121 * _tmp42;
  const Scalar _tmp162 = _tmp113 * _tmp118 * _tmp42 + _tmp120 * _tmp161 +
                         _tmp129 * _tmp131 * _tmp42 + _tmp135 * _tmp136 * _tmp42 -
                         _tmp159 * _tmp160 + _tmp36 * _tmp95;
  const Scalar _tmp163 = _tmp36 * _tmp90;
  const Scalar _tmp164 = _tmp80 * fh1;
  const Scalar _tmp165 = _tmp117 * _tmp145 * _tmp164 + _tmp130 * _tmp143 * _tmp164 -
                         _tmp136 * _tmp142 - _tmp163 * _tmp81;
  const Scalar _tmp166 = Scalar(1.0) / (_tmp165);
  const Scalar _tmp167 = std::asinh(_tmp162 * _tmp166);
  const Scalar _tmp168 = Scalar(1.0) * _tmp167;
  const Scalar _tmp169 = std::pow(_tmp165, Scalar(-2));
  const Scalar _tmp170 = _tmp140 * _tmp169;
  const Scalar _tmp171 = _tmp21 * _tmp97;
  const Scalar _tmp172 =
      (-_tmp162 * _tmp170 + _tmp166 * (_tmp157 * _tmp161 - _tmp160 * _tmp171 - _tmp95)) /
      std::sqrt(Scalar(std::pow(_tmp162, Scalar(2)) * _tmp169 + 1));
  const Scalar _tmp173 = Scalar(9.6622558468725703) * _tmp165;
  const Scalar _tmp174 = Scalar(9.6622558468725703) * _tmp90;
  const Scalar _tmp175 = _tmp174 * _tmp81;
  const Scalar _tmp176 = Scalar(0.1034955) * _tmp166;
  const Scalar _tmp177 =
      -_tmp167 * _tmp173 -
      Scalar(4.8333311099999996) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp67), Scalar(2)) +
                     Scalar(0.13817235445745474) *
                         std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp70 - 1), Scalar(2))));
  const Scalar _tmp178 = _tmp176 * _tmp177;
  const Scalar _tmp179 = _tmp112 * _tmp118 + _tmp128 * _tmp131 + _tmp133 * _tmp136 + _tmp163;
  const Scalar _tmp180 = Scalar(1.0) / (_tmp179);
  const Scalar _tmp181 = -_tmp110 * _tmp118 * _tmp93 - _tmp120 * _tmp122 -
                         _tmp127 * _tmp131 * _tmp93 - _tmp132 * _tmp136 + _tmp159 + _tmp36 * _tmp94;
  const Scalar _tmp182 = std::asinh(_tmp180 * _tmp181);
  const Scalar _tmp183 = Scalar(9.6622558468725703) * _tmp179;
  const Scalar _tmp184 =
      -_tmp182 * _tmp183 -
      Scalar(8.3888750099999996) *
          std::sqrt(
              Scalar(Scalar(0.090254729040973036) *
                         std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp50), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp53 - 1), Scalar(2))));
  const Scalar _tmp185 = Scalar(0.1034955) * _tmp180;
  const Scalar _tmp186 = _tmp184 * _tmp185;
  const Scalar _tmp187 = std::pow(_tmp179, Scalar(-2));
  const Scalar _tmp188 = _tmp187 * _tmp90;
  const Scalar _tmp189 = (_tmp180 * (-_tmp122 * _tmp157 + _tmp171 - _tmp94) + _tmp181 * _tmp188) /
                         std::sqrt(Scalar(std::pow(_tmp181, Scalar(2)) * _tmp187 + 1));
  const Scalar _tmp190 = Scalar(1.0) * _tmp182;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp35 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 *
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp1 * _tmp35 -
                Scalar(8.3196563700000006) *
                    std::sqrt(Scalar(
                        Scalar(0.057067943376852184) *
                            std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp22 - 1), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp34 - 1), Scalar(2)))))));
  _res(1, 0) = _tmp150 * (-Scalar(1.0) * _tmp158 * std::cosh(_tmp149) -
                          (-Scalar(0.1034955) * _tmp151 * _tmp156 +
                           _tmp152 * (-_tmp148 * _tmp154 - _tmp150 * _tmp158)) *
                              std::cosh(_tmp153)) +
               _tmp154 * (-std::sinh(_tmp149) - std::sinh(_tmp153));
  _res(2, 0) = _tmp173 * (-Scalar(1.0) * _tmp172 * std::cosh(_tmp168) -
                          (-Scalar(0.1034955) * _tmp170 * _tmp177 +
                           _tmp176 * (-_tmp167 * _tmp175 - _tmp172 * _tmp173)) *
                              std::cosh(_tmp178)) +
               _tmp175 * (-std::sinh(_tmp168) - std::sinh(_tmp178));
  _res(3, 0) = -_tmp174 * (-std::sinh(_tmp186) - std::sinh(_tmp190)) +
               _tmp183 * (-Scalar(1.0) * _tmp189 * std::cosh(_tmp190) -
                          (Scalar(0.1034955) * _tmp184 * _tmp188 +
                           _tmp185 * (_tmp174 * _tmp182 - _tmp183 * _tmp189)) *
                              std::cosh(_tmp186));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
