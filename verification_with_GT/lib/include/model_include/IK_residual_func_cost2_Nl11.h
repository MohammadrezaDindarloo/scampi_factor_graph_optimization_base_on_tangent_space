// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl11
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl11(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot, const Scalar p_init0,
    const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x, const Scalar rot_init_y,
    const Scalar rot_init_z, const Scalar rot_init_w, const Scalar epsilon) {
  // Total ops: 527

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (157)
  const Scalar _tmp0 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp1 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp5 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                       2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp9 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp10 =
      -Scalar(0.010999999999999999) * _tmp8 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp11 = _tmp2 * _tmp4;
  const Scalar _tmp12 = _tmp0 * _tmp5;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp10 - _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp7;
  const Scalar _tmp16 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp18 = _tmp3 + _tmp6;
  const Scalar _tmp19 = -Scalar(0.010999999999999999) * _tmp18;
  const Scalar _tmp20 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp21 = _tmp1 * _tmp5;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp20 - Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp19 - _tmp22;
  const Scalar _tmp24 = _tmp17 + _tmp23;
  const Scalar _tmp25 = _tmp24 + p_init0;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp27 = _tmp11 - _tmp12;
  const Scalar _tmp28 = -Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp8 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp30 = _tmp28 - _tmp29;
  const Scalar _tmp31 = _tmp26 + _tmp30;
  const Scalar _tmp32 = _tmp31 + p_init1;
  const Scalar _tmp33 = Scalar(6.351516257848961) *
                            std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp25), Scalar(2)) +
                        Scalar(70.3732239334025) *
                            std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp32 - 1), Scalar(2));
  const Scalar _tmp34 = Scalar(1.0) / (fh1);
  const Scalar _tmp35 = std::asinh(_tmp34 * fv1);
  const Scalar _tmp36 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp37 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp38 = -_tmp17;
  const Scalar _tmp39 = _tmp19 + _tmp22;
  const Scalar _tmp40 = _tmp38 + _tmp39;
  const Scalar _tmp41 = Scalar(1.0) * _tmp40;
  const Scalar _tmp42 = -_tmp26;
  const Scalar _tmp43 = _tmp28 + _tmp29;
  const Scalar _tmp44 = _tmp42 + _tmp43;
  const Scalar _tmp45 = Scalar(1.0) * _tmp44;
  const Scalar _tmp46 = -_tmp45;
  const Scalar _tmp47 = _tmp26 + _tmp43;
  const Scalar _tmp48 = Scalar(1.0) / (_tmp46 + _tmp47);
  const Scalar _tmp49 = _tmp17 + _tmp39;
  const Scalar _tmp50 = _tmp48 * (_tmp41 - _tmp49);
  const Scalar _tmp51 = _tmp41 + _tmp45 * _tmp50;
  const Scalar _tmp52 = -_tmp7;
  const Scalar _tmp53 = _tmp10 + _tmp13;
  const Scalar _tmp54 = _tmp52 + _tmp53;
  const Scalar _tmp55 = _tmp30 + _tmp42;
  const Scalar _tmp56 = _tmp55 + p_init1;
  const Scalar _tmp57 = _tmp56 + Scalar(8.3196563700000006);
  const Scalar _tmp58 = _tmp23 + _tmp38;
  const Scalar _tmp59 = _tmp58 + p_init0;
  const Scalar _tmp60 = _tmp59 + Scalar(1.9874742000000001);
  const Scalar _tmp61 = std::pow(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp60, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp62 = _tmp60 * _tmp61;
  const Scalar _tmp63 = _tmp14 + _tmp52;
  const Scalar _tmp64 = _tmp53 + _tmp7;
  const Scalar _tmp65 = _tmp49 + p_init0;
  const Scalar _tmp66 = _tmp65 + Scalar(-2.71799795);
  const Scalar _tmp67 = _tmp47 + p_init1;
  const Scalar _tmp68 = _tmp67 + Scalar(-4.7752063900000001);
  const Scalar _tmp69 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp68, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp70 = _tmp66 * _tmp69;
  const Scalar _tmp71 = _tmp54 * _tmp70 - _tmp64 * _tmp70;
  const Scalar _tmp72 = _tmp68 * _tmp69;
  const Scalar _tmp73 = _tmp44 + p_init1;
  const Scalar _tmp74 = _tmp73 + Scalar(-4.8333311099999996);
  const Scalar _tmp75 = _tmp40 + p_init0;
  const Scalar _tmp76 = _tmp75 + Scalar(1.79662371);
  const Scalar _tmp77 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp78 = _tmp74 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp70 * _tmp78 - _tmp72);
  const Scalar _tmp80 = _tmp57 * _tmp61;
  const Scalar _tmp81 = _tmp62 * _tmp78 - _tmp80;
  const Scalar _tmp82 = _tmp79 * _tmp81;
  const Scalar _tmp83 = _tmp54 * _tmp78;
  const Scalar _tmp84 = _tmp79 * (_tmp64 * _tmp72 - _tmp70 * _tmp83);
  const Scalar _tmp85 = -_tmp62 * _tmp83 + _tmp63 * _tmp80 - _tmp81 * _tmp84;
  const Scalar _tmp86 = -_tmp50 * _tmp85 + _tmp54 * _tmp62 - _tmp62 * _tmp63 - _tmp71 * _tmp82;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp88 = 0;
  const Scalar _tmp89 = _tmp70 * _tmp82;
  const Scalar _tmp90 =
      std::sqrt(Scalar(std::pow(_tmp74, Scalar(2)) + std::pow(_tmp76, Scalar(2))));
  const Scalar _tmp91 = _tmp77 * _tmp90;
  const Scalar _tmp92 = _tmp78 * _tmp79;
  const Scalar _tmp93 = _tmp78 * _tmp84 + _tmp83;
  const Scalar _tmp94 = -_tmp50 * _tmp93 - _tmp54 + _tmp71 * _tmp92;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp96 = _tmp91 * (_tmp40 * _tmp74 * _tmp95 - _tmp44 * _tmp76 * _tmp95);
  const Scalar _tmp97 = _tmp47 * _tmp70 - _tmp49 * _tmp72 + _tmp70 * _tmp96;
  const Scalar _tmp98 = _tmp55 * _tmp62 - _tmp58 * _tmp80 + _tmp62 * _tmp96 - _tmp82 * _tmp97;
  const Scalar _tmp99 = _tmp87 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp101 = _tmp100 * _tmp86;
  const Scalar _tmp102 = _tmp101 * (_tmp92 * _tmp97 - _tmp94 * _tmp99 - _tmp96);
  const Scalar _tmp103 = _tmp87 * (_tmp102 + _tmp94);
  const Scalar _tmp104 = -_tmp103 * _tmp81 - _tmp78;
  const Scalar _tmp105 = _tmp70 * _tmp79;
  const Scalar _tmp106 = _tmp25 + Scalar(-2.5202214700000001);
  const Scalar _tmp107 = _tmp32 + Scalar(8.3888750099999996);
  const Scalar _tmp108 =
      std::pow(Scalar(std::pow(_tmp106, Scalar(2)) + std::pow(_tmp107, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp109 = _tmp106 * _tmp108;
  const Scalar _tmp110 = _tmp109 * fh1;
  const Scalar _tmp111 = Scalar(1.0) * _tmp79;
  const Scalar _tmp112 = Scalar(1.0) * _tmp84;
  const Scalar _tmp113 = -_tmp111 * _tmp71 + _tmp112 * _tmp50;
  const Scalar _tmp114 = _tmp101 * (-_tmp111 * _tmp97 - _tmp113 * _tmp99);
  const Scalar _tmp115 = _tmp87 * (_tmp113 + _tmp114);
  const Scalar _tmp116 = -_tmp115 * _tmp81 + Scalar(1.0);
  const Scalar _tmp117 = _tmp107 * _tmp108;
  const Scalar _tmp118 = _tmp117 * fh1;
  const Scalar _tmp119 = Scalar(1.0) * _tmp100;
  const Scalar _tmp120 = fh1 * (-_tmp109 * _tmp31 + _tmp117 * _tmp24);
  const Scalar _tmp121 = -_tmp110 * _tmp91 * (_tmp103 * _tmp62 + _tmp104 * _tmp105 + Scalar(1.0)) -
                         _tmp118 * _tmp91 * (_tmp105 * _tmp116 + _tmp115 * _tmp62) -
                         _tmp120 * _tmp91 * (_tmp119 * _tmp62 - _tmp119 * _tmp89) -
                         _tmp37 * _tmp91 * (_tmp62 * _tmp88 - _tmp88 * _tmp89);
  const Scalar _tmp122 = Scalar(1.0) / (_tmp121);
  const Scalar _tmp123 = _tmp46 + _tmp55;
  const Scalar _tmp124 = _tmp123 * _tmp50;
  const Scalar _tmp125 = Scalar(1.0) / (-_tmp124 + _tmp41 - _tmp58);
  const Scalar _tmp126 = Scalar(1.0) * _tmp125;
  const Scalar _tmp127 = _tmp123 * _tmp125;
  const Scalar _tmp128 = -_tmp112 + _tmp114 * _tmp127 - _tmp115 * _tmp85;
  const Scalar _tmp129 = Scalar(1.0) * _tmp48;
  const Scalar _tmp130 = _tmp102 * _tmp127 - _tmp103 * _tmp85 + _tmp93;
  const Scalar _tmp131 = _tmp126 * _tmp50;
  const Scalar _tmp132 = _tmp124 * _tmp126 + Scalar(1.0);
  const Scalar _tmp133 = _tmp15 * fh1;
  const Scalar _tmp134 = -_tmp117 * _tmp133 - Scalar(3.29616) * _tmp27 - _tmp31 * fv1;
  const Scalar _tmp135 = _tmp109 * _tmp133 + Scalar(3.29616) * _tmp18 + _tmp24 * fv1;
  const Scalar _tmp136 = _tmp123 * _tmp48;
  const Scalar _tmp137 = _tmp125 * _tmp51;
  const Scalar _tmp138 = -_tmp123 * _tmp137 + _tmp46 - _tmp85 * _tmp88;
  const Scalar _tmp139 = _tmp101 * _tmp126;
  const Scalar _tmp140 = -_tmp119 * _tmp85 + _tmp123 * _tmp139;
  const Scalar _tmp141 = std::asinh(
      _tmp122 * (Scalar(1.0) * _tmp110 * (_tmp102 * _tmp126 - _tmp129 * _tmp130) +
                 Scalar(1.0) * _tmp118 * (_tmp114 * _tmp126 - _tmp128 * _tmp129) +
                 Scalar(1.0) * _tmp120 * (-_tmp129 * _tmp140 + _tmp139) +
                 Scalar(1.0) * _tmp134 * (-_tmp129 * _tmp132 + _tmp131) +
                 Scalar(1.0) * _tmp135 * (_tmp126 * _tmp136 - _tmp126) +
                 Scalar(1.0) * _tmp37 * (-_tmp126 * _tmp51 - _tmp129 * _tmp138 + Scalar(1.0))));
  const Scalar _tmp142 = Scalar(23.361089618893828) *
                             std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp73), Scalar(2)) +
                         Scalar(3.2278567553341642) *
                             std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp75 - 1), Scalar(2));
  const Scalar _tmp143 = Scalar(9.6622558468725703) * _tmp121;
  const Scalar _tmp144 = _tmp119 * _tmp120;
  const Scalar _tmp145 = _tmp37 * _tmp88;
  const Scalar _tmp146 =
      _tmp104 * _tmp110 * _tmp79 + _tmp116 * _tmp118 * _tmp79 - _tmp144 * _tmp82 - _tmp145 * _tmp82;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 = Scalar(7.3875128562042027) *
                             std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp65), Scalar(2)) +
                         Scalar(22.802596067096832) *
                             std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp67), Scalar(2));
  const Scalar _tmp149 = _tmp126 * _tmp135;
  const Scalar _tmp150 =
      std::asinh(_tmp147 * (_tmp110 * _tmp130 * _tmp48 + _tmp118 * _tmp128 * _tmp48 +
                            _tmp120 * _tmp140 * _tmp48 + _tmp132 * _tmp134 * _tmp48 -
                            _tmp136 * _tmp149 + _tmp138 * _tmp37 * _tmp48));
  const Scalar _tmp151 = Scalar(9.6622558468725703) * _tmp146;
  const Scalar _tmp152 =
      Scalar(69.216682114881593) *
          std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp56 - 1), Scalar(2)) +
      Scalar(3.9500536956656402) *
          std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp59 - 1), Scalar(2));
  const Scalar _tmp153 = _tmp103 * _tmp110 + _tmp115 * _tmp118 + _tmp144 + _tmp145;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 =
      std::asinh(_tmp154 * (-_tmp102 * _tmp110 * _tmp125 - _tmp114 * _tmp118 * _tmp125 -
                            _tmp120 * _tmp139 - _tmp131 * _tmp134 + _tmp137 * _tmp37 + _tmp149));
  const Scalar _tmp156 = Scalar(9.6622558468725703) * _tmp153;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp36 * (-std::sinh(Scalar(1.0) * _tmp35) -
                std::sinh(Scalar(0.1034955) * _tmp34 * (-std::sqrt(_tmp33) - _tmp35 * _tmp36))) -
      Scalar(8.4693136199999994) *
          std::sqrt(Scalar(Scalar(0.013941309530580858) * _tmp33 +
                           std::pow(Scalar(-Scalar(0.11807332268798426) * _tmp15 -
                                           Scalar(0.11807332268798426) * p_init2 + 1),
                                    Scalar(2))));
  _res(1, 0) =
      _tmp143 *
          (-std::sinh(Scalar(1.0) * _tmp141) -
           std::sinh(Scalar(0.1034955) * _tmp122 * (-_tmp141 * _tmp143 - std::sqrt(_tmp142)))) -
      Scalar(8.3700199099999999) *
          std::sqrt(Scalar(Scalar(0.01427404356387209) * _tmp142 +
                           std::pow(Scalar(-Scalar(0.11947402882581673) * _tmp54 -
                                           Scalar(0.11947402882581673) * p_init2 + 1),
                                    Scalar(2))));
  _res(2, 0) =
      _tmp151 *
          (-std::sinh(Scalar(1.0) * _tmp150) -
           std::sinh(Scalar(0.1034955) * _tmp147 * (-std::sqrt(_tmp148) - _tmp150 * _tmp151))) -
      Scalar(8.36416322) *
          std::sqrt(Scalar(Scalar(0.014294040284261563) * _tmp148 +
                           std::pow(Scalar(-Scalar(0.1195576860108189) * _tmp64 -
                                           Scalar(0.1195576860108189) * p_init2 + 1),
                                    Scalar(2))));
  _res(3, 0) =
      _tmp156 *
          (-std::sinh(Scalar(1.0) * _tmp155) -
           std::sinh(Scalar(0.1034955) * _tmp154 * (-std::sqrt(_tmp152) - _tmp155 * _tmp156))) -
      Scalar(8.4718465799999993) *
          std::sqrt(Scalar(Scalar(0.013932974275675287) * _tmp152 +
                           std::pow(Scalar(-Scalar(0.11803802046660766) * _tmp63 -
                                           Scalar(0.11803802046660766) * p_init2 + 1),
                                    Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
