// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl8
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl8(const Scalar fh1, const Scalar fv1,
                                                   const sym::Rot3<Scalar>& DeltaRot,
                                                   const Scalar p_init0, const Scalar p_init1,
                                                   const Scalar p_init2, const Scalar rot_init_x,
                                                   const Scalar rot_init_y, const Scalar rot_init_z,
                                                   const Scalar rot_init_w, const Scalar epsilon) {
  // Total ops: 534

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (161)
  const Scalar _tmp0 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp1 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp5 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                       2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp10 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp11 = -Scalar(0.010999999999999999) * _tmp10 -
                        Scalar(0.010999999999999999) * _tmp9 + Scalar(-0.010999999999999999);
  const Scalar _tmp12 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp13 = _tmp1 * _tmp5;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 + _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp8;
  const Scalar _tmp17 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp19 = _tmp12 + _tmp13;
  const Scalar _tmp20 = -Scalar(0.010999999999999999) * _tmp19;
  const Scalar _tmp21 = _tmp2 * _tmp4;
  const Scalar _tmp22 = _tmp0 * _tmp5;
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp21 - Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp20 - _tmp23;
  const Scalar _tmp25 = _tmp18 + _tmp24;
  const Scalar _tmp26 = _tmp25 + p_init0;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp29 = _tmp3 - _tmp6;
  const Scalar _tmp30 = -Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp31 = -_tmp28 + _tmp30;
  const Scalar _tmp32 = _tmp27 + _tmp31;
  const Scalar _tmp33 = _tmp32 + p_init1;
  const Scalar _tmp34 = Scalar(6.351516257848961) *
                            std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp26), Scalar(2)) +
                        Scalar(70.3732239334025) *
                            std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp33 - 1), Scalar(2));
  const Scalar _tmp35 = Scalar(1.0) / (fh1);
  const Scalar _tmp36 = std::asinh(_tmp35 * fv1);
  const Scalar _tmp37 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp38 = _tmp15 + _tmp7;
  const Scalar _tmp39 = _tmp20 + _tmp23;
  const Scalar _tmp40 = _tmp18 + _tmp39;
  const Scalar _tmp41 = _tmp40 + p_init0;
  const Scalar _tmp42 = _tmp28 + _tmp30;
  const Scalar _tmp43 = _tmp27 + _tmp42;
  const Scalar _tmp44 = _tmp43 + p_init1;
  const Scalar _tmp45 = Scalar(7.3875128562042027) *
                            std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp41), Scalar(2)) +
                        Scalar(22.802596067096832) *
                            std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp44), Scalar(2));
  const Scalar _tmp46 = -_tmp27;
  const Scalar _tmp47 = _tmp42 + _tmp46;
  const Scalar _tmp48 = _tmp47 + p_init1;
  const Scalar _tmp49 = _tmp48 + Scalar(-4.8333311099999996);
  const Scalar _tmp50 = -_tmp18;
  const Scalar _tmp51 = _tmp39 + _tmp50;
  const Scalar _tmp52 = _tmp51 + p_init0;
  const Scalar _tmp53 = _tmp52 + Scalar(1.79662371);
  const Scalar _tmp54 = std::pow(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp53, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp55 = _tmp53 * _tmp54;
  const Scalar _tmp56 = _tmp44 + Scalar(-4.7752063900000001);
  const Scalar _tmp57 = _tmp41 + Scalar(-2.71799795);
  const Scalar _tmp58 =
      std::sqrt(Scalar(std::pow(_tmp56, Scalar(2)) + std::pow(_tmp57, Scalar(2))));
  const Scalar _tmp59 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp60 = Scalar(1.0) / (_tmp57);
  const Scalar _tmp61 = _tmp58 * _tmp60;
  const Scalar _tmp62 = _tmp61 * (_tmp40 * _tmp56 * _tmp59 - _tmp43 * _tmp57 * _tmp59);
  const Scalar _tmp63 = _tmp49 * _tmp54;
  const Scalar _tmp64 = _tmp56 * _tmp60;
  const Scalar _tmp65 = _tmp55 * _tmp64 - _tmp63;
  const Scalar _tmp66 = _tmp31 + _tmp46;
  const Scalar _tmp67 = _tmp66 + p_init1;
  const Scalar _tmp68 = _tmp67 + Scalar(8.3196563700000006);
  const Scalar _tmp69 = _tmp24 + _tmp50;
  const Scalar _tmp70 = _tmp69 + p_init0;
  const Scalar _tmp71 = _tmp70 + Scalar(1.9874742000000001);
  const Scalar _tmp72 = std::pow(Scalar(std::pow(_tmp68, Scalar(2)) + std::pow(_tmp71, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp73 = _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp68 * _tmp72;
  const Scalar _tmp75 = Scalar(1.0) / (_tmp64 * _tmp73 - _tmp74);
  const Scalar _tmp76 = _tmp75 * (_tmp62 * _tmp73 + _tmp66 * _tmp73 - _tmp69 * _tmp74);
  const Scalar _tmp77 = _tmp47 * _tmp55 - _tmp51 * _tmp63 + _tmp55 * _tmp62 - _tmp65 * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) / (_tmp77);
  const Scalar _tmp79 = Scalar(1.0) * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) * _tmp75;
  const Scalar _tmp81 = _tmp65 * _tmp78 * _tmp80;
  const Scalar _tmp82 = _tmp26 + Scalar(-2.5202214700000001);
  const Scalar _tmp83 = _tmp33 + Scalar(8.3888750099999996);
  const Scalar _tmp84 = std::pow(Scalar(std::pow(_tmp82, Scalar(2)) + std::pow(_tmp83, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp85 = _tmp83 * _tmp84;
  const Scalar _tmp86 = _tmp82 * _tmp84;
  const Scalar _tmp87 = fh1 * (_tmp25 * _tmp85 - _tmp32 * _tmp86);
  const Scalar _tmp88 = Scalar(1.0) * _tmp43;
  const Scalar _tmp89 = -_tmp88;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp66 + _tmp89);
  const Scalar _tmp91 = Scalar(1.0) * _tmp40;
  const Scalar _tmp92 = _tmp90 * (-_tmp69 + _tmp91);
  const Scalar _tmp93 = _tmp38 * _tmp73;
  const Scalar _tmp94 = _tmp11 - _tmp14;
  const Scalar _tmp95 = _tmp8 + _tmp94;
  const Scalar _tmp96 = -_tmp64 * _tmp93 + _tmp74 * _tmp95;
  const Scalar _tmp97 = _tmp80 * _tmp96;
  const Scalar _tmp98 = -_tmp73 * _tmp95 + _tmp93;
  const Scalar _tmp99 = -_tmp80 * _tmp98 + _tmp92 * _tmp97;
  const Scalar _tmp100 = _tmp65 * _tmp75;
  const Scalar _tmp101 = _tmp38 * _tmp64;
  const Scalar _tmp102 = _tmp7 + _tmp94;
  const Scalar _tmp103 = -_tmp100 * _tmp96 - _tmp101 * _tmp55 + _tmp102 * _tmp63;
  const Scalar _tmp104 = -_tmp100 * _tmp98 - _tmp102 * _tmp55 - _tmp103 * _tmp92 + _tmp38 * _tmp55;
  const Scalar _tmp105 = Scalar(1.0) / (_tmp104);
  const Scalar _tmp106 = _tmp105 * _tmp77;
  const Scalar _tmp107 = _tmp104 * _tmp78;
  const Scalar _tmp108 = _tmp107 * (-_tmp106 * _tmp99 - Scalar(1.0) * _tmp76);
  const Scalar _tmp109 = _tmp108 + _tmp99;
  const Scalar _tmp110 = _tmp105 * _tmp55;
  const Scalar _tmp111 = _tmp105 * _tmp65;
  const Scalar _tmp112 = -_tmp109 * _tmp111 + Scalar(1.0);
  const Scalar _tmp113 = _tmp73 * _tmp75;
  const Scalar _tmp114 = _tmp85 * fh1;
  const Scalar _tmp115 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp116 = _tmp88 * _tmp92 + _tmp91;
  const Scalar _tmp117 = 0;
  const Scalar _tmp118 = _tmp111 * _tmp117;
  const Scalar _tmp119 = _tmp105 * _tmp117;
  const Scalar _tmp120 = _tmp64 * _tmp75;
  const Scalar _tmp121 = _tmp101 + _tmp120 * _tmp96;
  const Scalar _tmp122 = _tmp120 * _tmp98 - _tmp121 * _tmp92 - _tmp38;
  const Scalar _tmp123 = _tmp107 * (-_tmp106 * _tmp122 - _tmp62 + _tmp64 * _tmp76);
  const Scalar _tmp124 = _tmp122 + _tmp123;
  const Scalar _tmp125 = -_tmp111 * _tmp124 - _tmp64;
  const Scalar _tmp126 = _tmp86 * fh1;
  const Scalar _tmp127 = -_tmp114 * _tmp61 * (_tmp109 * _tmp110 + _tmp112 * _tmp113) -
                         _tmp115 * _tmp61 * (-_tmp113 * _tmp118 + _tmp119 * _tmp55) -
                         _tmp126 * _tmp61 * (_tmp110 * _tmp124 + _tmp113 * _tmp125 + Scalar(1.0)) -
                         _tmp61 * _tmp87 * (_tmp55 * _tmp79 - _tmp73 * _tmp81);
  const Scalar _tmp128 = Scalar(1.0) / (_tmp127);
  const Scalar _tmp129 = _tmp47 + _tmp89;
  const Scalar _tmp130 = _tmp129 * _tmp92;
  const Scalar _tmp131 = Scalar(1.0) / (-_tmp130 - _tmp51 + _tmp91);
  const Scalar _tmp132 = Scalar(1.0) * _tmp131;
  const Scalar _tmp133 = _tmp129 * _tmp131;
  const Scalar _tmp134 = _tmp103 * _tmp105;
  const Scalar _tmp135 = _tmp121 + _tmp123 * _tmp133 - _tmp124 * _tmp134;
  const Scalar _tmp136 = Scalar(1.0) * _tmp90;
  const Scalar _tmp137 = _tmp116 * _tmp131;
  const Scalar _tmp138 = _tmp90 * (-_tmp117 * _tmp134 - _tmp129 * _tmp137 + _tmp89);
  const Scalar _tmp139 = _tmp132 * _tmp92;
  const Scalar _tmp140 = _tmp90 * (_tmp130 * _tmp132 + Scalar(1.0));
  const Scalar _tmp141 = _tmp16 * fh1;
  const Scalar _tmp142 = -_tmp141 * _tmp85 - Scalar(3.29616) * _tmp29 - _tmp32 * fv1;
  const Scalar _tmp143 = _tmp129 * _tmp90;
  const Scalar _tmp144 = _tmp141 * _tmp86 + Scalar(3.29616) * _tmp19 + _tmp25 * fv1;
  const Scalar _tmp145 = _tmp107 * _tmp132;
  const Scalar _tmp146 = -_tmp103 * _tmp79 + _tmp129 * _tmp145;
  const Scalar _tmp147 = _tmp108 * _tmp133 - _tmp109 * _tmp134 - _tmp97;
  const Scalar _tmp148 =
      std::asinh(_tmp128 * (Scalar(1.0) * _tmp114 * (_tmp108 * _tmp132 - _tmp136 * _tmp147) +
                            Scalar(1.0) * _tmp115 *
                                (-_tmp116 * _tmp132 - Scalar(1.0) * _tmp138 + Scalar(1.0)) +
                            Scalar(1.0) * _tmp126 * (_tmp123 * _tmp132 - _tmp135 * _tmp136) +
                            Scalar(1.0) * _tmp142 * (_tmp139 - Scalar(1.0) * _tmp140) +
                            Scalar(1.0) * _tmp144 * (_tmp132 * _tmp143 - _tmp132) +
                            Scalar(1.0) * _tmp87 * (-_tmp136 * _tmp146 + _tmp145)));
  const Scalar _tmp149 = Scalar(9.6622558468725703) * _tmp127;
  const Scalar _tmp150 =
      Scalar(69.216682114881593) *
          std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp67 - 1), Scalar(2)) +
      Scalar(3.9500536956656402) *
          std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp70 - 1), Scalar(2));
  const Scalar _tmp151 = _tmp112 * _tmp114 * _tmp75 - _tmp115 * _tmp118 * _tmp75 +
                         _tmp125 * _tmp126 * _tmp75 - _tmp81 * _tmp87;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 = _tmp132 * _tmp144;
  const Scalar _tmp154 = std::asinh(_tmp152 * (_tmp114 * _tmp147 * _tmp90 + _tmp115 * _tmp138 +
                                               _tmp126 * _tmp135 * _tmp90 + _tmp140 * _tmp142 -
                                               _tmp143 * _tmp153 + _tmp146 * _tmp87 * _tmp90));
  const Scalar _tmp155 = Scalar(9.6622558468725703) * _tmp151;
  const Scalar _tmp156 = _tmp105 * _tmp109 * _tmp114 + _tmp105 * _tmp124 * _tmp126 +
                         _tmp115 * _tmp119 + _tmp79 * _tmp87;
  const Scalar _tmp157 = Scalar(1.0) / (_tmp156);
  const Scalar _tmp158 = std::asinh(_tmp157 * (-_tmp108 * _tmp114 * _tmp131 + _tmp115 * _tmp137 -
                                               _tmp123 * _tmp126 * _tmp131 - _tmp139 * _tmp142 -
                                               _tmp145 * _tmp87 + _tmp153));
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp156;
  const Scalar _tmp160 = Scalar(23.361089618893828) *
                             std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp48), Scalar(2)) +
                         Scalar(3.2278567553341642) *
                             std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp52 - 1), Scalar(2));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp37 * (-std::sinh(Scalar(1.0) * _tmp36) -
                std::sinh(Scalar(0.1034955) * _tmp35 * (-std::sqrt(_tmp34) - _tmp36 * _tmp37))) -
      Scalar(8.4693136199999994) *
          std::sqrt(Scalar(Scalar(0.013941309530580858) * _tmp34 +
                           std::pow(Scalar(-Scalar(0.11807332268798426) * _tmp16 -
                                           Scalar(0.11807332268798426) * p_init2 + 1),
                                    Scalar(2))));
  _res(1, 0) =
      _tmp149 *
          (-std::sinh(Scalar(1.0) * _tmp148) -
           std::sinh(Scalar(0.1034955) * _tmp128 * (-_tmp148 * _tmp149 - std::sqrt(_tmp45)))) -
      Scalar(8.36416322) *
          std::sqrt(Scalar(Scalar(0.014294040284261563) * _tmp45 +
                           std::pow(Scalar(-Scalar(0.1195576860108189) * _tmp38 -
                                           Scalar(0.1195576860108189) * p_init2 + 1),
                                    Scalar(2))));
  _res(2, 0) =
      _tmp155 *
          (-std::sinh(Scalar(1.0) * _tmp154) -
           std::sinh(Scalar(0.1034955) * _tmp152 * (-std::sqrt(_tmp150) - _tmp154 * _tmp155))) -
      Scalar(8.4718465799999993) *
          std::sqrt(Scalar(Scalar(0.013932974275675287) * _tmp150 +
                           std::pow(Scalar(-Scalar(0.11803802046660766) * _tmp95 -
                                           Scalar(0.11803802046660766) * p_init2 + 1),
                                    Scalar(2))));
  _res(3, 0) =
      _tmp159 *
          (-std::sinh(Scalar(1.0) * _tmp158) -
           std::sinh(Scalar(0.1034955) * _tmp157 * (-_tmp158 * _tmp159 - std::sqrt(_tmp160)))) -
      Scalar(8.3700199099999999) *
          std::sqrt(Scalar(Scalar(0.01427404356387209) * _tmp160 +
                           std::pow(Scalar(-Scalar(0.11947402882581673) * _tmp102 -
                                           Scalar(0.11947402882581673) * p_init2 + 1),
                                    Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
