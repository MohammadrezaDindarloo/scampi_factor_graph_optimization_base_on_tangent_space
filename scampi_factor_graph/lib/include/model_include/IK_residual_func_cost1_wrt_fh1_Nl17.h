// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fh1_Nl17
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFh1Nl17(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 653

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (209)
  const Scalar _tmp0 = std::pow(fh1, Scalar(-2));
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp7 = 2 * _tmp3 * _tmp6;
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = _tmp7 + _tmp9;
  const Scalar _tmp11 = -Scalar(0.010999999999999999) * _tmp10;
  const Scalar _tmp12 = 2 * _tmp1;
  const Scalar _tmp13 = _tmp12 * _tmp6;
  const Scalar _tmp14 = _tmp3 * _tmp8;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp11 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp5;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp20 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp22 = _tmp12 * _tmp3;
  const Scalar _tmp23 = _tmp6 * _tmp8;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = _tmp21 + _tmp25;
  const Scalar _tmp27 = _tmp19 + _tmp26;
  const Scalar _tmp28 = _tmp27 + position_vector(1, 0);
  const Scalar _tmp29 = Scalar(1.0) / (fh1);
  const Scalar _tmp30 = _tmp29 * fv1;
  const Scalar _tmp31 = std::asinh(_tmp30);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * _tmp31;
  const Scalar _tmp33 =
      -_tmp32 * fh1 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp18), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp28), Scalar(2))));
  const Scalar _tmp34 = Scalar(0.71007031138673404) * _tmp29;
  const Scalar _tmp35 = _tmp33 * _tmp34;
  const Scalar _tmp36 =
      std::pow(Scalar(_tmp0 * std::pow(fv1, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp37 = Scalar(1.0) * _tmp31;
  const Scalar _tmp38 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp39 = -_tmp19;
  const Scalar _tmp40 = _tmp26 + _tmp39;
  const Scalar _tmp41 = Scalar(1.0) * _tmp40;
  const Scalar _tmp42 = -_tmp41;
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp44 = -_tmp43;
  const Scalar _tmp45 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp46 = Scalar(0.20999999999999999) * _tmp7 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp47 = _tmp45 - _tmp46;
  const Scalar _tmp48 = _tmp44 + _tmp47;
  const Scalar _tmp49 = -_tmp21 + _tmp25;
  const Scalar _tmp50 = _tmp39 + _tmp49;
  const Scalar _tmp51 = _tmp50 + position_vector(1, 0);
  const Scalar _tmp52 = _tmp51 + Scalar(110.0);
  const Scalar _tmp53 = -_tmp5;
  const Scalar _tmp54 = _tmp11 - _tmp15;
  const Scalar _tmp55 = _tmp53 + _tmp54;
  const Scalar _tmp56 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp57 = _tmp56 + Scalar(125.0);
  const Scalar _tmp58 = std::pow(Scalar(std::pow(_tmp52, Scalar(2)) + std::pow(_tmp57, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp59 = _tmp52 * _tmp58;
  const Scalar _tmp60 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp61 = _tmp60 + Scalar(-110.0);
  const Scalar _tmp62 = _tmp16 + _tmp53;
  const Scalar _tmp63 = _tmp62 + position_vector(0, 0);
  const Scalar _tmp64 = _tmp63 + Scalar(125.0);
  const Scalar _tmp65 = Scalar(1.0) / (_tmp64);
  const Scalar _tmp66 = _tmp61 * _tmp65;
  const Scalar _tmp67 = _tmp57 * _tmp58;
  const Scalar _tmp68 = -_tmp59 + _tmp66 * _tmp67;
  const Scalar _tmp69 = _tmp19 + _tmp49;
  const Scalar _tmp70 = _tmp69 + position_vector(1, 0);
  const Scalar _tmp71 = _tmp70 + Scalar(110.0);
  const Scalar _tmp72 = _tmp5 + _tmp54;
  const Scalar _tmp73 = _tmp72 + position_vector(0, 0);
  const Scalar _tmp74 = _tmp73 + Scalar(-125.0);
  const Scalar _tmp75 = std::pow(Scalar(std::pow(_tmp71, Scalar(2)) + std::pow(_tmp74, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp76 = _tmp71 * _tmp75;
  const Scalar _tmp77 = _tmp74 * _tmp75;
  const Scalar _tmp78 = Scalar(1.0) / (_tmp66 * _tmp77 - _tmp76);
  const Scalar _tmp79 = _tmp45 + _tmp46;
  const Scalar _tmp80 = _tmp44 + _tmp79;
  const Scalar _tmp81 = _tmp43 + _tmp47;
  const Scalar _tmp82 = _tmp77 * _tmp81;
  const Scalar _tmp83 = _tmp78 * (-_tmp66 * _tmp82 + _tmp76 * _tmp80);
  const Scalar _tmp84 = _tmp66 * _tmp81;
  const Scalar _tmp85 = _tmp48 * _tmp59 - _tmp67 * _tmp84 - _tmp68 * _tmp83;
  const Scalar _tmp86 = _tmp78 * (-_tmp77 * _tmp80 + _tmp82);
  const Scalar _tmp87 = Scalar(1.0) / (_tmp42 + _tmp69);
  const Scalar _tmp88 = Scalar(1.0) * _tmp62;
  const Scalar _tmp89 = -_tmp72 + _tmp88;
  const Scalar _tmp90 = _tmp87 * _tmp89;
  const Scalar _tmp91 = -_tmp48 * _tmp67 + _tmp67 * _tmp81 - _tmp68 * _tmp86 - _tmp85 * _tmp90;
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = _tmp41 * _tmp90 + _tmp88;
  const Scalar _tmp94 = 0;
  const Scalar _tmp95 = _tmp42 + _tmp50;
  const Scalar _tmp96 = _tmp90 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (-_tmp55 + _tmp88 - _tmp96);
  const Scalar _tmp98 = _tmp93 * _tmp97;
  const Scalar _tmp99 = _tmp42 - _tmp85 * _tmp94 - _tmp95 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) * _tmp87;
  const Scalar _tmp101 = Scalar(1.0) * _tmp97;
  const Scalar _tmp102 = _tmp28 + Scalar(-110.0);
  const Scalar _tmp103 = _tmp18 + Scalar(-125.0);
  const Scalar _tmp104 =
      std::pow(Scalar(std::pow(_tmp102, Scalar(2)) + std::pow(_tmp103, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = _tmp103 * _tmp104;
  const Scalar _tmp106 = _tmp102 * _tmp104;
  const Scalar _tmp107 = -_tmp105 * _tmp27 + _tmp106 * _tmp17;
  const Scalar _tmp108 =
      std::sqrt(Scalar(std::pow(_tmp61, Scalar(2)) + std::pow(_tmp64, Scalar(2))));
  const Scalar _tmp109 = Scalar(1.0) / (_tmp108);
  const Scalar _tmp110 = _tmp108 * _tmp65;
  const Scalar _tmp111 = _tmp110 * (-_tmp109 * _tmp40 * _tmp64 + _tmp109 * _tmp61 * _tmp62);
  const Scalar _tmp112 = _tmp78 * (_tmp111 * _tmp77 + _tmp69 * _tmp77 - _tmp72 * _tmp76);
  const Scalar _tmp113 = _tmp111 * _tmp67 - _tmp112 * _tmp68 + _tmp50 * _tmp67 - _tmp55 * _tmp59;
  const Scalar _tmp114 = Scalar(1.0) / (_tmp113);
  const Scalar _tmp115 = Scalar(1.0) * _tmp114;
  const Scalar _tmp116 = _tmp114 * _tmp91;
  const Scalar _tmp117 = _tmp101 * _tmp95;
  const Scalar _tmp118 = -_tmp115 * _tmp85 + _tmp116 * _tmp117;
  const Scalar _tmp119 = _tmp101 * _tmp116;
  const Scalar _tmp120 = Scalar(1.0) * _tmp107 * (-_tmp100 * _tmp118 + _tmp119);
  const Scalar _tmp121 = _tmp66 * _tmp83 + _tmp84;
  const Scalar _tmp122 = -_tmp121 * _tmp90 + _tmp66 * _tmp86 - _tmp81;
  const Scalar _tmp123 = _tmp113 * _tmp92;
  const Scalar _tmp124 = _tmp116 * (-_tmp111 + _tmp112 * _tmp66 - _tmp122 * _tmp123);
  const Scalar _tmp125 = _tmp92 * (_tmp122 + _tmp124);
  const Scalar _tmp126 = _tmp95 * _tmp97;
  const Scalar _tmp127 = _tmp121 + _tmp124 * _tmp126 - _tmp125 * _tmp85;
  const Scalar _tmp128 = Scalar(1.0) * _tmp105 * (-_tmp100 * _tmp127 + _tmp101 * _tmp124);
  const Scalar _tmp129 = _tmp43 + _tmp79;
  const Scalar _tmp130 = _tmp129 * fh1;
  const Scalar _tmp131 = -_tmp106 * _tmp130 - Scalar(40.024799999999999) * _tmp24 - _tmp27 * fv1;
  const Scalar _tmp132 = _tmp101 * _tmp96 + Scalar(1.0);
  const Scalar _tmp133 = _tmp101 * _tmp90;
  const Scalar _tmp134 = -Scalar(1.0) * _tmp100 * _tmp132 + Scalar(1.0) * _tmp133;
  const Scalar _tmp135 = Scalar(40.024799999999999) * _tmp10 + _tmp105 * _tmp130 + _tmp17 * fv1;
  const Scalar _tmp136 = _tmp117 * _tmp87;
  const Scalar _tmp137 = -Scalar(1.0) * _tmp101 + Scalar(1.0) * _tmp136;
  const Scalar _tmp138 = _tmp100 * _tmp83 * _tmp89 - Scalar(1.0) * _tmp86;
  const Scalar _tmp139 = _tmp116 * (-Scalar(1.0) * _tmp112 - _tmp123 * _tmp138);
  const Scalar _tmp140 = _tmp92 * (_tmp138 + _tmp139);
  const Scalar _tmp141 = _tmp126 * _tmp139 - _tmp140 * _tmp85 - Scalar(1.0) * _tmp83;
  const Scalar _tmp142 = Scalar(1.0) * _tmp106 * (-_tmp100 * _tmp141 + _tmp101 * _tmp139);
  const Scalar _tmp143 =
      _tmp120 * fh1 + _tmp128 * fh1 + _tmp131 * _tmp134 + _tmp135 * _tmp137 + _tmp142 * fh1 +
      Scalar(1.0) * _tmp38 * (-_tmp100 * _tmp99 - _tmp101 * _tmp93 + Scalar(1.0));
  const Scalar _tmp144 = _tmp78 * (-_tmp140 * _tmp68 + Scalar(1.0));
  const Scalar _tmp145 = _tmp106 * _tmp110 * (_tmp140 * _tmp67 + _tmp144 * _tmp77);
  const Scalar _tmp146 = _tmp78 * (-_tmp125 * _tmp68 - _tmp66);
  const Scalar _tmp147 = _tmp105 * _tmp110 * (_tmp125 * _tmp67 + _tmp146 * _tmp77 + Scalar(1.0));
  const Scalar _tmp148 = _tmp68 * _tmp78;
  const Scalar _tmp149 = _tmp148 * _tmp77;
  const Scalar _tmp150 = _tmp107 * _tmp110 * (-_tmp115 * _tmp149 + _tmp115 * _tmp67);
  const Scalar _tmp151 = -_tmp110 * _tmp38 * (-_tmp149 * _tmp94 + _tmp67 * _tmp94) - _tmp145 * fh1 -
                         _tmp147 * fh1 - _tmp150 * fh1;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 = std::asinh(_tmp143 * _tmp152);
  const Scalar _tmp154 = Scalar(1.0) * _tmp153;
  const Scalar _tmp155 = _tmp106 * _tmp129;
  const Scalar _tmp156 = _tmp105 * _tmp129;
  const Scalar _tmp157 = std::pow(_tmp151, Scalar(-2));
  const Scalar _tmp158 = -_tmp145 - _tmp147 - _tmp150;
  const Scalar _tmp159 = _tmp157 * _tmp158;
  const Scalar _tmp160 = (-_tmp143 * _tmp159 + _tmp152 * (_tmp120 + _tmp128 - _tmp134 * _tmp155 +
                                                          _tmp137 * _tmp156 + _tmp142)) /
                         std::sqrt(Scalar(std::pow(_tmp143, Scalar(2)) * _tmp157 + 1));
  const Scalar _tmp161 = Scalar(1.4083112389913199) * _tmp151;
  const Scalar _tmp162 =
      -_tmp153 * _tmp161 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp60), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp63 - 1), Scalar(2))));
  const Scalar _tmp163 = Scalar(0.71007031138673404) * _tmp152;
  const Scalar _tmp164 = _tmp162 * _tmp163;
  const Scalar _tmp165 = Scalar(1.4083112389913199) * _tmp158;
  const Scalar _tmp166 = _tmp106 * _tmp144;
  const Scalar _tmp167 = _tmp38 * _tmp94;
  const Scalar _tmp168 = _tmp105 * _tmp146;
  const Scalar _tmp169 = _tmp107 * _tmp115;
  const Scalar _tmp170 = _tmp169 * fh1;
  const Scalar _tmp171 = -_tmp148 * _tmp167 - _tmp148 * _tmp170 + _tmp166 * fh1 + _tmp168 * fh1;
  const Scalar _tmp172 = Scalar(1.0) / (_tmp171);
  const Scalar _tmp173 = _tmp106 * _tmp141 * _tmp87;
  const Scalar _tmp174 = _tmp132 * _tmp87;
  const Scalar _tmp175 = _tmp101 * _tmp135;
  const Scalar _tmp176 = _tmp107 * _tmp118 * _tmp87;
  const Scalar _tmp177 = _tmp105 * _tmp127 * _tmp87;
  const Scalar _tmp178 = _tmp131 * _tmp174 + _tmp173 * fh1 - _tmp175 * _tmp87 * _tmp95 +
                         _tmp176 * fh1 + _tmp177 * fh1 + _tmp38 * _tmp87 * _tmp99;
  const Scalar _tmp179 = std::asinh(_tmp172 * _tmp178);
  const Scalar _tmp180 = Scalar(1.4083112389913199) * _tmp171;
  const Scalar _tmp181 =
      -_tmp179 * _tmp180 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp73), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp70 - 1), Scalar(2))));
  const Scalar _tmp182 = Scalar(0.71007031138673404) * _tmp172;
  const Scalar _tmp183 = _tmp181 * _tmp182;
  const Scalar _tmp184 = Scalar(1.0) * _tmp179;
  const Scalar _tmp185 = -_tmp148 * _tmp169 + _tmp166 + _tmp168;
  const Scalar _tmp186 = Scalar(1.4083112389913199) * _tmp185;
  const Scalar _tmp187 = std::pow(_tmp171, Scalar(-2));
  const Scalar _tmp188 = _tmp185 * _tmp187;
  const Scalar _tmp189 =
      (_tmp172 * (-_tmp136 * _tmp156 - _tmp155 * _tmp174 + _tmp173 + _tmp176 + _tmp177) -
       _tmp178 * _tmp188) /
      std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp187 + 1));
  const Scalar _tmp190 = _tmp106 * _tmp140;
  const Scalar _tmp191 = _tmp105 * _tmp125;
  const Scalar _tmp192 = _tmp167 + _tmp170 + _tmp190 * fh1 + _tmp191 * fh1;
  const Scalar _tmp193 = Scalar(1.0) / (_tmp192);
  const Scalar _tmp194 = _tmp105 * _tmp124 * _tmp97;
  const Scalar _tmp195 = _tmp107 * _tmp119;
  const Scalar _tmp196 = _tmp106 * _tmp139 * _tmp97;
  const Scalar _tmp197 = -_tmp131 * _tmp133 + _tmp175 - _tmp194 * fh1 - _tmp195 * fh1 -
                         _tmp196 * fh1 + _tmp38 * _tmp98;
  const Scalar _tmp198 = std::asinh(_tmp193 * _tmp197);
  const Scalar _tmp199 = Scalar(1.0) * _tmp198;
  const Scalar _tmp200 = Scalar(1.4083112389913199) * _tmp192;
  const Scalar _tmp201 =
      -_tmp198 * _tmp200 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp51 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp56 - 1), Scalar(2))));
  const Scalar _tmp202 = Scalar(0.71007031138673404) * _tmp193;
  const Scalar _tmp203 = _tmp201 * _tmp202;
  const Scalar _tmp204 = _tmp169 + _tmp190 + _tmp191;
  const Scalar _tmp205 = Scalar(1.4083112389913199) * _tmp204;
  const Scalar _tmp206 = std::pow(_tmp192, Scalar(-2));
  const Scalar _tmp207 = _tmp204 * _tmp206;
  const Scalar _tmp208 =
      (_tmp193 * (_tmp101 * _tmp156 + _tmp133 * _tmp155 - _tmp194 - _tmp195 - _tmp196) -
       _tmp197 * _tmp207) /
      std::sqrt(Scalar(std::pow(_tmp197, Scalar(2)) * _tmp206 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = -Scalar(48.000000000000128) * _tmp29 -
               Scalar(1.4083112389913199) * fh1 *
                   (-Scalar(1.0) * _tmp0 * _tmp36 * fv1 * std::sinh(_tmp37) -
                    Scalar(34.083374946563197) * _tmp0 -
                    (-Scalar(0.71007031138673404) * _tmp0 * _tmp33 +
                     _tmp34 * (Scalar(1.4083112389913199) * _tmp30 * _tmp36 - _tmp32)) *
                        std::sinh(_tmp35)) +
               Scalar(1.4083112389913199) * std::cosh(_tmp35) -
               Scalar(1.4083112389913199) * std::cosh(_tmp37);
  _res(1, 0) =
      -_tmp161 *
          (-Scalar(34.083374946563197) * _tmp159 + Scalar(1.0) * _tmp160 * std::sinh(_tmp154) -
           (-Scalar(0.71007031138673404) * _tmp159 * _tmp162 +
            _tmp163 * (-_tmp153 * _tmp165 - _tmp160 * _tmp161)) *
               std::sinh(_tmp164)) -
      _tmp165 * (Scalar(34.083374946563197) * _tmp152 + std::cosh(_tmp154) - std::cosh(_tmp164));
  _res(2, 0) =
      -_tmp180 *
          (-Scalar(34.083374946563197) * _tmp188 + Scalar(1.0) * _tmp189 * std::sinh(_tmp184) -
           (-Scalar(0.71007031138673404) * _tmp181 * _tmp188 +
            _tmp182 * (-_tmp179 * _tmp186 - _tmp180 * _tmp189)) *
               std::sinh(_tmp183)) -
      _tmp186 * (Scalar(34.083374946563197) * _tmp172 - std::cosh(_tmp183) + std::cosh(_tmp184));
  _res(3, 0) =
      -_tmp200 *
          (-Scalar(34.083374946563197) * _tmp207 + Scalar(1.0) * _tmp208 * std::sinh(_tmp199) -
           (-Scalar(0.71007031138673404) * _tmp201 * _tmp207 +
            _tmp202 * (-_tmp198 * _tmp205 - _tmp200 * _tmp208)) *
               std::sinh(_tmp203)) -
      _tmp205 * (Scalar(34.083374946563197) * _tmp193 + std::cosh(_tmp199) - std::cosh(_tmp203));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
