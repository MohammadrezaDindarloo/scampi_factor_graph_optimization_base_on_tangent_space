// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl20
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl20(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 600

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (194)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp10 = 2 * _tmp9;
  const Scalar _tmp11 = _tmp10 * _tmp5;
  const Scalar _tmp12 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp13 = _tmp12 * _tmp3;
  const Scalar _tmp14 = _tmp11 + _tmp13;
  const Scalar _tmp15 = -Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp10 * _tmp3;
  const Scalar _tmp17 = _tmp12 * _tmp5;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp15 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp8;
  const Scalar _tmp21 = _tmp20 + position_vector(0, 0);
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = 2 * _tmp3 * _tmp5;
  const Scalar _tmp25 = _tmp12 * _tmp9;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp27;
  const Scalar _tmp29 = -2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp29 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp31 = _tmp28 + _tmp30;
  const Scalar _tmp32 = _tmp23 + _tmp31;
  const Scalar _tmp33 = _tmp32 + position_vector(1, 0);
  const Scalar _tmp34 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp35 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp36 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp37 = -Scalar(0.010999999999999999) * _tmp29 -
                        Scalar(0.010999999999999999) * _tmp4 + Scalar(-0.010999999999999999);
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp39 = _tmp37 + _tmp38;
  const Scalar _tmp40 = _tmp36 + _tmp39;
  const Scalar _tmp41 = _tmp22 + _tmp31;
  const Scalar _tmp42 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(-110.0);
  const Scalar _tmp44 = _tmp19 + _tmp7;
  const Scalar _tmp45 = _tmp44 + position_vector(0, 0);
  const Scalar _tmp46 = _tmp45 + Scalar(-125.0);
  const Scalar _tmp47 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp46, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp48 = _tmp46 * _tmp47;
  const Scalar _tmp49 = _tmp37 - _tmp38;
  const Scalar _tmp50 = _tmp36 + _tmp49;
  const Scalar _tmp51 = _tmp15 - _tmp18;
  const Scalar _tmp52 = _tmp51 + _tmp7;
  const Scalar _tmp53 = _tmp52 + position_vector(0, 0);
  const Scalar _tmp54 = _tmp53 + Scalar(-125.0);
  const Scalar _tmp55 = Scalar(1.0) / (_tmp54);
  const Scalar _tmp56 = -_tmp30;
  const Scalar _tmp57 = _tmp28 + _tmp56;
  const Scalar _tmp58 = _tmp22 + _tmp57;
  const Scalar _tmp59 = _tmp58 + position_vector(1, 0);
  const Scalar _tmp60 = _tmp59 + Scalar(110.0);
  const Scalar _tmp61 = _tmp55 * _tmp60;
  const Scalar _tmp62 = _tmp50 * _tmp61;
  const Scalar _tmp63 = -_tmp36;
  const Scalar _tmp64 = _tmp49 + _tmp63;
  const Scalar _tmp65 = _tmp23 + _tmp57;
  const Scalar _tmp66 = _tmp65 + position_vector(1, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(110.0);
  const Scalar _tmp68 = _tmp51 + _tmp8;
  const Scalar _tmp69 = _tmp68 + position_vector(0, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(125.0);
  const Scalar _tmp71 = std::pow(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp70, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp72 = _tmp67 * _tmp71;
  const Scalar _tmp73 = _tmp70 * _tmp71;
  const Scalar _tmp74 = -_tmp62 * _tmp73 + _tmp64 * _tmp72;
  const Scalar _tmp75 = Scalar(1.0) / (_tmp61 * _tmp73 - _tmp72);
  const Scalar _tmp76 = _tmp43 * _tmp47;
  const Scalar _tmp77 = _tmp48 * _tmp61 - _tmp76;
  const Scalar _tmp78 = _tmp75 * _tmp77;
  const Scalar _tmp79 = _tmp40 * _tmp76 - _tmp48 * _tmp62 - _tmp74 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) * _tmp58;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp65 + _tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp52;
  const Scalar _tmp84 = _tmp82 * (-_tmp68 + _tmp83);
  const Scalar _tmp85 = _tmp50 * _tmp73 - _tmp64 * _tmp73;
  const Scalar _tmp86 = -_tmp40 * _tmp48 + _tmp48 * _tmp50 - _tmp78 * _tmp85 - _tmp79 * _tmp84;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp88 = _tmp80 * _tmp84 + _tmp83;
  const Scalar _tmp89 = 0;
  const Scalar _tmp90 = _tmp87 * _tmp89;
  const Scalar _tmp91 = _tmp73 * _tmp78;
  const Scalar _tmp92 =
      std::sqrt(Scalar(std::pow(_tmp54, Scalar(2)) + std::pow(_tmp60, Scalar(2))));
  const Scalar _tmp93 = _tmp55 * _tmp92;
  const Scalar _tmp94 = _tmp93 * (_tmp48 * _tmp90 - _tmp90 * _tmp91);
  const Scalar _tmp95 = _tmp61 * _tmp75;
  const Scalar _tmp96 = _tmp62 + _tmp74 * _tmp95;
  const Scalar _tmp97 = -_tmp50 - _tmp84 * _tmp96 + _tmp85 * _tmp95;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp99 = _tmp93 * (_tmp52 * _tmp60 * _tmp98 - _tmp54 * _tmp58 * _tmp98);
  const Scalar _tmp100 = _tmp65 * _tmp73 - _tmp68 * _tmp72 + _tmp73 * _tmp99;
  const Scalar _tmp101 = -_tmp100 * _tmp78 + _tmp41 * _tmp48 - _tmp44 * _tmp76 + _tmp48 * _tmp99;
  const Scalar _tmp102 = _tmp101 * _tmp87;
  const Scalar _tmp103 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp104 = _tmp103 * _tmp86;
  const Scalar _tmp105 = _tmp104 * (_tmp100 * _tmp95 - _tmp102 * _tmp97 - _tmp99);
  const Scalar _tmp106 = _tmp105 + _tmp97;
  const Scalar _tmp107 = _tmp77 * _tmp87;
  const Scalar _tmp108 = -_tmp106 * _tmp107 - _tmp61;
  const Scalar _tmp109 = _tmp73 * _tmp75;
  const Scalar _tmp110 = _tmp48 * _tmp87;
  const Scalar _tmp111 = _tmp21 + Scalar(125.0);
  const Scalar _tmp112 = _tmp33 + Scalar(-110.0);
  const Scalar _tmp113 =
      std::pow(Scalar(std::pow(_tmp111, Scalar(2)) + std::pow(_tmp112, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp114 = _tmp111 * _tmp113;
  const Scalar _tmp115 = _tmp114 * fh1;
  const Scalar _tmp116 = Scalar(1.0) * _tmp75;
  const Scalar _tmp117 = _tmp116 * _tmp74;
  const Scalar _tmp118 = -_tmp116 * _tmp85 + _tmp117 * _tmp84;
  const Scalar _tmp119 = _tmp104 * (-_tmp100 * _tmp116 - _tmp102 * _tmp118);
  const Scalar _tmp120 = _tmp118 + _tmp119;
  const Scalar _tmp121 = -_tmp107 * _tmp120 + Scalar(1.0);
  const Scalar _tmp122 = _tmp112 * _tmp113;
  const Scalar _tmp123 = _tmp122 * fh1;
  const Scalar _tmp124 = Scalar(1.0) * _tmp103;
  const Scalar _tmp125 = fh1 * (-_tmp114 * _tmp32 + _tmp122 * _tmp20);
  const Scalar _tmp126 = -_tmp115 * _tmp93 * (_tmp106 * _tmp110 + _tmp108 * _tmp109 + Scalar(1.0)) -
                         _tmp123 * _tmp93 * (_tmp109 * _tmp121 + _tmp110 * _tmp120) -
                         _tmp125 * _tmp93 * (_tmp124 * _tmp48 - _tmp124 * _tmp91) - _tmp35 * _tmp94;
  const Scalar _tmp127 = Scalar(1.0) / (_tmp126);
  const Scalar _tmp128 = _tmp41 + _tmp81;
  const Scalar _tmp129 = _tmp128 * _tmp84;
  const Scalar _tmp130 = Scalar(1.0) / (-_tmp129 - _tmp44 + _tmp83);
  const Scalar _tmp131 = Scalar(1.0) * _tmp130;
  const Scalar _tmp132 = _tmp130 * _tmp88;
  const Scalar _tmp133 = _tmp79 * _tmp87;
  const Scalar _tmp134 = _tmp82 * (-_tmp128 * _tmp132 - _tmp133 * _tmp89 + _tmp81);
  const Scalar _tmp135 = -Scalar(1.0) * _tmp131 * _tmp88 - Scalar(1.0) * _tmp134 + Scalar(1.0);
  const Scalar _tmp136 = _tmp128 * _tmp130;
  const Scalar _tmp137 = -_tmp117 + _tmp119 * _tmp136 - _tmp120 * _tmp133;
  const Scalar _tmp138 = Scalar(1.0) * _tmp82;
  const Scalar _tmp139 = _tmp105 * _tmp136 - _tmp106 * _tmp133 + _tmp96;
  const Scalar _tmp140 = fh1 * (_tmp39 + _tmp63);
  const Scalar _tmp141 = -_tmp122 * _tmp140 - Scalar(40.024799999999999) * _tmp26 - _tmp32 * fv1;
  const Scalar _tmp142 = _tmp131 * _tmp84;
  const Scalar _tmp143 = _tmp129 * _tmp131 + Scalar(1.0);
  const Scalar _tmp144 = -Scalar(1.0) * _tmp138 * _tmp143 + Scalar(1.0) * _tmp142;
  const Scalar _tmp145 = _tmp114 * _tmp140 + Scalar(40.024799999999999) * _tmp14 + _tmp20 * fv1;
  const Scalar _tmp146 = _tmp128 * _tmp82;
  const Scalar _tmp147 = Scalar(1.0) * _tmp131 * _tmp146 - Scalar(1.0) * _tmp131;
  const Scalar _tmp148 = _tmp104 * _tmp131;
  const Scalar _tmp149 = -_tmp124 * _tmp79 + _tmp128 * _tmp148;
  const Scalar _tmp150 = Scalar(1.0) * _tmp115 * (_tmp105 * _tmp131 - _tmp138 * _tmp139) +
                         Scalar(1.0) * _tmp123 * (_tmp119 * _tmp131 - _tmp137 * _tmp138) +
                         Scalar(1.0) * _tmp125 * (-_tmp138 * _tmp149 + _tmp148) + _tmp135 * _tmp35 +
                         _tmp141 * _tmp144 + _tmp145 * _tmp147;
  const Scalar _tmp151 = std::asinh(_tmp127 * _tmp150);
  const Scalar _tmp152 = Scalar(1.4083112389913199) * _tmp126;
  const Scalar _tmp153 =
      -_tmp151 * _tmp152 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp53), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp59 - 1), Scalar(2))));
  const Scalar _tmp154 = Scalar(0.71007031138673404) * _tmp127;
  const Scalar _tmp155 = _tmp153 * _tmp154;
  const Scalar _tmp156 = Scalar(1.0) * _tmp151;
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp94;
  const Scalar _tmp158 = _tmp22 + _tmp27 + _tmp56;
  const Scalar _tmp159 = std::pow(_tmp126, Scalar(-2));
  const Scalar _tmp160 = _tmp159 * _tmp94;
  const Scalar _tmp161 =
      (_tmp127 * (-_tmp135 + _tmp144 * _tmp158 + _tmp147 * _tmp20) - _tmp150 * _tmp160) /
      std::sqrt(Scalar(std::pow(_tmp150, Scalar(2)) * _tmp159 + 1));
  const Scalar _tmp162 = _tmp124 * _tmp125;
  const Scalar _tmp163 = _tmp35 * _tmp90;
  const Scalar _tmp164 =
      _tmp108 * _tmp115 * _tmp75 + _tmp121 * _tmp123 * _tmp75 - _tmp162 * _tmp78 - _tmp163 * _tmp78;
  const Scalar _tmp165 = Scalar(1.0) / (_tmp164);
  const Scalar _tmp166 = _tmp82 * fh1;
  const Scalar _tmp167 = _tmp143 * _tmp82;
  const Scalar _tmp168 = _tmp131 * _tmp145;
  const Scalar _tmp169 = _tmp114 * _tmp139 * _tmp166 + _tmp122 * _tmp137 * _tmp166 +
                         _tmp125 * _tmp149 * _tmp82 + _tmp134 * _tmp35 + _tmp141 * _tmp167 -
                         _tmp146 * _tmp168;
  const Scalar _tmp170 = std::asinh(_tmp165 * _tmp169);
  const Scalar _tmp171 = Scalar(1.4083112389913199) * _tmp164;
  const Scalar _tmp172 =
      -_tmp170 * _tmp171 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp66 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp69 - 1), Scalar(2))));
  const Scalar _tmp173 = Scalar(0.71007031138673404) * _tmp165;
  const Scalar _tmp174 = _tmp172 * _tmp173;
  const Scalar _tmp175 = std::pow(_tmp164, Scalar(-2));
  const Scalar _tmp176 = _tmp175 * _tmp78 * _tmp90;
  const Scalar _tmp177 = _tmp131 * _tmp20;
  const Scalar _tmp178 =
      (_tmp165 * (-_tmp134 - _tmp146 * _tmp177 + _tmp158 * _tmp167) - _tmp169 * _tmp176) /
      std::sqrt(Scalar(std::pow(_tmp169, Scalar(2)) * _tmp175 + 1));
  const Scalar _tmp179 = Scalar(1.4083112389913199) * _tmp90;
  const Scalar _tmp180 = _tmp179 * _tmp78;
  const Scalar _tmp181 = Scalar(1.0) * _tmp170;
  const Scalar _tmp182 = -_tmp105 * _tmp115 * _tmp130 - _tmp119 * _tmp123 * _tmp130 -
                         _tmp125 * _tmp148 + _tmp132 * _tmp35 - _tmp141 * _tmp142 + _tmp168;
  const Scalar _tmp183 =
      _tmp106 * _tmp115 * _tmp87 + _tmp120 * _tmp123 * _tmp87 + _tmp162 + _tmp163;
  const Scalar _tmp184 = Scalar(1.0) / (_tmp183);
  const Scalar _tmp185 = std::asinh(_tmp182 * _tmp184);
  const Scalar _tmp186 = Scalar(1.4083112389913199) * _tmp183;
  const Scalar _tmp187 =
      -_tmp185 * _tmp186 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp42), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp45), Scalar(2))));
  const Scalar _tmp188 = Scalar(0.71007031138673404) * _tmp184;
  const Scalar _tmp189 = _tmp187 * _tmp188;
  const Scalar _tmp190 = std::pow(_tmp183, Scalar(-2));
  const Scalar _tmp191 = _tmp190 * _tmp90;
  const Scalar _tmp192 = (_tmp182 * _tmp191 + _tmp184 * (-_tmp132 - _tmp142 * _tmp158 + _tmp177)) /
                         std::sqrt(Scalar(std::pow(_tmp182, Scalar(2)) * _tmp190 + 1));
  const Scalar _tmp193 = Scalar(1.0) * _tmp185;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp34 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                         (-_tmp1 * _tmp34 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp33),
                                               Scalar(2)) +
                                  std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp21 - 1),
                                           Scalar(2)))))));
  _res(1, 0) = _tmp152 * (-Scalar(1.0) * _tmp161 * std::cosh(_tmp156) -
                          (-Scalar(0.71007031138673404) * _tmp153 * _tmp160 +
                           _tmp154 * (-_tmp151 * _tmp157 - _tmp152 * _tmp161)) *
                              std::cosh(_tmp155)) +
               _tmp157 * (-std::sinh(_tmp155) - std::sinh(_tmp156));
  _res(2, 0) = _tmp171 * (-Scalar(1.0) * _tmp178 * std::cosh(_tmp181) -
                          (-Scalar(0.71007031138673404) * _tmp172 * _tmp176 +
                           _tmp173 * (-_tmp170 * _tmp180 - _tmp171 * _tmp178)) *
                              std::cosh(_tmp174)) +
               _tmp180 * (-std::sinh(_tmp174) - std::sinh(_tmp181));
  _res(3, 0) = -_tmp179 * (-std::sinh(_tmp189) - std::sinh(_tmp193)) +
               _tmp186 * (-Scalar(1.0) * _tmp192 * std::cosh(_tmp193) -
                          (Scalar(0.71007031138673404) * _tmp187 * _tmp191 +
                           _tmp188 * (_tmp179 * _tmp185 - _tmp186 * _tmp192)) *
                              std::cosh(_tmp189));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
