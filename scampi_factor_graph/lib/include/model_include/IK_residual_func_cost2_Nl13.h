// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl13
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl13(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 530

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (158)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp8 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp9 = -Scalar(0.010999999999999999) * _tmp7 - Scalar(0.010999999999999999) * _tmp8;
  const Scalar _tmp10 = 2 * _tmp3;
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = _tmp0 * _tmp4;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp9;
  const Scalar _tmp15 = _tmp14 + _tmp6;
  const Scalar _tmp16 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp18 = _tmp11 + _tmp12;
  const Scalar _tmp19 = -Scalar(0.010999999999999999) * _tmp18;
  const Scalar _tmp20 = _tmp0 * _tmp10;
  const Scalar _tmp21 = _tmp1 * _tmp4;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp20 - Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp19 + _tmp22;
  const Scalar _tmp24 = _tmp17 + _tmp23;
  const Scalar _tmp25 = _tmp24 + position_vector(0, 0);
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp7 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp28 = _tmp2 - _tmp5;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = _tmp27 + _tmp29;
  const Scalar _tmp31 = _tmp26 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(1, 0);
  const Scalar _tmp33 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp25), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp32), Scalar(2));
  const Scalar _tmp34 = Scalar(1.0) / (fh1);
  const Scalar _tmp35 = std::asinh(_tmp34 * fv1);
  const Scalar _tmp36 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp37 = -_tmp26;
  const Scalar _tmp38 = _tmp30 + _tmp37;
  const Scalar _tmp39 = _tmp38 + position_vector(1, 0);
  const Scalar _tmp40 = _tmp39 + Scalar(110.0);
  const Scalar _tmp41 = _tmp19 - _tmp22;
  const Scalar _tmp42 = _tmp17 + _tmp41;
  const Scalar _tmp43 = _tmp42 + position_vector(0, 0);
  const Scalar _tmp44 = _tmp43 + Scalar(-125.0);
  const Scalar _tmp45 = std::pow(Scalar(std::pow(_tmp40, Scalar(2)) + std::pow(_tmp44, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp46 = _tmp44 * _tmp45;
  const Scalar _tmp47 = -_tmp6;
  const Scalar _tmp48 = _tmp14 + _tmp47;
  const Scalar _tmp49 = _tmp40 * _tmp45;
  const Scalar _tmp50 = -_tmp13 + _tmp9;
  const Scalar _tmp51 = _tmp47 + _tmp50;
  const Scalar _tmp52 = -_tmp27 + _tmp29;
  const Scalar _tmp53 = _tmp37 + _tmp52;
  const Scalar _tmp54 = _tmp53 + position_vector(1, 0);
  const Scalar _tmp55 = _tmp54 + Scalar(110.0);
  const Scalar _tmp56 = -_tmp17;
  const Scalar _tmp57 = _tmp41 + _tmp56;
  const Scalar _tmp58 = _tmp57 + position_vector(0, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(125.0);
  const Scalar _tmp60 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp61 = _tmp55 * _tmp60;
  const Scalar _tmp62 = _tmp51 * _tmp61;
  const Scalar _tmp63 = _tmp23 + _tmp56;
  const Scalar _tmp64 = _tmp63 + position_vector(0, 0);
  const Scalar _tmp65 = _tmp64 + Scalar(125.0);
  const Scalar _tmp66 = _tmp26 + _tmp52;
  const Scalar _tmp67 = _tmp66 + position_vector(1, 0);
  const Scalar _tmp68 = _tmp67 + Scalar(-110.0);
  const Scalar _tmp69 = std::pow(Scalar(std::pow(_tmp65, Scalar(2)) + std::pow(_tmp68, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp70 = _tmp65 * _tmp69;
  const Scalar _tmp71 = _tmp50 + _tmp6;
  const Scalar _tmp72 = _tmp68 * _tmp69;
  const Scalar _tmp73 = -_tmp62 * _tmp70 + _tmp71 * _tmp72;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp61 * _tmp70 - _tmp72);
  const Scalar _tmp75 = _tmp46 * _tmp61 - _tmp49;
  const Scalar _tmp76 = _tmp74 * _tmp75;
  const Scalar _tmp77 = -_tmp46 * _tmp62 + _tmp48 * _tmp49 - _tmp73 * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) * _tmp53;
  const Scalar _tmp79 = -_tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp66 + _tmp79);
  const Scalar _tmp81 = Scalar(1.0) * _tmp57;
  const Scalar _tmp82 = -_tmp63 + _tmp81;
  const Scalar _tmp83 = _tmp80 * _tmp82;
  const Scalar _tmp84 = _tmp51 * _tmp70 - _tmp70 * _tmp71;
  const Scalar _tmp85 = -_tmp46 * _tmp48 + _tmp46 * _tmp51 - _tmp76 * _tmp84 - _tmp77 * _tmp83;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp87 = Scalar(1.0) * _tmp80;
  const Scalar _tmp88 = Scalar(1.0) * _tmp74;
  const Scalar _tmp89 = _tmp73 * _tmp74 * _tmp82 * _tmp87 - _tmp84 * _tmp88;
  const Scalar _tmp90 =
      std::sqrt(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp59, Scalar(2))));
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 = _tmp60 * _tmp90;
  const Scalar _tmp93 = _tmp92 * (-_tmp53 * _tmp59 * _tmp91 + _tmp55 * _tmp57 * _tmp91);
  const Scalar _tmp94 = -_tmp63 * _tmp72 + _tmp66 * _tmp70 + _tmp70 * _tmp93;
  const Scalar _tmp95 = _tmp38 * _tmp46 - _tmp42 * _tmp49 + _tmp46 * _tmp93 - _tmp76 * _tmp94;
  const Scalar _tmp96 = _tmp86 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp98 = _tmp85 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (-_tmp88 * _tmp94 - _tmp89 * _tmp96);
  const Scalar _tmp100 = _tmp86 * (_tmp89 + _tmp99);
  const Scalar _tmp101 = -_tmp100 * _tmp75 + Scalar(1.0);
  const Scalar _tmp102 = _tmp70 * _tmp74;
  const Scalar _tmp103 = _tmp32 + Scalar(-110.0);
  const Scalar _tmp104 = _tmp25 + Scalar(-125.0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp103 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp109 = _tmp78 * _tmp83 + _tmp81;
  const Scalar _tmp110 = 0;
  const Scalar _tmp111 = _tmp70 * _tmp76;
  const Scalar _tmp112 = _tmp61 * _tmp74;
  const Scalar _tmp113 = _tmp112 * _tmp73 + _tmp62;
  const Scalar _tmp114 = _tmp112 * _tmp84 - _tmp113 * _tmp83 - _tmp51;
  const Scalar _tmp115 = _tmp98 * (_tmp112 * _tmp94 - _tmp114 * _tmp96 - _tmp93);
  const Scalar _tmp116 = _tmp86 * (_tmp114 + _tmp115);
  const Scalar _tmp117 = -_tmp116 * _tmp75 - _tmp61;
  const Scalar _tmp118 = _tmp104 * _tmp105;
  const Scalar _tmp119 = _tmp118 * fh1;
  const Scalar _tmp120 = Scalar(1.0) * _tmp97;
  const Scalar _tmp121 = fh1 * (_tmp106 * _tmp24 - _tmp118 * _tmp31);
  const Scalar _tmp122 = -_tmp107 * _tmp92 * (_tmp100 * _tmp46 + _tmp101 * _tmp102) -
                         _tmp108 * _tmp92 * (-_tmp110 * _tmp111 + _tmp110 * _tmp46) -
                         _tmp119 * _tmp92 * (_tmp102 * _tmp117 + _tmp116 * _tmp46 + Scalar(1.0)) -
                         _tmp121 * _tmp92 * (-_tmp111 * _tmp120 + _tmp120 * _tmp46);
  const Scalar _tmp123 = Scalar(1.0) / (_tmp122);
  const Scalar _tmp124 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp54 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp58 - 1), Scalar(2));
  const Scalar _tmp125 = _tmp38 + _tmp79;
  const Scalar _tmp126 = _tmp125 * _tmp83;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 - _tmp42 + _tmp81);
  const Scalar _tmp128 = _tmp109 * _tmp127;
  const Scalar _tmp129 = -_tmp110 * _tmp77 - _tmp125 * _tmp128 + _tmp79;
  const Scalar _tmp130 = Scalar(1.0) * _tmp127;
  const Scalar _tmp131 = _tmp125 * _tmp127;
  const Scalar _tmp132 = -_tmp100 * _tmp77 + _tmp131 * _tmp99 - _tmp73 * _tmp88;
  const Scalar _tmp133 = Scalar(1.0) * fh1;
  const Scalar _tmp134 = _tmp125 * _tmp130;
  const Scalar _tmp135 = _tmp15 * fh1;
  const Scalar _tmp136 = _tmp118 * _tmp135 + Scalar(40.024799999999999) * _tmp18 + _tmp24 * fv1;
  const Scalar _tmp137 = _tmp113 + _tmp115 * _tmp131 - _tmp116 * _tmp77;
  const Scalar _tmp138 = _tmp130 * _tmp83;
  const Scalar _tmp139 = _tmp80 * (_tmp126 * _tmp130 + Scalar(1.0));
  const Scalar _tmp140 = -_tmp106 * _tmp135 - Scalar(40.024799999999999) * _tmp28 - _tmp31 * fv1;
  const Scalar _tmp141 = -_tmp120 * _tmp77 + _tmp134 * _tmp98;
  const Scalar _tmp142 = _tmp130 * _tmp98;
  const Scalar _tmp143 = std::asinh(
      _tmp123 * (_tmp106 * _tmp133 * (_tmp130 * _tmp99 - _tmp132 * _tmp87) +
                 Scalar(1.0) * _tmp108 * (-_tmp109 * _tmp130 - _tmp129 * _tmp87 + Scalar(1.0)) +
                 _tmp118 * _tmp133 * (_tmp115 * _tmp130 - _tmp137 * _tmp87) +
                 Scalar(1.0) * _tmp121 * (-_tmp141 * _tmp87 + _tmp142) +
                 Scalar(1.0) * _tmp136 * (-_tmp130 + _tmp134 * _tmp80) +
                 Scalar(1.0) * _tmp140 * (_tmp138 - Scalar(1.0) * _tmp139)));
  const Scalar _tmp144 = Scalar(1.4083112389913199) * _tmp122;
  const Scalar _tmp145 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp67), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp64 - 1), Scalar(2));
  const Scalar _tmp146 = _tmp108 * _tmp110;
  const Scalar _tmp147 = _tmp120 * _tmp121;
  const Scalar _tmp148 =
      _tmp101 * _tmp107 * _tmp74 + _tmp117 * _tmp119 * _tmp74 - _tmp146 * _tmp76 - _tmp147 * _tmp76;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 = _tmp130 * _tmp136;
  const Scalar _tmp151 =
      std::asinh(_tmp149 * (_tmp107 * _tmp132 * _tmp80 + _tmp108 * _tmp129 * _tmp80 +
                            _tmp119 * _tmp137 * _tmp80 + _tmp121 * _tmp141 * _tmp80 -
                            _tmp125 * _tmp150 * _tmp80 + _tmp139 * _tmp140));
  const Scalar _tmp152 = Scalar(1.4083112389913199) * _tmp148;
  const Scalar _tmp153 = _tmp100 * _tmp107 + _tmp116 * _tmp119 + _tmp146 + _tmp147;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 = std::asinh(_tmp154 * (-_tmp107 * _tmp127 * _tmp99 + _tmp108 * _tmp128 -
                                               _tmp115 * _tmp119 * _tmp127 - _tmp121 * _tmp142 -
                                               _tmp138 * _tmp140 + _tmp150));
  const Scalar _tmp156 = Scalar(1.4083112389913199) * _tmp153;
  const Scalar _tmp157 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp43), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp39 - 1), Scalar(2));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp36 *
          (-std::sinh(Scalar(1.0) * _tmp35) - std::sinh(Scalar(0.71007031138673404) * _tmp34 *
                                                        (-std::sqrt(_tmp33) - _tmp35 * _tmp36))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp33 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp15 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp144 * (-std::sinh(Scalar(1.0) * _tmp143) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp123 *
                           (-std::sqrt(_tmp124) - _tmp143 * _tmp144))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp124 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp51 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp152 * (-std::sinh(Scalar(1.0) * _tmp151) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp149 *
                           (-std::sqrt(_tmp145) - _tmp151 * _tmp152))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp145 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp71 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp156 * (-std::sinh(Scalar(1.0) * _tmp155) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp154 *
                           (-_tmp155 * _tmp156 - std::sqrt(_tmp157)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp157 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp48 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
