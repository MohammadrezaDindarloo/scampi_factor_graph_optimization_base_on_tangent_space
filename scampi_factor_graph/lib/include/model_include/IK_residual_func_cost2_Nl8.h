// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl8
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl8(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 537

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (158)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp3;
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = -_tmp11 + _tmp9;
  const Scalar _tmp13 = -Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp1 * _tmp7;
  const Scalar _tmp15 = _tmp10 * _tmp3;
  const Scalar _tmp16 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp13 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp6;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp22 = _tmp1 * _tmp8;
  const Scalar _tmp23 = _tmp10 * _tmp7;
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp14 - Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(0, 0);
  const Scalar _tmp30 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp29), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp19 - 1), Scalar(2));
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp34 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp36 = _tmp34 - _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = _tmp34 + _tmp35;
  const Scalar _tmp39 = _tmp33 + _tmp38;
  const Scalar _tmp40 = _tmp25 + _tmp26;
  const Scalar _tmp41 = _tmp21 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(0, 0);
  const Scalar _tmp43 = _tmp17 + _tmp5;
  const Scalar _tmp44 = _tmp43 + position_vector(1, 0);
  const Scalar _tmp45 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp42), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp44), Scalar(2));
  const Scalar _tmp46 = _tmp44 + Scalar(-110.0);
  const Scalar _tmp47 = _tmp42 + Scalar(-125.0);
  const Scalar _tmp48 = Scalar(1.0) / (_tmp47);
  const Scalar _tmp49 = _tmp46 * _tmp48;
  const Scalar _tmp50 = _tmp13 - _tmp16;
  const Scalar _tmp51 = _tmp50 + _tmp6;
  const Scalar _tmp52 = _tmp51 + position_vector(1, 0);
  const Scalar _tmp53 = _tmp52 + Scalar(110.0);
  const Scalar _tmp54 = -_tmp21;
  const Scalar _tmp55 = _tmp27 + _tmp54;
  const Scalar _tmp56 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp57 = _tmp56 + Scalar(125.0);
  const Scalar _tmp58 = std::pow(Scalar(std::pow(_tmp53, Scalar(2)) + std::pow(_tmp57, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp59 = _tmp57 * _tmp58;
  const Scalar _tmp60 = _tmp53 * _tmp58;
  const Scalar _tmp61 = Scalar(1.0) / (_tmp49 * _tmp59 - _tmp60);
  const Scalar _tmp62 =
      std::sqrt(Scalar(std::pow(_tmp46, Scalar(2)) + std::pow(_tmp47, Scalar(2))));
  const Scalar _tmp63 = Scalar(1.0) / (_tmp62);
  const Scalar _tmp64 = _tmp48 * _tmp62;
  const Scalar _tmp65 = _tmp64 * (_tmp41 * _tmp46 * _tmp63 - _tmp43 * _tmp47 * _tmp63);
  const Scalar _tmp66 = _tmp61 * (_tmp51 * _tmp59 - _tmp55 * _tmp60 + _tmp59 * _tmp65);
  const Scalar _tmp67 = -_tmp33;
  const Scalar _tmp68 = _tmp36 + _tmp67;
  const Scalar _tmp69 = _tmp61 * (_tmp39 * _tmp59 - _tmp59 * _tmp68);
  const Scalar _tmp70 = Scalar(1.0) * _tmp41;
  const Scalar _tmp71 = -_tmp55 + _tmp70;
  const Scalar _tmp72 = Scalar(1.0) * _tmp43;
  const Scalar _tmp73 = -_tmp72;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp51 + _tmp73);
  const Scalar _tmp75 = Scalar(1.0) * _tmp74;
  const Scalar _tmp76 = _tmp39 * _tmp49;
  const Scalar _tmp77 = _tmp61 * (-_tmp59 * _tmp76 + _tmp60 * _tmp68);
  const Scalar _tmp78 = -Scalar(1.0) * _tmp69 + _tmp71 * _tmp75 * _tmp77;
  const Scalar _tmp79 = _tmp38 + _tmp67;
  const Scalar _tmp80 = _tmp40 + _tmp54;
  const Scalar _tmp81 = _tmp80 + position_vector(0, 0);
  const Scalar _tmp82 = _tmp81 + Scalar(125.0);
  const Scalar _tmp83 = _tmp5 + _tmp50;
  const Scalar _tmp84 = _tmp83 + position_vector(1, 0);
  const Scalar _tmp85 = _tmp84 + Scalar(-110.0);
  const Scalar _tmp86 = std::pow(Scalar(std::pow(_tmp82, Scalar(2)) + std::pow(_tmp85, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp87 = _tmp82 * _tmp86;
  const Scalar _tmp88 = _tmp85 * _tmp86;
  const Scalar _tmp89 = _tmp49 * _tmp87 - _tmp88;
  const Scalar _tmp90 = -_tmp76 * _tmp87 - _tmp77 * _tmp89 + _tmp79 * _tmp88;
  const Scalar _tmp91 = _tmp71 * _tmp74;
  const Scalar _tmp92 = _tmp39 * _tmp87 - _tmp69 * _tmp89 - _tmp79 * _tmp87 - _tmp90 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp94 = _tmp65 * _tmp87 - _tmp66 * _tmp89 - _tmp80 * _tmp88 + _tmp83 * _tmp87;
  const Scalar _tmp95 = _tmp93 * _tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp97 = _tmp92 * _tmp96;
  const Scalar _tmp98 = _tmp97 * (-Scalar(1.0) * _tmp66 - _tmp78 * _tmp95);
  const Scalar _tmp99 = _tmp78 + _tmp98;
  const Scalar _tmp100 = _tmp87 * _tmp93;
  const Scalar _tmp101 = _tmp89 * _tmp93;
  const Scalar _tmp102 = -_tmp101 * _tmp99 + Scalar(1.0);
  const Scalar _tmp103 = _tmp59 * _tmp61;
  const Scalar _tmp104 = _tmp19 + Scalar(110.0);
  const Scalar _tmp105 = _tmp29 + Scalar(-125.0);
  const Scalar _tmp106 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp105, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp107 = _tmp104 * _tmp106;
  const Scalar _tmp108 = _tmp107 * fh1;
  const Scalar _tmp109 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp110 = _tmp70 + _tmp72 * _tmp91;
  const Scalar _tmp111 = 0;
  const Scalar _tmp112 = _tmp111 * _tmp93;
  const Scalar _tmp113 = _tmp101 * _tmp111;
  const Scalar _tmp114 = Scalar(1.0) * _tmp96;
  const Scalar _tmp115 = _tmp105 * _tmp106;
  const Scalar _tmp116 = fh1 * (_tmp107 * _tmp28 - _tmp115 * _tmp18);
  const Scalar _tmp117 = _tmp49 * _tmp77 + _tmp76;
  const Scalar _tmp118 = -_tmp117 * _tmp91 - _tmp39 + _tmp49 * _tmp69;
  const Scalar _tmp119 = _tmp97 * (-_tmp118 * _tmp95 + _tmp49 * _tmp66 - _tmp65);
  const Scalar _tmp120 = _tmp118 + _tmp119;
  const Scalar _tmp121 = -_tmp101 * _tmp120 - _tmp49;
  const Scalar _tmp122 = _tmp115 * fh1;
  const Scalar _tmp123 = -_tmp108 * _tmp64 * (_tmp100 * _tmp99 + _tmp102 * _tmp103) -
                         _tmp109 * _tmp64 * (-_tmp103 * _tmp113 + _tmp112 * _tmp87) -
                         _tmp116 * _tmp64 * (-_tmp103 * _tmp114 * _tmp89 + _tmp114 * _tmp87) -
                         _tmp122 * _tmp64 * (_tmp100 * _tmp120 + _tmp103 * _tmp121 + Scalar(1.0));
  const Scalar _tmp124 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp125 = _tmp90 * _tmp93;
  const Scalar _tmp126 = _tmp73 + _tmp83;
  const Scalar _tmp127 = _tmp126 * _tmp91;
  const Scalar _tmp128 = Scalar(1.0) / (-_tmp127 + _tmp70 - _tmp80);
  const Scalar _tmp129 = _tmp126 * _tmp128;
  const Scalar _tmp130 = -_tmp125 * _tmp99 + _tmp129 * _tmp98 - Scalar(1.0) * _tmp77;
  const Scalar _tmp131 = Scalar(1.0) * _tmp128;
  const Scalar _tmp132 = Scalar(1.0) * fh1;
  const Scalar _tmp133 = _tmp127 * _tmp131 + Scalar(1.0);
  const Scalar _tmp134 = _tmp37 * fh1;
  const Scalar _tmp135 = -_tmp107 * _tmp134 - Scalar(40.024799999999999) * _tmp12 - _tmp18 * fv1;
  const Scalar _tmp136 = _tmp126 * _tmp131;
  const Scalar _tmp137 = _tmp115 * _tmp134 + Scalar(40.024799999999999) * _tmp24 + _tmp28 * fv1;
  const Scalar _tmp138 = _tmp117 + _tmp119 * _tmp129 - _tmp120 * _tmp125;
  const Scalar _tmp139 = -_tmp114 * _tmp90 + _tmp136 * _tmp97;
  const Scalar _tmp140 = _tmp131 * _tmp97;
  const Scalar _tmp141 = _tmp110 * _tmp128;
  const Scalar _tmp142 = -_tmp111 * _tmp125 - _tmp126 * _tmp141 + _tmp73;
  const Scalar _tmp143 = std::asinh(
      _tmp124 * (_tmp107 * _tmp132 * (-_tmp130 * _tmp75 + _tmp131 * _tmp98) +
                 Scalar(1.0) * _tmp109 * (-_tmp110 * _tmp131 - _tmp142 * _tmp75 + Scalar(1.0)) +
                 _tmp115 * _tmp132 * (_tmp119 * _tmp131 - _tmp138 * _tmp75) +
                 Scalar(1.0) * _tmp116 * (-_tmp139 * _tmp75 + _tmp140) +
                 Scalar(1.0) * _tmp135 * (_tmp131 * _tmp91 - _tmp133 * _tmp75) +
                 Scalar(1.0) * _tmp137 * (-_tmp131 + _tmp136 * _tmp74)));
  const Scalar _tmp144 = Scalar(1.4083112389913199) * _tmp123;
  const Scalar _tmp145 = _tmp135 * _tmp74;
  const Scalar _tmp146 = _tmp131 * _tmp137;
  const Scalar _tmp147 = _tmp114 * _tmp116;
  const Scalar _tmp148 = _tmp102 * _tmp108 * _tmp61 - _tmp109 * _tmp113 * _tmp61 +
                         _tmp121 * _tmp122 * _tmp61 - _tmp147 * _tmp61 * _tmp89;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 =
      std::asinh(_tmp149 * (_tmp108 * _tmp130 * _tmp74 + _tmp109 * _tmp142 * _tmp74 +
                            _tmp116 * _tmp139 * _tmp74 + _tmp122 * _tmp138 * _tmp74 -
                            _tmp126 * _tmp146 * _tmp74 + _tmp133 * _tmp145));
  const Scalar _tmp151 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp52 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp56 - 1), Scalar(2));
  const Scalar _tmp152 = Scalar(1.4083112389913199) * _tmp148;
  const Scalar _tmp153 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp84), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp81 - 1), Scalar(2));
  const Scalar _tmp154 =
      _tmp108 * _tmp93 * _tmp99 + _tmp109 * _tmp112 + _tmp120 * _tmp122 * _tmp93 + _tmp147;
  const Scalar _tmp155 = Scalar(1.0) / (_tmp154);
  const Scalar _tmp156 =
      std::asinh(_tmp155 * (-_tmp108 * _tmp128 * _tmp98 + _tmp109 * _tmp141 - _tmp116 * _tmp140 -
                            _tmp119 * _tmp122 * _tmp128 - _tmp131 * _tmp145 * _tmp71 + _tmp146));
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp154;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 *
          (-std::sinh(Scalar(1.0) * _tmp31) - std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                                                        (-std::sqrt(_tmp30) - _tmp31 * _tmp32))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp30 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp37 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp144 * (-std::sinh(Scalar(1.0) * _tmp143) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp124 *
                           (-_tmp143 * _tmp144 - std::sqrt(_tmp45)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp45 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp39 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp152 * (-std::sinh(Scalar(1.0) * _tmp150) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp149 *
                           (-_tmp150 * _tmp152 - std::sqrt(_tmp151)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp151 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp68 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp157 * (-std::sinh(Scalar(1.0) * _tmp156) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp155 *
                           (-std::sqrt(_tmp153) - _tmp156 * _tmp157))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp153 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp79 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
