// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl11
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl11(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 593

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (190)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 2 * _tmp2;
  const Scalar _tmp4 = _tmp1 * _tmp3;
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = 2 * _tmp6;
  const Scalar _tmp8 = _tmp5 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp11 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 +
                        Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999);
  const Scalar _tmp13 = _tmp3 * _tmp6;
  const Scalar _tmp14 = 2 * _tmp1 * _tmp5;
  const Scalar _tmp15 = _tmp13 - _tmp14;
  const Scalar _tmp16 = Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp16;
  const Scalar _tmp18 = -_tmp12 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp9;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp1 * _tmp7;
  const Scalar _tmp24 = _tmp3 * _tmp5;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp4 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(1.0) * _tmp0 /
                        std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp34 = -_tmp22;
  const Scalar _tmp35 = _tmp26 + _tmp27;
  const Scalar _tmp36 = _tmp34 + _tmp35;
  const Scalar _tmp37 = _tmp36 + position_vector(0, 0);
  const Scalar _tmp38 = -_tmp9;
  const Scalar _tmp39 = _tmp12 + _tmp38;
  const Scalar _tmp40 = _tmp17 + _tmp39;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp42 = _tmp41 + Scalar(-110.0);
  const Scalar _tmp43 = _tmp37 + Scalar(125.0);
  const Scalar _tmp44 = Scalar(1.0) / (_tmp43);
  const Scalar _tmp45 = _tmp42 * _tmp44;
  const Scalar _tmp46 = _tmp18 + _tmp38;
  const Scalar _tmp47 = _tmp46 + position_vector(1, 0);
  const Scalar _tmp48 = _tmp47 + Scalar(110.0);
  const Scalar _tmp49 = _tmp28 + _tmp34;
  const Scalar _tmp50 = _tmp49 + position_vector(0, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(125.0);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp51 * _tmp52;
  const Scalar _tmp54 = _tmp48 * _tmp52;
  const Scalar _tmp55 = _tmp45 * _tmp53 - _tmp54;
  const Scalar _tmp56 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp57 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp58 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp59 = _tmp57 - _tmp58;
  const Scalar _tmp60 = _tmp56 + _tmp59;
  const Scalar _tmp61 = _tmp12 + _tmp17 + _tmp9;
  const Scalar _tmp62 = _tmp61 + position_vector(1, 0);
  const Scalar _tmp63 = _tmp62 + Scalar(-110.0);
  const Scalar _tmp64 = _tmp22 + _tmp35;
  const Scalar _tmp65 = _tmp64 + position_vector(0, 0);
  const Scalar _tmp66 = _tmp65 + Scalar(-125.0);
  const Scalar _tmp67 = std::pow(Scalar(std::pow(_tmp63, Scalar(2)) + std::pow(_tmp66, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp68 = _tmp66 * _tmp67;
  const Scalar _tmp69 = _tmp60 * _tmp68;
  const Scalar _tmp70 = _tmp57 + _tmp58;
  const Scalar _tmp71 = _tmp56 + _tmp70;
  const Scalar _tmp72 = _tmp63 * _tmp67;
  const Scalar _tmp73 = -_tmp45 * _tmp69 + _tmp71 * _tmp72;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp45 * _tmp68 - _tmp72);
  const Scalar _tmp75 = _tmp45 * _tmp74;
  const Scalar _tmp76 = _tmp45 * _tmp60 + _tmp73 * _tmp75;
  const Scalar _tmp77 = Scalar(1.0) * _tmp40;
  const Scalar _tmp78 = -_tmp77;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp61 + _tmp78);
  const Scalar _tmp80 = Scalar(1.0) * _tmp36;
  const Scalar _tmp81 = -_tmp64 + _tmp80;
  const Scalar _tmp82 = _tmp79 * _tmp81;
  const Scalar _tmp83 = -_tmp68 * _tmp71 + _tmp69;
  const Scalar _tmp84 = -_tmp60 + _tmp75 * _tmp83 - _tmp76 * _tmp82;
  const Scalar _tmp85 = _tmp53 * _tmp60;
  const Scalar _tmp86 = -_tmp56;
  const Scalar _tmp87 = _tmp59 + _tmp86;
  const Scalar _tmp88 = _tmp55 * _tmp74;
  const Scalar _tmp89 = -_tmp45 * _tmp85 + _tmp54 * _tmp87 - _tmp73 * _tmp88;
  const Scalar _tmp90 = -_tmp53 * _tmp87 - _tmp82 * _tmp89 - _tmp83 * _tmp88 + _tmp85;
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 =
      std::sqrt(Scalar(std::pow(_tmp42, Scalar(2)) + std::pow(_tmp43, Scalar(2))));
  const Scalar _tmp93 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp94 = _tmp44 * _tmp92;
  const Scalar _tmp95 = _tmp94 * (_tmp36 * _tmp42 * _tmp93 - _tmp40 * _tmp43 * _tmp93);
  const Scalar _tmp96 = _tmp61 * _tmp68 - _tmp64 * _tmp72 + _tmp68 * _tmp95;
  const Scalar _tmp97 = _tmp46 * _tmp53 - _tmp49 * _tmp54 + _tmp53 * _tmp95 - _tmp88 * _tmp96;
  const Scalar _tmp98 = _tmp91 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp100 = _tmp90 * _tmp99;
  const Scalar _tmp101 = _tmp100 * (_tmp75 * _tmp96 - _tmp84 * _tmp98 - _tmp95);
  const Scalar _tmp102 = _tmp91 * (_tmp101 + _tmp84);
  const Scalar _tmp103 = -_tmp102 * _tmp55 - _tmp45;
  const Scalar _tmp104 = _tmp68 * _tmp74;
  const Scalar _tmp105 = _tmp30 + Scalar(-125.0);
  const Scalar _tmp106 = _tmp20 + Scalar(110.0);
  const Scalar _tmp107 =
      std::pow(Scalar(std::pow(_tmp105, Scalar(2)) + std::pow(_tmp106, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp108 = _tmp105 * _tmp107;
  const Scalar _tmp109 = _tmp108 * fh1;
  const Scalar _tmp110 = Scalar(1.0) * _tmp74;
  const Scalar _tmp111 = Scalar(1.0) * _tmp79;
  const Scalar _tmp112 = -_tmp110 * _tmp83 + _tmp111 * _tmp73 * _tmp74 * _tmp81;
  const Scalar _tmp113 = _tmp100 * (-_tmp110 * _tmp96 - _tmp112 * _tmp98);
  const Scalar _tmp114 = _tmp91 * (_tmp112 + _tmp113);
  const Scalar _tmp115 = -_tmp114 * _tmp55 + Scalar(1.0);
  const Scalar _tmp116 = _tmp106 * _tmp107;
  const Scalar _tmp117 = _tmp116 * fh1;
  const Scalar _tmp118 = Scalar(1.0) * _tmp99;
  const Scalar _tmp119 = fh1 * (-_tmp108 * _tmp19 + _tmp116 * _tmp29);
  const Scalar _tmp120 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp121 = _tmp77 * _tmp82 + _tmp80;
  const Scalar _tmp122 = 0;
  const Scalar _tmp123 = _tmp122 * _tmp88;
  const Scalar _tmp124 = _tmp94 * (_tmp122 * _tmp53 - _tmp123 * _tmp68);
  const Scalar _tmp125 = -_tmp109 * _tmp94 * (_tmp102 * _tmp53 + _tmp103 * _tmp104 + Scalar(1.0)) -
                         _tmp117 * _tmp94 * (_tmp104 * _tmp115 + _tmp114 * _tmp53) -
                         _tmp119 * _tmp94 * (_tmp118 * _tmp53 - _tmp118 * _tmp68 * _tmp88) -
                         _tmp120 * _tmp124;
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp46 + _tmp78;
  const Scalar _tmp128 = _tmp127 * _tmp82;
  const Scalar _tmp129 = Scalar(1.0) / (-_tmp128 - _tmp49 + _tmp80);
  const Scalar _tmp130 = Scalar(1.0) * _tmp129;
  const Scalar _tmp131 = _tmp100 * _tmp130;
  const Scalar _tmp132 = -_tmp118 * _tmp89 + _tmp127 * _tmp131;
  const Scalar _tmp133 = fh1 * (_tmp70 + _tmp86);
  const Scalar _tmp134 = -_tmp116 * _tmp133 - Scalar(40.024799999999999) * _tmp15 - _tmp19 * fv1;
  const Scalar _tmp135 = _tmp130 * _tmp82;
  const Scalar _tmp136 = _tmp128 * _tmp130 + Scalar(1.0);
  const Scalar _tmp137 = -Scalar(1.0) * _tmp111 * _tmp136 + Scalar(1.0) * _tmp135;
  const Scalar _tmp138 = _tmp127 * _tmp129;
  const Scalar _tmp139 = _tmp101 * _tmp138 - _tmp102 * _tmp89 + _tmp76;
  const Scalar _tmp140 = -_tmp110 * _tmp73 + _tmp113 * _tmp138 - _tmp114 * _tmp89;
  const Scalar _tmp141 = _tmp121 * _tmp129;
  const Scalar _tmp142 = _tmp79 * (-_tmp122 * _tmp89 - _tmp127 * _tmp141 + _tmp78);
  const Scalar _tmp143 = -Scalar(1.0) * _tmp121 * _tmp130 - Scalar(1.0) * _tmp142 + Scalar(1.0);
  const Scalar _tmp144 = _tmp108 * _tmp133 + Scalar(40.024799999999999) * _tmp25 + _tmp29 * fv1;
  const Scalar _tmp145 = _tmp127 * _tmp79;
  const Scalar _tmp146 = Scalar(1.0) * _tmp130 * _tmp145 - Scalar(1.0) * _tmp130;
  const Scalar _tmp147 = Scalar(1.0) * _tmp109 * (_tmp101 * _tmp130 - _tmp111 * _tmp139) +
                         Scalar(1.0) * _tmp117 * (-_tmp111 * _tmp140 + _tmp113 * _tmp130) +
                         Scalar(1.0) * _tmp119 * (-_tmp111 * _tmp132 + _tmp131) +
                         _tmp120 * _tmp143 + _tmp134 * _tmp137 + _tmp144 * _tmp146;
  const Scalar _tmp148 = std::asinh(_tmp126 * _tmp147);
  const Scalar _tmp149 = Scalar(1.4083112389913199) * _tmp125;
  const Scalar _tmp150 =
      -_tmp148 * _tmp149 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp41), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp37 - 1), Scalar(2))));
  const Scalar _tmp151 = Scalar(0.71007031138673404) * _tmp126;
  const Scalar _tmp152 = _tmp150 * _tmp151;
  const Scalar _tmp153 = Scalar(1.0) * _tmp148;
  const Scalar _tmp154 = Scalar(1.4083112389913199) * _tmp124;
  const Scalar _tmp155 = std::pow(_tmp125, Scalar(-2));
  const Scalar _tmp156 = _tmp124 * _tmp155;
  const Scalar _tmp157 = _tmp16 + _tmp39;
  const Scalar _tmp158 =
      (_tmp126 * (_tmp137 * _tmp157 - _tmp143 + _tmp146 * _tmp29) - _tmp147 * _tmp156) /
      std::sqrt(Scalar(std::pow(_tmp147, Scalar(2)) * _tmp155 + 1));
  const Scalar _tmp159 = _tmp118 * _tmp119;
  const Scalar _tmp160 = _tmp120 * _tmp122;
  const Scalar _tmp161 =
      _tmp103 * _tmp109 * _tmp74 + _tmp115 * _tmp117 * _tmp74 - _tmp159 * _tmp88 - _tmp160 * _tmp88;
  const Scalar _tmp162 = Scalar(1.0) / (_tmp161);
  const Scalar _tmp163 = _tmp130 * _tmp144;
  const Scalar _tmp164 = _tmp136 * _tmp79;
  const Scalar _tmp165 = _tmp109 * _tmp139 * _tmp79 + _tmp117 * _tmp140 * _tmp79 +
                         _tmp119 * _tmp132 * _tmp79 + _tmp120 * _tmp142 + _tmp134 * _tmp164 -
                         _tmp145 * _tmp163;
  const Scalar _tmp166 = std::asinh(_tmp162 * _tmp165);
  const Scalar _tmp167 = Scalar(1.0) * _tmp166;
  const Scalar _tmp168 = std::pow(_tmp161, Scalar(-2));
  const Scalar _tmp169 = _tmp123 * _tmp168;
  const Scalar _tmp170 = _tmp130 * _tmp29;
  const Scalar _tmp171 =
      (_tmp162 * (-_tmp142 - _tmp145 * _tmp170 + _tmp157 * _tmp164) - _tmp165 * _tmp169) /
      std::sqrt(Scalar(std::pow(_tmp165, Scalar(2)) * _tmp168 + 1));
  const Scalar _tmp172 = Scalar(1.4083112389913199) * _tmp161;
  const Scalar _tmp173 = Scalar(1.4083112389913199) * _tmp122;
  const Scalar _tmp174 = _tmp173 * _tmp88;
  const Scalar _tmp175 = Scalar(0.71007031138673404) * _tmp162;
  const Scalar _tmp176 =
      -_tmp166 * _tmp172 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp62), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp65), Scalar(2))));
  const Scalar _tmp177 = _tmp175 * _tmp176;
  const Scalar _tmp178 = -_tmp101 * _tmp109 * _tmp129 - _tmp113 * _tmp117 * _tmp129 -
                         _tmp119 * _tmp131 + _tmp120 * _tmp141 - _tmp134 * _tmp135 + _tmp163;
  const Scalar _tmp179 = _tmp102 * _tmp109 + _tmp114 * _tmp117 + _tmp159 + _tmp160;
  const Scalar _tmp180 = Scalar(1.0) / (_tmp179);
  const Scalar _tmp181 = std::asinh(_tmp178 * _tmp180);
  const Scalar _tmp182 = Scalar(1.0) * _tmp181;
  const Scalar _tmp183 = Scalar(1.4083112389913199) * _tmp179;
  const Scalar _tmp184 =
      -_tmp181 * _tmp183 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp47 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp50 - 1), Scalar(2))));
  const Scalar _tmp185 = Scalar(0.71007031138673404) * _tmp180;
  const Scalar _tmp186 = _tmp184 * _tmp185;
  const Scalar _tmp187 = std::pow(_tmp179, Scalar(-2));
  const Scalar _tmp188 = _tmp122 * _tmp187;
  const Scalar _tmp189 = (_tmp178 * _tmp188 + _tmp180 * (-_tmp135 * _tmp157 - _tmp141 + _tmp170)) /
                         std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp187 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 *
      (-_tmp33 * std::cosh(Scalar(1.0) * _tmp31) +
       _tmp33 * std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                          (-_tmp31 * _tmp32 -
                           Scalar(125.0) *
                               std::sqrt(Scalar(
                                   std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp30),
                                            Scalar(2)) +
                                   Scalar(0.77439999999999998) *
                                       std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp20 - 1),
                                                Scalar(2)))))));
  _res(1, 0) = _tmp149 * (-Scalar(1.0) * _tmp158 * std::cosh(_tmp153) -
                          (-Scalar(0.71007031138673404) * _tmp150 * _tmp156 +
                           _tmp151 * (-_tmp148 * _tmp154 - _tmp149 * _tmp158)) *
                              std::cosh(_tmp152)) +
               _tmp154 * (-std::sinh(_tmp152) - std::sinh(_tmp153));
  _res(2, 0) = _tmp172 * (-Scalar(1.0) * _tmp171 * std::cosh(_tmp167) -
                          (-Scalar(0.71007031138673404) * _tmp169 * _tmp176 +
                           _tmp175 * (-_tmp166 * _tmp174 - _tmp171 * _tmp172)) *
                              std::cosh(_tmp177)) +
               _tmp174 * (-std::sinh(_tmp167) - std::sinh(_tmp177));
  _res(3, 0) = -_tmp173 * (-std::sinh(_tmp182) - std::sinh(_tmp186)) +
               _tmp183 * (-Scalar(1.0) * _tmp189 * std::cosh(_tmp182) -
                          (Scalar(0.71007031138673404) * _tmp184 * _tmp188 +
                           _tmp185 * (_tmp173 * _tmp181 - _tmp183 * _tmp189)) *
                              std::cosh(_tmp186));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
