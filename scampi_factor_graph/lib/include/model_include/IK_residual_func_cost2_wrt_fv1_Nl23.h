// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl23
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl23(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 597

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (191)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp5 = 2 * _tmp4;
  const Scalar _tmp6 = _tmp3 * _tmp5;
  const Scalar _tmp7 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp8 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = 2 * _tmp7 * _tmp8;
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp6 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp12 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp3;
  const Scalar _tmp15 = _tmp14 * _tmp7;
  const Scalar _tmp16 = _tmp5 * _tmp8;
  const Scalar _tmp17 = _tmp15 + _tmp16;
  const Scalar _tmp18 = -Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = -_tmp13 + _tmp18;
  const Scalar _tmp20 = _tmp10 + _tmp19;
  const Scalar _tmp21 = _tmp20 + position_vector(0, 0);
  const Scalar _tmp22 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp6 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp25 = _tmp5 * _tmp7;
  const Scalar _tmp26 = _tmp14 * _tmp8;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = -_tmp24 + _tmp29;
  const Scalar _tmp31 = _tmp23 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(1, 0);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = _tmp32 + Scalar(-110.0);
  const Scalar _tmp35 = _tmp21 + Scalar(125.0);
  const Scalar _tmp36 = std::pow(Scalar(std::pow(_tmp34, Scalar(2)) + std::pow(_tmp35, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp37 = _tmp34 * _tmp36;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp39 = -Scalar(0.010999999999999999) * _tmp11 -
                        Scalar(0.010999999999999999) * _tmp22 + Scalar(-0.010999999999999999);
  const Scalar _tmp40 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp41 = _tmp39 - _tmp40;
  const Scalar _tmp42 = fh1 * (_tmp38 + _tmp41);
  const Scalar _tmp43 = -Scalar(40.024799999999999) * _tmp27 - _tmp31 * fv1 - _tmp37 * _tmp42;
  const Scalar _tmp44 = _tmp23 + _tmp24 + _tmp29;
  const Scalar _tmp45 = Scalar(1.0) * _tmp44;
  const Scalar _tmp46 = -_tmp45;
  const Scalar _tmp47 = -_tmp23;
  const Scalar _tmp48 = _tmp30 + _tmp47;
  const Scalar _tmp49 = _tmp46 + _tmp48;
  const Scalar _tmp50 = _tmp24 + _tmp47;
  const Scalar _tmp51 = _tmp29 + _tmp50;
  const Scalar _tmp52 = Scalar(1.0) / (_tmp46 + _tmp51);
  const Scalar _tmp53 = -_tmp10;
  const Scalar _tmp54 = _tmp13 + _tmp18;
  const Scalar _tmp55 = _tmp53 + _tmp54;
  const Scalar _tmp56 = _tmp10 + _tmp54;
  const Scalar _tmp57 = Scalar(1.0) * _tmp56;
  const Scalar _tmp58 = -_tmp55 + _tmp57;
  const Scalar _tmp59 = _tmp52 * _tmp58;
  const Scalar _tmp60 = _tmp49 * _tmp59;
  const Scalar _tmp61 = _tmp19 + _tmp53;
  const Scalar _tmp62 = Scalar(1.0) / (_tmp57 - _tmp60 - _tmp61);
  const Scalar _tmp63 = Scalar(1.0) * _tmp62;
  const Scalar _tmp64 = _tmp60 * _tmp63 + Scalar(1.0);
  const Scalar _tmp65 = Scalar(1.0) * _tmp52;
  const Scalar _tmp66 = _tmp59 * _tmp63;
  const Scalar _tmp67 = -Scalar(1.0) * _tmp64 * _tmp65 + Scalar(1.0) * _tmp66;
  const Scalar _tmp68 = _tmp51 + position_vector(1, 0);
  const Scalar _tmp69 = _tmp68 + Scalar(110.0);
  const Scalar _tmp70 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp71 = _tmp70 + Scalar(-125.0);
  const Scalar _tmp72 = std::pow(Scalar(std::pow(_tmp69, Scalar(2)) + std::pow(_tmp71, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp73 = _tmp69 * _tmp72;
  const Scalar _tmp74 = _tmp44 + position_vector(1, 0);
  const Scalar _tmp75 = _tmp74 + Scalar(-110.0);
  const Scalar _tmp76 = _tmp56 + position_vector(0, 0);
  const Scalar _tmp77 = _tmp76 + Scalar(-125.0);
  const Scalar _tmp78 = Scalar(1.0) / (_tmp77);
  const Scalar _tmp79 = _tmp75 * _tmp78;
  const Scalar _tmp80 = _tmp71 * _tmp72;
  const Scalar _tmp81 = Scalar(1.0) / (-_tmp73 + _tmp79 * _tmp80);
  const Scalar _tmp82 = -_tmp38;
  const Scalar _tmp83 = _tmp39 + _tmp40;
  const Scalar _tmp84 = _tmp82 + _tmp83;
  const Scalar _tmp85 = _tmp38 + _tmp83;
  const Scalar _tmp86 = _tmp80 * _tmp85;
  const Scalar _tmp87 = _tmp81 * (_tmp73 * _tmp84 - _tmp79 * _tmp86);
  const Scalar _tmp88 = _tmp81 * (-_tmp80 * _tmp84 + _tmp86);
  const Scalar _tmp89 = _tmp58 * _tmp65 * _tmp87 - Scalar(1.0) * _tmp88;
  const Scalar _tmp90 = _tmp48 + position_vector(1, 0);
  const Scalar _tmp91 = _tmp90 + Scalar(110.0);
  const Scalar _tmp92 = _tmp61 + position_vector(0, 0);
  const Scalar _tmp93 = _tmp92 + Scalar(125.0);
  const Scalar _tmp94 = std::pow(Scalar(std::pow(_tmp91, Scalar(2)) + std::pow(_tmp93, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp95 = _tmp93 * _tmp94;
  const Scalar _tmp96 = _tmp91 * _tmp94;
  const Scalar _tmp97 = _tmp79 * _tmp95 - _tmp96;
  const Scalar _tmp98 = _tmp41 + _tmp82;
  const Scalar _tmp99 = _tmp85 * _tmp95;
  const Scalar _tmp100 = -_tmp79 * _tmp99 - _tmp87 * _tmp97 + _tmp96 * _tmp98;
  const Scalar _tmp101 = -_tmp100 * _tmp59 - _tmp88 * _tmp97 - _tmp95 * _tmp98 + _tmp99;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp103 =
      std::sqrt(Scalar(std::pow(_tmp75, Scalar(2)) + std::pow(_tmp77, Scalar(2))));
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = _tmp103 * _tmp78;
  const Scalar _tmp106 = _tmp105 * (-_tmp104 * _tmp44 * _tmp77 + _tmp104 * _tmp56 * _tmp75);
  const Scalar _tmp107 = _tmp81 * (_tmp106 * _tmp80 + _tmp51 * _tmp80 - _tmp55 * _tmp73);
  const Scalar _tmp108 = _tmp106 * _tmp95 - _tmp107 * _tmp97 + _tmp48 * _tmp95 - _tmp61 * _tmp96;
  const Scalar _tmp109 = _tmp102 * _tmp108;
  const Scalar _tmp110 = Scalar(1.0) / (_tmp108);
  const Scalar _tmp111 = _tmp101 * _tmp110;
  const Scalar _tmp112 = _tmp111 * (-Scalar(1.0) * _tmp107 - _tmp109 * _tmp89);
  const Scalar _tmp113 = _tmp112 + _tmp89;
  const Scalar _tmp114 = _tmp100 * _tmp102;
  const Scalar _tmp115 = _tmp49 * _tmp62;
  const Scalar _tmp116 = _tmp112 * _tmp115 - _tmp113 * _tmp114 - Scalar(1.0) * _tmp87;
  const Scalar _tmp117 = _tmp37 * fh1;
  const Scalar _tmp118 = _tmp35 * _tmp36;
  const Scalar _tmp119 = _tmp118 * _tmp42 + Scalar(40.024799999999999) * _tmp17 + _tmp20 * fv1;
  const Scalar _tmp120 = _tmp49 * _tmp52;
  const Scalar _tmp121 = Scalar(1.0) * _tmp120 * _tmp63 - Scalar(1.0) * _tmp63;
  const Scalar _tmp122 = _tmp79 * _tmp85 + _tmp79 * _tmp87;
  const Scalar _tmp123 = -_tmp122 * _tmp59 + _tmp79 * _tmp88 - _tmp85;
  const Scalar _tmp124 = _tmp111 * (-_tmp106 + _tmp107 * _tmp79 - _tmp109 * _tmp123);
  const Scalar _tmp125 = _tmp123 + _tmp124;
  const Scalar _tmp126 = -_tmp114 * _tmp125 + _tmp115 * _tmp124 + _tmp122;
  const Scalar _tmp127 = _tmp118 * fh1;
  const Scalar _tmp128 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp129 = _tmp45 * _tmp59 + _tmp57;
  const Scalar _tmp130 = _tmp129 * _tmp62;
  const Scalar _tmp131 = 0;
  const Scalar _tmp132 = _tmp52 * (-_tmp114 * _tmp131 - _tmp130 * _tmp49 + _tmp46);
  const Scalar _tmp133 = -Scalar(1.0) * _tmp130 - Scalar(1.0) * _tmp132 + Scalar(1.0);
  const Scalar _tmp134 = _tmp111 * _tmp63;
  const Scalar _tmp135 = Scalar(1.0) * _tmp110;
  const Scalar _tmp136 = -_tmp100 * _tmp135 + _tmp134 * _tmp49;
  const Scalar _tmp137 = fh1 * (-_tmp118 * _tmp31 + _tmp20 * _tmp37);
  const Scalar _tmp138 =
      Scalar(1.0) * _tmp117 * (_tmp112 * _tmp63 - _tmp116 * _tmp65) + _tmp119 * _tmp121 +
      Scalar(1.0) * _tmp127 * (_tmp124 * _tmp63 - _tmp126 * _tmp65) + _tmp128 * _tmp133 +
      Scalar(1.0) * _tmp137 * (_tmp134 - _tmp136 * _tmp65) + _tmp43 * _tmp67;
  const Scalar _tmp139 = _tmp80 * _tmp81;
  const Scalar _tmp140 = _tmp102 * _tmp97;
  const Scalar _tmp141 = _tmp131 * _tmp140;
  const Scalar _tmp142 = _tmp102 * _tmp131;
  const Scalar _tmp143 = _tmp105 * (-_tmp139 * _tmp141 + _tmp142 * _tmp95);
  const Scalar _tmp144 = _tmp102 * _tmp95;
  const Scalar _tmp145 = -_tmp113 * _tmp140 + Scalar(1.0);
  const Scalar _tmp146 = -_tmp125 * _tmp140 - _tmp79;
  const Scalar _tmp147 = -_tmp105 * _tmp117 * (_tmp113 * _tmp144 + _tmp139 * _tmp145) -
                         _tmp105 * _tmp127 * (_tmp125 * _tmp144 + _tmp139 * _tmp146 + Scalar(1.0)) -
                         _tmp105 * _tmp137 * (-_tmp135 * _tmp139 * _tmp97 + _tmp135 * _tmp95) -
                         _tmp128 * _tmp143;
  const Scalar _tmp148 = Scalar(1.0) / (_tmp147);
  const Scalar _tmp149 = std::asinh(_tmp138 * _tmp148);
  const Scalar _tmp150 = Scalar(1.0) * _tmp149;
  const Scalar _tmp151 = std::pow(_tmp147, Scalar(-2));
  const Scalar _tmp152 = _tmp143 * _tmp151;
  const Scalar _tmp153 = _tmp28 + _tmp50;
  const Scalar _tmp154 =
      (-_tmp138 * _tmp152 + _tmp148 * (_tmp121 * _tmp20 - _tmp133 + _tmp153 * _tmp67)) /
      std::sqrt(Scalar(std::pow(_tmp138, Scalar(2)) * _tmp151 + 1));
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp147;
  const Scalar _tmp156 =
      -_tmp149 * _tmp155 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp74), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp76), Scalar(2))));
  const Scalar _tmp157 = Scalar(0.71007031138673404) * _tmp148;
  const Scalar _tmp158 = _tmp156 * _tmp157;
  const Scalar _tmp159 = Scalar(1.4083112389913199) * _tmp143;
  const Scalar _tmp160 = _tmp119 * _tmp63;
  const Scalar _tmp161 = _tmp52 * _tmp64;
  const Scalar _tmp162 = _tmp116 * _tmp117 * _tmp52 - _tmp120 * _tmp160 +
                         _tmp126 * _tmp127 * _tmp52 + _tmp128 * _tmp132 +
                         _tmp136 * _tmp137 * _tmp52 + _tmp161 * _tmp43;
  const Scalar _tmp163 = _tmp141 * _tmp81;
  const Scalar _tmp164 = _tmp135 * _tmp137;
  const Scalar _tmp165 = _tmp117 * _tmp145 * _tmp81 + _tmp127 * _tmp146 * _tmp81 -
                         _tmp128 * _tmp163 - _tmp164 * _tmp81 * _tmp97;
  const Scalar _tmp166 = Scalar(1.0) / (_tmp165);
  const Scalar _tmp167 = std::asinh(_tmp162 * _tmp166);
  const Scalar _tmp168 = Scalar(1.0) * _tmp167;
  const Scalar _tmp169 = Scalar(1.4083112389913199) * _tmp165;
  const Scalar _tmp170 =
      -_tmp167 * _tmp169 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp70), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp68 - 1), Scalar(2))));
  const Scalar _tmp171 = Scalar(0.71007031138673404) * _tmp166;
  const Scalar _tmp172 = _tmp170 * _tmp171;
  const Scalar _tmp173 = Scalar(1.4083112389913199) * _tmp163;
  const Scalar _tmp174 = std::pow(_tmp165, Scalar(-2));
  const Scalar _tmp175 = _tmp163 * _tmp174;
  const Scalar _tmp176 = _tmp20 * _tmp63;
  const Scalar _tmp177 =
      (-_tmp162 * _tmp175 + _tmp166 * (-_tmp120 * _tmp176 - _tmp132 + _tmp153 * _tmp161)) /
      std::sqrt(Scalar(std::pow(_tmp162, Scalar(2)) * _tmp174 + 1));
  const Scalar _tmp178 = -_tmp112 * _tmp117 * _tmp62 - _tmp124 * _tmp127 * _tmp62 +
                         _tmp128 * _tmp130 - _tmp134 * _tmp137 + _tmp160 - _tmp43 * _tmp66;
  const Scalar _tmp179 =
      _tmp102 * _tmp113 * _tmp117 + _tmp102 * _tmp125 * _tmp127 + _tmp128 * _tmp142 + _tmp164;
  const Scalar _tmp180 = Scalar(1.0) / (_tmp179);
  const Scalar _tmp181 = std::asinh(_tmp178 * _tmp180);
  const Scalar _tmp182 = Scalar(1.0) * _tmp181;
  const Scalar _tmp183 = Scalar(1.4083112389913199) * _tmp179;
  const Scalar _tmp184 =
      -_tmp181 * _tmp183 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp90 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp92 - 1), Scalar(2))));
  const Scalar _tmp185 = Scalar(0.71007031138673404) * _tmp180;
  const Scalar _tmp186 = _tmp184 * _tmp185;
  const Scalar _tmp187 = Scalar(1.4083112389913199) * _tmp142;
  const Scalar _tmp188 = std::pow(_tmp179, Scalar(-2));
  const Scalar _tmp189 = _tmp142 * _tmp188;
  const Scalar _tmp190 = (_tmp178 * _tmp189 + _tmp180 * (-_tmp130 - _tmp153 * _tmp66 + _tmp176)) /
                         std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp188 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                         (-_tmp1 * _tmp33 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp32),
                                               Scalar(2)) +
                                  std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp21 - 1),
                                           Scalar(2)))))));
  _res(1, 0) = _tmp155 * (-Scalar(1.0) * _tmp154 * std::cosh(_tmp150) -
                          (-Scalar(0.71007031138673404) * _tmp152 * _tmp156 +
                           _tmp157 * (-_tmp149 * _tmp159 - _tmp154 * _tmp155)) *
                              std::cosh(_tmp158)) +
               _tmp159 * (-std::sinh(_tmp150) - std::sinh(_tmp158));
  _res(2, 0) = _tmp169 * (-Scalar(1.0) * _tmp177 * std::cosh(_tmp168) -
                          (-Scalar(0.71007031138673404) * _tmp170 * _tmp175 +
                           _tmp171 * (-_tmp167 * _tmp173 - _tmp169 * _tmp177)) *
                              std::cosh(_tmp172)) +
               _tmp173 * (-std::sinh(_tmp168) - std::sinh(_tmp172));
  _res(3, 0) = _tmp183 * (-Scalar(1.0) * _tmp190 * std::cosh(_tmp182) -
                          (Scalar(0.71007031138673404) * _tmp184 * _tmp189 +
                           _tmp185 * (_tmp181 * _tmp187 - _tmp183 * _tmp190)) *
                              std::cosh(_tmp186)) -
               _tmp187 * (-std::sinh(_tmp182) - std::sinh(_tmp186));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
