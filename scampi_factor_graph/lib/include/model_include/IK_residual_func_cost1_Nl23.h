// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl23
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl23(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 507

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (160)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 2 * _tmp2;
  const Scalar _tmp4 = _tmp1 * _tmp3;
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp7 = 2 * _tmp5 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp4 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp10 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp12 = 2 * _tmp1;
  const Scalar _tmp13 = _tmp12 * _tmp5;
  const Scalar _tmp14 = _tmp3 * _tmp6;
  const Scalar _tmp15 = _tmp13 + _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp11 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp8;
  const Scalar _tmp19 = _tmp18 + position_vector(0, 0);
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = _tmp3 * _tmp5;
  const Scalar _tmp23 = _tmp12 * _tmp6;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp28 = _tmp25 + _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(1, 0);
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp34 = -Scalar(0.010999999999999999) * _tmp26 -
                        Scalar(0.010999999999999999) * _tmp9 + Scalar(-0.010999999999999999);
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp36 = _tmp34 - _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = _tmp19 + Scalar(125.0);
  const Scalar _tmp39 = _tmp30 + Scalar(-110.0);
  const Scalar _tmp40 = std::pow(Scalar(std::pow(_tmp38, Scalar(2)) + std::pow(_tmp39, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp41 = _tmp39 * _tmp40;
  const Scalar _tmp42 = _tmp37 * fh1;
  const Scalar _tmp43 = -Scalar(40.024799999999999) * _tmp24 - _tmp29 * fv1 - _tmp41 * _tmp42;
  const Scalar _tmp44 = _tmp20 + _tmp28;
  const Scalar _tmp45 = Scalar(1.0) * _tmp44;
  const Scalar _tmp46 = -_tmp45;
  const Scalar _tmp47 = _tmp25 - _tmp27;
  const Scalar _tmp48 = _tmp21 + _tmp47;
  const Scalar _tmp49 = _tmp46 + _tmp48;
  const Scalar _tmp50 = _tmp20 + _tmp47;
  const Scalar _tmp51 = Scalar(1.0) / (_tmp46 + _tmp50);
  const Scalar _tmp52 = -_tmp8;
  const Scalar _tmp53 = _tmp11 + _tmp16;
  const Scalar _tmp54 = _tmp52 + _tmp53;
  const Scalar _tmp55 = _tmp53 + _tmp8;
  const Scalar _tmp56 = Scalar(1.0) * _tmp55;
  const Scalar _tmp57 = -_tmp54 + _tmp56;
  const Scalar _tmp58 = _tmp51 * _tmp57;
  const Scalar _tmp59 = _tmp49 * _tmp58;
  const Scalar _tmp60 = _tmp17 + _tmp52;
  const Scalar _tmp61 = Scalar(1.0) / (_tmp56 - _tmp59 - _tmp60);
  const Scalar _tmp62 = Scalar(1.0) * _tmp61;
  const Scalar _tmp63 = _tmp59 * _tmp62 + Scalar(1.0);
  const Scalar _tmp64 = Scalar(1.0) * _tmp51;
  const Scalar _tmp65 = _tmp50 + position_vector(1, 0);
  const Scalar _tmp66 = _tmp65 + Scalar(110.0);
  const Scalar _tmp67 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp68 = _tmp67 + Scalar(-125.0);
  const Scalar _tmp69 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp68, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp70 = _tmp66 * _tmp69;
  const Scalar _tmp71 = _tmp44 + position_vector(1, 0);
  const Scalar _tmp72 = _tmp71 + Scalar(-110.0);
  const Scalar _tmp73 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp74 = _tmp73 + Scalar(-125.0);
  const Scalar _tmp75 = Scalar(1.0) / (_tmp74);
  const Scalar _tmp76 = _tmp72 * _tmp75;
  const Scalar _tmp77 = _tmp68 * _tmp69;
  const Scalar _tmp78 = Scalar(1.0) / (-_tmp70 + _tmp76 * _tmp77);
  const Scalar _tmp79 = -_tmp33;
  const Scalar _tmp80 = _tmp34 + _tmp35;
  const Scalar _tmp81 = _tmp79 + _tmp80;
  const Scalar _tmp82 = _tmp33 + _tmp80;
  const Scalar _tmp83 = _tmp77 * _tmp82;
  const Scalar _tmp84 = _tmp70 * _tmp81 - _tmp76 * _tmp83;
  const Scalar _tmp85 = -_tmp77 * _tmp81 + _tmp83;
  const Scalar _tmp86 = Scalar(1.0) * _tmp78;
  const Scalar _tmp87 = _tmp57 * _tmp64 * _tmp78 * _tmp84 - _tmp85 * _tmp86;
  const Scalar _tmp88 = _tmp48 + position_vector(1, 0);
  const Scalar _tmp89 = _tmp88 + Scalar(110.0);
  const Scalar _tmp90 = _tmp60 + position_vector(0, 0);
  const Scalar _tmp91 = _tmp90 + Scalar(125.0);
  const Scalar _tmp92 = std::pow(Scalar(std::pow(_tmp89, Scalar(2)) + std::pow(_tmp91, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp93 = _tmp91 * _tmp92;
  const Scalar _tmp94 = _tmp89 * _tmp92;
  const Scalar _tmp95 = _tmp76 * _tmp93 - _tmp94;
  const Scalar _tmp96 = _tmp78 * _tmp95;
  const Scalar _tmp97 = _tmp36 + _tmp79;
  const Scalar _tmp98 = _tmp82 * _tmp93;
  const Scalar _tmp99 = -_tmp76 * _tmp98 - _tmp84 * _tmp96 + _tmp94 * _tmp97;
  const Scalar _tmp100 = -_tmp58 * _tmp99 - _tmp85 * _tmp96 - _tmp93 * _tmp97 + _tmp98;
  const Scalar _tmp101 = Scalar(1.0) / (_tmp100);
  const Scalar _tmp102 =
      std::sqrt(Scalar(std::pow(_tmp72, Scalar(2)) + std::pow(_tmp74, Scalar(2))));
  const Scalar _tmp103 = Scalar(1.0) / (_tmp102);
  const Scalar _tmp104 = _tmp102 * _tmp75;
  const Scalar _tmp105 = _tmp104 * (-_tmp103 * _tmp44 * _tmp74 + _tmp103 * _tmp55 * _tmp72);
  const Scalar _tmp106 = _tmp105 * _tmp77 + _tmp50 * _tmp77 - _tmp54 * _tmp70;
  const Scalar _tmp107 = _tmp105 * _tmp93 - _tmp106 * _tmp96 + _tmp48 * _tmp93 - _tmp60 * _tmp94;
  const Scalar _tmp108 = _tmp101 * _tmp107;
  const Scalar _tmp109 = Scalar(1.0) / (_tmp107);
  const Scalar _tmp110 = _tmp100 * _tmp109;
  const Scalar _tmp111 = _tmp110 * (-_tmp106 * _tmp86 - _tmp108 * _tmp87);
  const Scalar _tmp112 = _tmp111 + _tmp87;
  const Scalar _tmp113 = _tmp101 * _tmp99;
  const Scalar _tmp114 = _tmp49 * _tmp61;
  const Scalar _tmp115 = _tmp111 * _tmp114 - _tmp112 * _tmp113 - _tmp84 * _tmp86;
  const Scalar _tmp116 = _tmp41 * fh1;
  const Scalar _tmp117 = _tmp38 * _tmp40;
  const Scalar _tmp118 = _tmp117 * _tmp42 + Scalar(40.024799999999999) * _tmp15 + _tmp18 * fv1;
  const Scalar _tmp119 = _tmp49 * _tmp51;
  const Scalar _tmp120 = _tmp76 * _tmp78;
  const Scalar _tmp121 = _tmp120 * _tmp84 + _tmp76 * _tmp82;
  const Scalar _tmp122 = _tmp120 * _tmp85 - _tmp121 * _tmp58 - _tmp82;
  const Scalar _tmp123 = _tmp110 * (-_tmp105 + _tmp106 * _tmp120 - _tmp108 * _tmp122);
  const Scalar _tmp124 = _tmp122 + _tmp123;
  const Scalar _tmp125 = -_tmp113 * _tmp124 + _tmp114 * _tmp123 + _tmp121;
  const Scalar _tmp126 = _tmp117 * fh1;
  const Scalar _tmp127 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp128 = _tmp45 * _tmp58 + _tmp56;
  const Scalar _tmp129 = _tmp128 * _tmp61;
  const Scalar _tmp130 = 0;
  const Scalar _tmp131 = -_tmp113 * _tmp130 - _tmp129 * _tmp49 + _tmp46;
  const Scalar _tmp132 = _tmp110 * _tmp62;
  const Scalar _tmp133 = Scalar(1.0) * _tmp109;
  const Scalar _tmp134 = _tmp132 * _tmp49 - _tmp133 * _tmp99;
  const Scalar _tmp135 = fh1 * (-_tmp117 * _tmp29 + _tmp18 * _tmp41);
  const Scalar _tmp136 = _tmp109 * _tmp86 * _tmp95;
  const Scalar _tmp137 = _tmp77 * _tmp78;
  const Scalar _tmp138 = _tmp101 * _tmp95;
  const Scalar _tmp139 = _tmp130 * _tmp138;
  const Scalar _tmp140 = _tmp101 * _tmp130;
  const Scalar _tmp141 = _tmp101 * _tmp93;
  const Scalar _tmp142 = -_tmp112 * _tmp138 + Scalar(1.0);
  const Scalar _tmp143 = -_tmp124 * _tmp138 - _tmp76;
  const Scalar _tmp144 = -_tmp104 * _tmp116 * (_tmp112 * _tmp141 + _tmp137 * _tmp142) -
                         _tmp104 * _tmp126 * (_tmp124 * _tmp141 + _tmp137 * _tmp143 + Scalar(1.0)) -
                         _tmp104 * _tmp127 * (-_tmp137 * _tmp139 + _tmp140 * _tmp93) -
                         _tmp104 * _tmp135 * (_tmp133 * _tmp93 - _tmp136 * _tmp77);
  const Scalar _tmp145 = Scalar(1.0) / (_tmp144);
  const Scalar _tmp146 = std::asinh(
      _tmp145 * (Scalar(1.0) * _tmp116 * (_tmp111 * _tmp62 - _tmp115 * _tmp64) +
                 Scalar(1.0) * _tmp118 * (_tmp119 * _tmp62 - _tmp62) +
                 Scalar(1.0) * _tmp126 * (_tmp123 * _tmp62 - _tmp125 * _tmp64) +
                 Scalar(1.0) * _tmp127 * (-_tmp128 * _tmp62 - _tmp131 * _tmp64 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp135 * (_tmp132 - _tmp134 * _tmp64) +
                 Scalar(1.0) * _tmp43 * (_tmp58 * _tmp62 - _tmp63 * _tmp64)));
  const Scalar _tmp147 = Scalar(1.4083112389913199) * _tmp144;
  const Scalar _tmp148 = _tmp51 * fh1;
  const Scalar _tmp149 = _tmp118 * _tmp62;
  const Scalar _tmp150 = _tmp43 * _tmp51;
  const Scalar _tmp151 = _tmp78 * fh1;
  const Scalar _tmp152 = _tmp117 * _tmp143 * _tmp151 - _tmp127 * _tmp139 * _tmp78 -
                         _tmp135 * _tmp136 + _tmp142 * _tmp151 * _tmp41;
  const Scalar _tmp153 = Scalar(1.0) / (_tmp152);
  const Scalar _tmp154 = std::asinh(
      _tmp153 * (_tmp115 * _tmp148 * _tmp41 + _tmp117 * _tmp125 * _tmp148 - _tmp119 * _tmp149 +
                 _tmp127 * _tmp131 * _tmp51 + _tmp134 * _tmp135 * _tmp51 + _tmp150 * _tmp63));
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp152;
  const Scalar _tmp156 = _tmp101 * _tmp112 * _tmp116 + _tmp101 * _tmp124 * _tmp126 +
                         _tmp127 * _tmp140 + _tmp133 * _tmp135;
  const Scalar _tmp157 = Scalar(1.0) / (_tmp156);
  const Scalar _tmp158 = std::asinh(
      _tmp157 * (-_tmp111 * _tmp116 * _tmp61 - _tmp123 * _tmp126 * _tmp61 + _tmp127 * _tmp129 -
                 _tmp132 * _tmp135 + _tmp149 - _tmp150 * _tmp57 * _tmp62));
  const Scalar _tmp159 = Scalar(1.4083112389913199) * _tmp156;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 * (Scalar(34.083374946563197) * _tmp0 + std::cosh(Scalar(1.0) * _tmp31) -
                 std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                           (-_tmp31 * _tmp32 -
                            Scalar(125.0) *
                                std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp30),
                                                 Scalar(2)) +
                                    std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp19 - 1),
                                             Scalar(2))))))) +
      _tmp37 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp147 *
          (Scalar(34.083374946563197) * _tmp145 + std::cosh(Scalar(1.0) * _tmp146) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp145 *
               (-_tmp146 * _tmp147 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp71),
                                                 Scalar(2)) +
                                    std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp73),
                                             Scalar(2))))))) +
      _tmp82 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp155 *
          (Scalar(34.083374946563197) * _tmp153 + std::cosh(Scalar(1.0) * _tmp154) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp153 *
               (-_tmp154 * _tmp155 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp67), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp65 - 1),
                                     Scalar(2))))))) +
      _tmp81 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp159 *
          (Scalar(34.083374946563197) * _tmp157 + std::cosh(Scalar(1.0) * _tmp158) -
           std::cosh(Scalar(0.71007031138673404) * _tmp157 *
                     (-_tmp158 * _tmp159 -
                      Scalar(125.0) *
                          std::sqrt(Scalar(
                              Scalar(0.77439999999999998) *
                                  std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp88 - 1),
                                           Scalar(2)) +
                              std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp90 - 1),
                                       Scalar(2))))))) +
      _tmp97 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
