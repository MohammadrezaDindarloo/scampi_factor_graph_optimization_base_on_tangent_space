// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl0
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl0(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 593

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (189)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp10 = 2 * _tmp9;
  const Scalar _tmp11 = _tmp10 * _tmp5;
  const Scalar _tmp12 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp13 = _tmp12 * _tmp3;
  const Scalar _tmp14 = _tmp11 - _tmp13;
  const Scalar _tmp15 = Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = -_tmp15;
  const Scalar _tmp17 = _tmp10 * _tmp3;
  const Scalar _tmp18 = _tmp12 * _tmp5;
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp20 = _tmp16 - _tmp19;
  const Scalar _tmp21 = _tmp20 + _tmp8;
  const Scalar _tmp22 = _tmp21 + position_vector(1, 0);
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp17 - Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = 1 - 2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp27 = 2 * _tmp3 * _tmp5;
  const Scalar _tmp28 = _tmp12 * _tmp9;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = -Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp31 = -_tmp26 + _tmp30;
  const Scalar _tmp32 = _tmp24 + _tmp31;
  const Scalar _tmp33 = _tmp32 + position_vector(0, 0);
  const Scalar _tmp34 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp27 - Scalar(0.20999999999999999) * _tmp28;
  const Scalar _tmp36 = -_tmp35;
  const Scalar _tmp37 =
      -Scalar(0.010999999999999999) * _tmp25 - Scalar(0.010999999999999999) * _tmp4;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp39 = _tmp37 + _tmp38;
  const Scalar _tmp40 = _tmp36 + _tmp39;
  const Scalar _tmp41 = _tmp23 + _tmp31;
  const Scalar _tmp42 = _tmp41 + position_vector(0, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(125.0);
  const Scalar _tmp44 = _tmp20 + _tmp7;
  const Scalar _tmp45 = _tmp44 + position_vector(1, 0);
  const Scalar _tmp46 = _tmp45 + Scalar(-110.0);
  const Scalar _tmp47 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp46, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp48 = _tmp43 * _tmp47;
  const Scalar _tmp49 = _tmp37 - _tmp38;
  const Scalar _tmp50 = _tmp35 + _tmp49;
  const Scalar _tmp51 = _tmp35 + _tmp39;
  const Scalar _tmp52 = _tmp16 + _tmp19;
  const Scalar _tmp53 = _tmp52 + _tmp7;
  const Scalar _tmp54 = _tmp53 + position_vector(1, 0);
  const Scalar _tmp55 = _tmp54 + Scalar(-110.0);
  const Scalar _tmp56 = _tmp26 + _tmp30;
  const Scalar _tmp57 = _tmp23 + _tmp56;
  const Scalar _tmp58 = _tmp57 + position_vector(0, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(-125.0);
  const Scalar _tmp60 = std::pow(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp59, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp59 * _tmp60;
  const Scalar _tmp62 = _tmp50 * _tmp61;
  const Scalar _tmp63 = -_tmp51 * _tmp61 + _tmp62;
  const Scalar _tmp64 = _tmp24 + _tmp56;
  const Scalar _tmp65 = _tmp64 + position_vector(0, 0);
  const Scalar _tmp66 = _tmp65 + Scalar(-125.0);
  const Scalar _tmp67 = Scalar(1.0) / (_tmp66);
  const Scalar _tmp68 = _tmp52 + _tmp8;
  const Scalar _tmp69 = _tmp68 + position_vector(1, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(110.0);
  const Scalar _tmp71 = _tmp67 * _tmp70;
  const Scalar _tmp72 = _tmp55 * _tmp60;
  const Scalar _tmp73 = Scalar(1.0) / (_tmp61 * _tmp71 - _tmp72);
  const Scalar _tmp74 = _tmp46 * _tmp47;
  const Scalar _tmp75 = _tmp48 * _tmp71 - _tmp74;
  const Scalar _tmp76 = _tmp73 * _tmp75;
  const Scalar _tmp77 = _tmp51 * _tmp72 - _tmp62 * _tmp71;
  const Scalar _tmp78 = _tmp50 * _tmp71;
  const Scalar _tmp79 = _tmp40 * _tmp74 - _tmp48 * _tmp78 - _tmp76 * _tmp77;
  const Scalar _tmp80 = Scalar(1.0) * _tmp68;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp53 + _tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp64;
  const Scalar _tmp84 = _tmp82 * (-_tmp57 + _tmp83);
  const Scalar _tmp85 = -_tmp40 * _tmp48 + _tmp48 * _tmp50 - _tmp63 * _tmp76 - _tmp79 * _tmp84;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp87 = _tmp71 * _tmp73;
  const Scalar _tmp88 = _tmp77 * _tmp87 + _tmp78;
  const Scalar _tmp89 = -_tmp50 + _tmp63 * _tmp87 - _tmp84 * _tmp88;
  const Scalar _tmp90 =
      std::sqrt(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp70, Scalar(2))));
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 = _tmp67 * _tmp90;
  const Scalar _tmp93 = _tmp92 * (_tmp64 * _tmp70 * _tmp91 - _tmp66 * _tmp68 * _tmp91);
  const Scalar _tmp94 = _tmp53 * _tmp61 - _tmp57 * _tmp72 + _tmp61 * _tmp93;
  const Scalar _tmp95 = -_tmp41 * _tmp74 + _tmp44 * _tmp48 + _tmp48 * _tmp93 - _tmp76 * _tmp94;
  const Scalar _tmp96 = _tmp86 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp98 = _tmp85 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (_tmp87 * _tmp94 - _tmp89 * _tmp96 - _tmp93);
  const Scalar _tmp100 = _tmp86 * (_tmp89 + _tmp99);
  const Scalar _tmp101 = -_tmp100 * _tmp75 - _tmp71;
  const Scalar _tmp102 = _tmp61 * _tmp73;
  const Scalar _tmp103 = _tmp33 + Scalar(125.0);
  const Scalar _tmp104 = _tmp22 + Scalar(110.0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp103 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = Scalar(1.0) * _tmp97;
  const Scalar _tmp109 = _tmp104 * _tmp105;
  const Scalar _tmp110 = fh1 * (-_tmp106 * _tmp21 + _tmp109 * _tmp32);
  const Scalar _tmp111 = Scalar(1.0) * _tmp73;
  const Scalar _tmp112 = _tmp111 * _tmp77;
  const Scalar _tmp113 = -_tmp111 * _tmp63 + _tmp112 * _tmp84;
  const Scalar _tmp114 = _tmp98 * (-_tmp111 * _tmp94 - _tmp113 * _tmp96);
  const Scalar _tmp115 = _tmp86 * (_tmp113 + _tmp114);
  const Scalar _tmp116 = -_tmp115 * _tmp75 + Scalar(1.0);
  const Scalar _tmp117 = _tmp109 * fh1;
  const Scalar _tmp118 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp119 = _tmp80 * _tmp84 + _tmp83;
  const Scalar _tmp120 = 0;
  const Scalar _tmp121 = _tmp120 * _tmp76;
  const Scalar _tmp122 = _tmp92 * (_tmp120 * _tmp48 - _tmp121 * _tmp61);
  const Scalar _tmp123 = -_tmp107 * _tmp92 * (_tmp100 * _tmp48 + _tmp101 * _tmp102 + Scalar(1.0)) -
                         _tmp110 * _tmp92 * (_tmp108 * _tmp48 - _tmp108 * _tmp61 * _tmp76) -
                         _tmp117 * _tmp92 * (_tmp102 * _tmp116 + _tmp115 * _tmp48) -
                         _tmp118 * _tmp122;
  const Scalar _tmp124 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp125 = _tmp44 + _tmp81;
  const Scalar _tmp126 = _tmp125 * _tmp84;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 - _tmp41 + _tmp83);
  const Scalar _tmp128 = _tmp119 * _tmp127;
  const Scalar _tmp129 = _tmp82 * (-_tmp120 * _tmp79 - _tmp125 * _tmp128 + _tmp81);
  const Scalar _tmp130 = -Scalar(1.0) * _tmp128 - Scalar(1.0) * _tmp129 + Scalar(1.0);
  const Scalar _tmp131 = Scalar(1.0) * _tmp127;
  const Scalar _tmp132 = _tmp131 * _tmp98;
  const Scalar _tmp133 = -_tmp108 * _tmp79 + _tmp125 * _tmp132;
  const Scalar _tmp134 = Scalar(1.0) * _tmp82;
  const Scalar _tmp135 = _tmp125 * _tmp127;
  const Scalar _tmp136 = -_tmp112 + _tmp114 * _tmp135 - _tmp115 * _tmp79;
  const Scalar _tmp137 = -_tmp100 * _tmp79 + _tmp135 * _tmp99 + _tmp88;
  const Scalar _tmp138 = fh1 * (_tmp36 + _tmp49);
  const Scalar _tmp139 = -_tmp109 * _tmp138 - Scalar(40.024799999999999) * _tmp14 - _tmp21 * fv1;
  const Scalar _tmp140 = _tmp126 * _tmp131 + Scalar(1.0);
  const Scalar _tmp141 = _tmp131 * _tmp84;
  const Scalar _tmp142 = -Scalar(1.0) * _tmp134 * _tmp140 + Scalar(1.0) * _tmp141;
  const Scalar _tmp143 = _tmp106 * _tmp138 + Scalar(40.024799999999999) * _tmp29 + _tmp32 * fv1;
  const Scalar _tmp144 = _tmp125 * _tmp82;
  const Scalar _tmp145 = Scalar(1.0) * _tmp131 * _tmp144 - Scalar(1.0) * _tmp131;
  const Scalar _tmp146 = Scalar(1.0) * _tmp107 * (_tmp131 * _tmp99 - _tmp134 * _tmp137) +
                         Scalar(1.0) * _tmp110 * (_tmp132 - _tmp133 * _tmp134) +
                         Scalar(1.0) * _tmp117 * (_tmp114 * _tmp131 - _tmp134 * _tmp136) +
                         _tmp118 * _tmp130 + _tmp139 * _tmp142 + _tmp143 * _tmp145;
  const Scalar _tmp147 = std::asinh(_tmp124 * _tmp146);
  const Scalar _tmp148 = Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = Scalar(1.4083112389913199) * _tmp123;
  const Scalar _tmp150 =
      -_tmp147 * _tmp149 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp65), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp69 - 1), Scalar(2))));
  const Scalar _tmp151 = Scalar(0.71007031138673404) * _tmp124;
  const Scalar _tmp152 = _tmp150 * _tmp151;
  const Scalar _tmp153 = Scalar(1.4083112389913199) * _tmp122;
  const Scalar _tmp154 = std::pow(_tmp123, Scalar(-2));
  const Scalar _tmp155 = _tmp122 * _tmp154;
  const Scalar _tmp156 = _tmp15 + _tmp19 + _tmp7;
  const Scalar _tmp157 =
      (_tmp124 * (-_tmp130 + _tmp142 * _tmp156 + _tmp145 * _tmp32) - _tmp146 * _tmp155) /
      std::sqrt(Scalar(std::pow(_tmp146, Scalar(2)) * _tmp154 + 1));
  const Scalar _tmp158 = _tmp108 * _tmp110;
  const Scalar _tmp159 = _tmp118 * _tmp120;
  const Scalar _tmp160 =
      _tmp101 * _tmp107 * _tmp73 + _tmp116 * _tmp117 * _tmp73 - _tmp158 * _tmp76 - _tmp159 * _tmp76;
  const Scalar _tmp161 = Scalar(1.0) / (_tmp160);
  const Scalar _tmp162 = _tmp131 * _tmp143;
  const Scalar _tmp163 = _tmp140 * _tmp82;
  const Scalar _tmp164 = _tmp107 * _tmp137 * _tmp82 + _tmp110 * _tmp133 * _tmp82 +
                         _tmp117 * _tmp136 * _tmp82 + _tmp118 * _tmp129 + _tmp139 * _tmp163 -
                         _tmp144 * _tmp162;
  const Scalar _tmp165 = std::asinh(_tmp161 * _tmp164);
  const Scalar _tmp166 = Scalar(1.4083112389913199) * _tmp160;
  const Scalar _tmp167 =
      -_tmp165 * _tmp166 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp54), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp58), Scalar(2))));
  const Scalar _tmp168 = Scalar(0.71007031138673404) * _tmp161;
  const Scalar _tmp169 = _tmp167 * _tmp168;
  const Scalar _tmp170 = Scalar(1.0) * _tmp165;
  const Scalar _tmp171 = Scalar(1.4083112389913199) * _tmp120;
  const Scalar _tmp172 = _tmp171 * _tmp76;
  const Scalar _tmp173 = _tmp131 * _tmp32;
  const Scalar _tmp174 = std::pow(_tmp160, Scalar(-2));
  const Scalar _tmp175 = _tmp121 * _tmp174;
  const Scalar _tmp176 =
      (_tmp161 * (-_tmp129 - _tmp144 * _tmp173 + _tmp156 * _tmp163) - _tmp164 * _tmp175) /
      std::sqrt(Scalar(std::pow(_tmp164, Scalar(2)) * _tmp174 + 1));
  const Scalar _tmp177 = -_tmp107 * _tmp127 * _tmp99 - _tmp110 * _tmp132 -
                         _tmp114 * _tmp117 * _tmp127 + _tmp118 * _tmp128 - _tmp139 * _tmp141 +
                         _tmp162;
  const Scalar _tmp178 = _tmp100 * _tmp107 + _tmp115 * _tmp117 + _tmp158 + _tmp159;
  const Scalar _tmp179 = Scalar(1.0) / (_tmp178);
  const Scalar _tmp180 = std::asinh(_tmp177 * _tmp179);
  const Scalar _tmp181 = Scalar(1.4083112389913199) * _tmp178;
  const Scalar _tmp182 =
      -_tmp180 * _tmp181 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp45), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp42 - 1), Scalar(2))));
  const Scalar _tmp183 = Scalar(0.71007031138673404) * _tmp179;
  const Scalar _tmp184 = _tmp182 * _tmp183;
  const Scalar _tmp185 = Scalar(1.0) * _tmp180;
  const Scalar _tmp186 = std::pow(_tmp178, Scalar(-2));
  const Scalar _tmp187 = _tmp120 * _tmp186;
  const Scalar _tmp188 = (_tmp177 * _tmp187 + _tmp179 * (-_tmp128 - _tmp141 * _tmp156 + _tmp173)) /
                         std::sqrt(Scalar(std::pow(_tmp177, Scalar(2)) * _tmp186 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp34 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                         (-_tmp1 * _tmp34 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp22 - 1),
                                               Scalar(2)) +
                                  std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp33 - 1),
                                           Scalar(2)))))));
  _res(1, 0) = _tmp149 * (-Scalar(1.0) * _tmp157 * std::cosh(_tmp148) -
                          (-Scalar(0.71007031138673404) * _tmp150 * _tmp155 +
                           _tmp151 * (-_tmp147 * _tmp153 - _tmp149 * _tmp157)) *
                              std::cosh(_tmp152)) +
               _tmp153 * (-std::sinh(_tmp148) - std::sinh(_tmp152));
  _res(2, 0) = _tmp166 * (-Scalar(1.0) * _tmp176 * std::cosh(_tmp170) -
                          (-Scalar(0.71007031138673404) * _tmp167 * _tmp175 +
                           _tmp168 * (-_tmp165 * _tmp172 - _tmp166 * _tmp176)) *
                              std::cosh(_tmp169)) +
               _tmp172 * (-std::sinh(_tmp169) - std::sinh(_tmp170));
  _res(3, 0) = -_tmp171 * (-std::sinh(_tmp184) - std::sinh(_tmp185)) +
               _tmp181 * (-Scalar(1.0) * _tmp188 * std::cosh(_tmp185) -
                          (Scalar(0.71007031138673404) * _tmp182 * _tmp187 +
                           _tmp183 * (_tmp171 * _tmp180 - _tmp181 * _tmp188)) *
                              std::cosh(_tmp184));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
