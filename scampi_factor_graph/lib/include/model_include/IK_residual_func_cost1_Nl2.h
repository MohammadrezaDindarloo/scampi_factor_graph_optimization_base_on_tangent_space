// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl2
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl2(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 506

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (158)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 2 * _tmp2;
  const Scalar _tmp4 = _tmp1 * _tmp3;
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -_tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp11 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp11;
  const Scalar _tmp13 = _tmp3 * _tmp5;
  const Scalar _tmp14 = _tmp1 * _tmp6;
  const Scalar _tmp15 = _tmp13 - _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp12 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp9;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp20;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = 2 * _tmp1 * _tmp5;
  const Scalar _tmp24 = _tmp2 * _tmp6;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp4 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp34 = -_tmp33;
  const Scalar _tmp35 = -Scalar(0.010999999999999999) * _tmp10 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp36 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp37 = _tmp35 - _tmp36;
  const Scalar _tmp38 = _tmp34 + _tmp37;
  const Scalar _tmp39 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp40 = _tmp17 + _tmp8;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp42 = _tmp41 + Scalar(110.0);
  const Scalar _tmp43 = _tmp21 + _tmp28;
  const Scalar _tmp44 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp45 = _tmp44 + Scalar(-125.0);
  const Scalar _tmp46 = std::pow(Scalar(std::pow(_tmp42, Scalar(2)) + std::pow(_tmp45, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp47 = _tmp42 * _tmp46;
  const Scalar _tmp48 = _tmp12 + _tmp16;
  const Scalar _tmp49 = _tmp48 + _tmp8;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(-110.0);
  const Scalar _tmp52 = _tmp26 + _tmp27;
  const Scalar _tmp53 = _tmp21 + _tmp52;
  const Scalar _tmp54 = _tmp53 + position_vector(0, 0);
  const Scalar _tmp55 = _tmp54 + Scalar(-125.0);
  const Scalar _tmp56 = Scalar(1.0) / (_tmp55);
  const Scalar _tmp57 = _tmp51 * _tmp56;
  const Scalar _tmp58 = _tmp45 * _tmp46;
  const Scalar _tmp59 = Scalar(1.0) / (-_tmp47 + _tmp57 * _tmp58);
  const Scalar _tmp60 = _tmp58 * _tmp59;
  const Scalar _tmp61 = Scalar(1.0) * _tmp49;
  const Scalar _tmp62 = -_tmp61;
  const Scalar _tmp63 = Scalar(1.0) / (_tmp40 + _tmp62);
  const Scalar _tmp64 = Scalar(1.0) * _tmp53;
  const Scalar _tmp65 = _tmp63 * (-_tmp43 + _tmp64);
  const Scalar _tmp66 = _tmp61 * _tmp65 + _tmp64;
  const Scalar _tmp67 = 0;
  const Scalar _tmp68 = _tmp35 + _tmp36;
  const Scalar _tmp69 = _tmp34 + _tmp68;
  const Scalar _tmp70 = _tmp22 + _tmp52;
  const Scalar _tmp71 = _tmp70 + position_vector(0, 0);
  const Scalar _tmp72 = _tmp71 + Scalar(125.0);
  const Scalar _tmp73 = _tmp48 + _tmp9;
  const Scalar _tmp74 = _tmp73 + position_vector(1, 0);
  const Scalar _tmp75 = _tmp74 + Scalar(-110.0);
  const Scalar _tmp76 = std::pow(Scalar(std::pow(_tmp72, Scalar(2)) + std::pow(_tmp75, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp77 = _tmp72 * _tmp76;
  const Scalar _tmp78 = _tmp33 + _tmp37;
  const Scalar _tmp79 = _tmp33 + _tmp68;
  const Scalar _tmp80 = _tmp58 * _tmp79;
  const Scalar _tmp81 = _tmp47 * _tmp78 - _tmp57 * _tmp80;
  const Scalar _tmp82 = _tmp75 * _tmp76;
  const Scalar _tmp83 = _tmp57 * _tmp77 - _tmp82;
  const Scalar _tmp84 = _tmp59 * _tmp83;
  const Scalar _tmp85 = _tmp77 * _tmp79;
  const Scalar _tmp86 = -_tmp57 * _tmp85 + _tmp69 * _tmp82 - _tmp81 * _tmp84;
  const Scalar _tmp87 = -_tmp58 * _tmp78 + _tmp80;
  const Scalar _tmp88 = -_tmp65 * _tmp86 - _tmp69 * _tmp77 - _tmp84 * _tmp87 + _tmp85;
  const Scalar _tmp89 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp90 = _tmp83 * _tmp89;
  const Scalar _tmp91 = _tmp67 * _tmp90;
  const Scalar _tmp92 = _tmp67 * _tmp89;
  const Scalar _tmp93 =
      std::sqrt(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp55, Scalar(2))));
  const Scalar _tmp94 = _tmp56 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp96 = _tmp94 * (-_tmp49 * _tmp55 * _tmp95 + _tmp51 * _tmp53 * _tmp95);
  const Scalar _tmp97 = _tmp40 * _tmp58 - _tmp43 * _tmp47 + _tmp58 * _tmp96;
  const Scalar _tmp98 = -_tmp70 * _tmp82 + _tmp73 * _tmp77 + _tmp77 * _tmp96 - _tmp84 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp100 = Scalar(1.0) * _tmp99;
  const Scalar _tmp101 = Scalar(1.0) * _tmp59;
  const Scalar _tmp102 = _tmp101 * _tmp83 * _tmp99;
  const Scalar _tmp103 = _tmp19 + Scalar(110.0);
  const Scalar _tmp104 = _tmp30 + Scalar(125.0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp103 * _tmp105;
  const Scalar _tmp107 = _tmp104 * _tmp105;
  const Scalar _tmp108 = fh1 * (_tmp106 * _tmp29 - _tmp107 * _tmp18);
  const Scalar _tmp109 = _tmp57 * _tmp59;
  const Scalar _tmp110 = _tmp109 * _tmp81 + _tmp57 * _tmp79;
  const Scalar _tmp111 = _tmp109 * _tmp87 - _tmp110 * _tmp65 - _tmp79;
  const Scalar _tmp112 = _tmp89 * _tmp98;
  const Scalar _tmp113 = _tmp88 * _tmp99;
  const Scalar _tmp114 = _tmp113 * (_tmp109 * _tmp97 - _tmp111 * _tmp112 - _tmp96);
  const Scalar _tmp115 = _tmp111 + _tmp114;
  const Scalar _tmp116 = -_tmp115 * _tmp90 - _tmp57;
  const Scalar _tmp117 = _tmp77 * _tmp89;
  const Scalar _tmp118 = _tmp107 * fh1;
  const Scalar _tmp119 = _tmp101 * _tmp81;
  const Scalar _tmp120 = -_tmp101 * _tmp87 + _tmp119 * _tmp65;
  const Scalar _tmp121 = _tmp113 * (-_tmp101 * _tmp97 - _tmp112 * _tmp120);
  const Scalar _tmp122 = _tmp120 + _tmp121;
  const Scalar _tmp123 = -_tmp122 * _tmp90 + Scalar(1.0);
  const Scalar _tmp124 = _tmp106 * fh1;
  const Scalar _tmp125 = -_tmp108 * _tmp94 * (_tmp100 * _tmp77 - _tmp102 * _tmp58) -
                         _tmp118 * _tmp94 * (_tmp115 * _tmp117 + _tmp116 * _tmp60 + Scalar(1.0)) -
                         _tmp124 * _tmp94 * (_tmp117 * _tmp122 + _tmp123 * _tmp60) -
                         _tmp39 * _tmp94 * (-_tmp60 * _tmp91 + _tmp77 * _tmp92);
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp86 * _tmp89;
  const Scalar _tmp128 = _tmp62 + _tmp73;
  const Scalar _tmp129 = _tmp128 * _tmp65;
  const Scalar _tmp130 = Scalar(1.0) / (-_tmp129 + _tmp64 - _tmp70);
  const Scalar _tmp131 = _tmp130 * _tmp66;
  const Scalar _tmp132 = _tmp63 * (-_tmp127 * _tmp67 - _tmp128 * _tmp131 + _tmp62);
  const Scalar _tmp133 = Scalar(1.0) * _tmp130;
  const Scalar _tmp134 = _tmp128 * _tmp130;
  const Scalar _tmp135 = _tmp110 + _tmp114 * _tmp134 - _tmp115 * _tmp127;
  const Scalar _tmp136 = Scalar(1.0) * _tmp63;
  const Scalar _tmp137 = Scalar(1.0) * fh1;
  const Scalar _tmp138 = _tmp133 * _tmp65;
  const Scalar _tmp139 = _tmp63 * (_tmp129 * _tmp133 + Scalar(1.0));
  const Scalar _tmp140 = _tmp38 * fh1;
  const Scalar _tmp141 = -_tmp106 * _tmp140 - Scalar(40.024799999999999) * _tmp15 - _tmp18 * fv1;
  const Scalar _tmp142 = _tmp113 * _tmp133;
  const Scalar _tmp143 = -_tmp100 * _tmp86 + _tmp128 * _tmp142;
  const Scalar _tmp144 = _tmp107 * _tmp140 + Scalar(40.024799999999999) * _tmp25 + _tmp29 * fv1;
  const Scalar _tmp145 = _tmp128 * _tmp63;
  const Scalar _tmp146 = -_tmp119 + _tmp121 * _tmp134 - _tmp122 * _tmp127;
  const Scalar _tmp147 = std::asinh(
      _tmp126 * (_tmp106 * _tmp137 * (_tmp121 * _tmp133 - _tmp136 * _tmp146) +
                 _tmp107 * _tmp137 * (_tmp114 * _tmp133 - _tmp135 * _tmp136) +
                 Scalar(1.0) * _tmp108 * (-_tmp136 * _tmp143 + _tmp142) +
                 Scalar(1.0) * _tmp141 * (_tmp138 - Scalar(1.0) * _tmp139) +
                 Scalar(1.0) * _tmp144 * (_tmp133 * _tmp145 - _tmp133) +
                 Scalar(1.0) * _tmp39 * (-Scalar(1.0) * _tmp132 - _tmp133 * _tmp66 + Scalar(1.0))));
  const Scalar _tmp148 = Scalar(1.4083112389913199) * _tmp125;
  const Scalar _tmp149 = -_tmp102 * _tmp108 + _tmp116 * _tmp118 * _tmp59 +
                         _tmp123 * _tmp124 * _tmp59 - _tmp39 * _tmp59 * _tmp91;
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 = _tmp133 * _tmp144;
  const Scalar _tmp152 =
      std::asinh(_tmp150 * (_tmp108 * _tmp143 * _tmp63 + _tmp118 * _tmp135 * _tmp63 +
                            _tmp124 * _tmp146 * _tmp63 + _tmp132 * _tmp39 + _tmp139 * _tmp141 -
                            _tmp145 * _tmp151));
  const Scalar _tmp153 = Scalar(1.4083112389913199) * _tmp149;
  const Scalar _tmp154 =
      _tmp100 * _tmp108 + _tmp115 * _tmp118 * _tmp89 + _tmp122 * _tmp124 * _tmp89 + _tmp39 * _tmp92;
  const Scalar _tmp155 = Scalar(1.0) / (_tmp154);
  const Scalar _tmp156 = std::asinh(_tmp155 * (-_tmp108 * _tmp142 - _tmp114 * _tmp118 * _tmp130 -
                                               _tmp121 * _tmp124 * _tmp130 + _tmp131 * _tmp39 -
                                               _tmp138 * _tmp141 + _tmp151));
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp154;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 *
          (Scalar(34.083374946563197) * _tmp0 + std::cosh(Scalar(1.0) * _tmp31) -
           std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                     (-_tmp31 * _tmp32 -
                      Scalar(125.0) *
                          std::sqrt(Scalar(
                              Scalar(0.77439999999999998) *
                                  std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp19 - 1),
                                           Scalar(2)) +
                              std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp30 - 1),
                                       Scalar(2))))))) +
      _tmp38 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp148 *
          (Scalar(34.083374946563197) * _tmp126 + std::cosh(Scalar(1.0) * _tmp147) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp126 *
               (-_tmp147 * _tmp148 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp50),
                                                 Scalar(2)) +
                                    std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp54),
                                             Scalar(2))))))) +
      _tmp79 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp153 *
          (Scalar(34.083374946563197) * _tmp150 + std::cosh(Scalar(1.0) * _tmp152) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp150 *
               (-_tmp152 * _tmp153 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp44), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp41 - 1),
                                     Scalar(2))))))) +
      _tmp78 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp157 *
          (Scalar(34.083374946563197) * _tmp155 + std::cosh(Scalar(1.0) * _tmp156) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp155 *
               (-_tmp156 * _tmp157 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp74),
                                                 Scalar(2)) +
                                    std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp71 - 1),
                                             Scalar(2))))))) +
      _tmp69 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
