// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl10
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl10(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 525

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (159)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp7;
  const Scalar _tmp9 = _tmp3 * _tmp8;
  const Scalar _tmp10 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = 2 * _tmp1;
  const Scalar _tmp12 = _tmp10 * _tmp11;
  const Scalar _tmp13 = -_tmp12 + _tmp9;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp1 * _tmp8;
  const Scalar _tmp16 = 2 * _tmp10 * _tmp3;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp6;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp23 = _tmp11 * _tmp3;
  const Scalar _tmp24 = _tmp10 * _tmp8;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp30), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp20 - 1), Scalar(2));
  const Scalar _tmp32 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp21 + Scalar(-0.010999999999999999);
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp38 = _tmp36 + _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp36 - _tmp37;
  const Scalar _tmp41 = _tmp34 + _tmp40;
  const Scalar _tmp42 = -_tmp22;
  const Scalar _tmp43 = _tmp26 + _tmp27;
  const Scalar _tmp44 = _tmp42 + _tmp43;
  const Scalar _tmp45 = _tmp44 + position_vector(0, 0);
  const Scalar _tmp46 = _tmp14 - _tmp17;
  const Scalar _tmp47 = _tmp46 + _tmp5;
  const Scalar _tmp48 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp49 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp48), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp45 - 1), Scalar(2));
  const Scalar _tmp50 = _tmp18 + _tmp5;
  const Scalar _tmp51 = _tmp50 + position_vector(1, 0);
  const Scalar _tmp52 = _tmp51 + Scalar(-110.0);
  const Scalar _tmp53 = _tmp22 + _tmp43;
  const Scalar _tmp54 = _tmp53 + position_vector(0, 0);
  const Scalar _tmp55 = _tmp54 + Scalar(-125.0);
  const Scalar _tmp56 = std::pow(Scalar(std::pow(_tmp52, Scalar(2)) + std::pow(_tmp55, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp57 = _tmp55 * _tmp56;
  const Scalar _tmp58 = _tmp52 * _tmp56;
  const Scalar _tmp59 = _tmp46 + _tmp6;
  const Scalar _tmp60 = _tmp59 + position_vector(1, 0);
  const Scalar _tmp61 = _tmp60 + Scalar(110.0);
  const Scalar _tmp62 = _tmp28 + _tmp42;
  const Scalar _tmp63 = _tmp62 + position_vector(0, 0);
  const Scalar _tmp64 = _tmp63 + Scalar(125.0);
  const Scalar _tmp65 = std::pow(Scalar(std::pow(_tmp61, Scalar(2)) + std::pow(_tmp64, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp66 = _tmp64 * _tmp65;
  const Scalar _tmp67 = _tmp48 + Scalar(-110.0);
  const Scalar _tmp68 = _tmp45 + Scalar(125.0);
  const Scalar _tmp69 =
      std::sqrt(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp68, Scalar(2))));
  const Scalar _tmp70 = Scalar(1.0) / (_tmp69);
  const Scalar _tmp71 = Scalar(1.0) / (_tmp68);
  const Scalar _tmp72 = _tmp69 * _tmp71;
  const Scalar _tmp73 = _tmp72 * (_tmp44 * _tmp67 * _tmp70 - _tmp47 * _tmp68 * _tmp70);
  const Scalar _tmp74 = _tmp61 * _tmp65;
  const Scalar _tmp75 = _tmp59 * _tmp66 - _tmp62 * _tmp74 + _tmp66 * _tmp73;
  const Scalar _tmp76 = _tmp67 * _tmp71;
  const Scalar _tmp77 = Scalar(1.0) / (_tmp66 * _tmp76 - _tmp74);
  const Scalar _tmp78 = _tmp57 * _tmp76 - _tmp58;
  const Scalar _tmp79 = _tmp77 * _tmp78;
  const Scalar _tmp80 = _tmp50 * _tmp57 - _tmp53 * _tmp58 + _tmp57 * _tmp73 - _tmp75 * _tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp81;
  const Scalar _tmp83 = _tmp66 * _tmp79;
  const Scalar _tmp84 = _tmp20 + Scalar(110.0);
  const Scalar _tmp85 = _tmp30 + Scalar(-125.0);
  const Scalar _tmp86 = std::pow(Scalar(std::pow(_tmp84, Scalar(2)) + std::pow(_tmp85, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp87 = _tmp84 * _tmp86;
  const Scalar _tmp88 = _tmp85 * _tmp86;
  const Scalar _tmp89 = fh1 * (-_tmp19 * _tmp88 + _tmp29 * _tmp87);
  const Scalar _tmp90 = _tmp34 + _tmp38;
  const Scalar _tmp91 = _tmp41 * _tmp66;
  const Scalar _tmp92 = _tmp35 + _tmp40;
  const Scalar _tmp93 = -_tmp66 * _tmp92 + _tmp91;
  const Scalar _tmp94 = _tmp41 * _tmp57;
  const Scalar _tmp95 = _tmp74 * _tmp92 - _tmp76 * _tmp91;
  const Scalar _tmp96 = _tmp58 * _tmp90 - _tmp76 * _tmp94 - _tmp79 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) * _tmp47;
  const Scalar _tmp98 = -_tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp59 + _tmp98);
  const Scalar _tmp100 = Scalar(1.0) * _tmp44;
  const Scalar _tmp101 = _tmp100 - _tmp62;
  const Scalar _tmp102 = _tmp101 * _tmp99;
  const Scalar _tmp103 = -_tmp102 * _tmp96 - _tmp57 * _tmp90 - _tmp79 * _tmp93 + _tmp94;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = Scalar(1.0) * _tmp77;
  const Scalar _tmp106 = Scalar(1.0) * _tmp99;
  const Scalar _tmp107 = _tmp101 * _tmp106 * _tmp77 * _tmp95 - _tmp105 * _tmp93;
  const Scalar _tmp108 = _tmp104 * _tmp80;
  const Scalar _tmp109 = _tmp103 * _tmp81;
  const Scalar _tmp110 = _tmp109 * (-_tmp105 * _tmp75 - _tmp107 * _tmp108);
  const Scalar _tmp111 = _tmp104 * (_tmp107 + _tmp110);
  const Scalar _tmp112 = -_tmp111 * _tmp78 + Scalar(1.0);
  const Scalar _tmp113 = _tmp66 * _tmp77;
  const Scalar _tmp114 = _tmp87 * fh1;
  const Scalar _tmp115 = _tmp76 * _tmp77;
  const Scalar _tmp116 = _tmp115 * _tmp95 + _tmp41 * _tmp76;
  const Scalar _tmp117 = -_tmp102 * _tmp116 + _tmp115 * _tmp93 - _tmp41;
  const Scalar _tmp118 = _tmp109 * (-_tmp108 * _tmp117 + _tmp115 * _tmp75 - _tmp73);
  const Scalar _tmp119 = _tmp104 * (_tmp117 + _tmp118);
  const Scalar _tmp120 = -_tmp119 * _tmp78 - _tmp76;
  const Scalar _tmp121 = _tmp88 * fh1;
  const Scalar _tmp122 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp123 = _tmp100 + _tmp102 * _tmp97;
  const Scalar _tmp124 = 0;
  const Scalar _tmp125 = -_tmp114 * _tmp72 * (_tmp111 * _tmp57 + _tmp112 * _tmp113) -
                         _tmp121 * _tmp72 * (_tmp113 * _tmp120 + _tmp119 * _tmp57 + Scalar(1.0)) -
                         _tmp122 * _tmp72 * (_tmp124 * _tmp57 - _tmp124 * _tmp83) -
                         _tmp72 * _tmp89 * (_tmp57 * _tmp82 - _tmp82 * _tmp83);
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp50 + _tmp98;
  const Scalar _tmp128 = _tmp102 * _tmp127;
  const Scalar _tmp129 = Scalar(1.0) / (_tmp100 - _tmp128 - _tmp53);
  const Scalar _tmp130 = Scalar(1.0) * _tmp129;
  const Scalar _tmp131 = _tmp102 * _tmp130;
  const Scalar _tmp132 = _tmp128 * _tmp130 + Scalar(1.0);
  const Scalar _tmp133 = _tmp39 * fh1;
  const Scalar _tmp134 = -Scalar(40.024799999999999) * _tmp13 - _tmp133 * _tmp87 - _tmp19 * fv1;
  const Scalar _tmp135 = _tmp109 * _tmp130;
  const Scalar _tmp136 = _tmp127 * _tmp135 - _tmp82 * _tmp96;
  const Scalar _tmp137 = _tmp127 * _tmp129;
  const Scalar _tmp138 = _tmp116 + _tmp118 * _tmp137 - _tmp119 * _tmp96;
  const Scalar _tmp139 = _tmp127 * _tmp99;
  const Scalar _tmp140 = _tmp133 * _tmp88 + Scalar(40.024799999999999) * _tmp25 + _tmp29 * fv1;
  const Scalar _tmp141 = _tmp123 * _tmp129;
  const Scalar _tmp142 = -_tmp124 * _tmp96 - _tmp127 * _tmp141 + _tmp98;
  const Scalar _tmp143 = -_tmp105 * _tmp95 + _tmp110 * _tmp137 - _tmp111 * _tmp96;
  const Scalar _tmp144 = std::asinh(
      _tmp126 * (Scalar(1.0) * _tmp114 * (-_tmp106 * _tmp143 + _tmp110 * _tmp130) +
                 Scalar(1.0) * _tmp121 * (-_tmp106 * _tmp138 + _tmp118 * _tmp130) +
                 Scalar(1.0) * _tmp122 * (-_tmp106 * _tmp142 - _tmp123 * _tmp130 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp134 * (-_tmp106 * _tmp132 + _tmp131) +
                 Scalar(1.0) * _tmp140 * (_tmp130 * _tmp139 - _tmp130) +
                 Scalar(1.0) * _tmp89 * (-_tmp106 * _tmp136 + _tmp135)));
  const Scalar _tmp145 = Scalar(1.4083112389913199) * _tmp125;
  const Scalar _tmp146 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp60 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp63 - 1), Scalar(2));
  const Scalar _tmp147 = _tmp82 * _tmp89;
  const Scalar _tmp148 = _tmp122 * _tmp124;
  const Scalar _tmp149 =
      _tmp112 * _tmp114 * _tmp77 + _tmp120 * _tmp121 * _tmp77 - _tmp147 * _tmp79 - _tmp148 * _tmp79;
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 = _tmp130 * _tmp140;
  const Scalar _tmp152 =
      std::asinh(_tmp150 * (_tmp114 * _tmp143 * _tmp99 + _tmp121 * _tmp138 * _tmp99 +
                            _tmp122 * _tmp142 * _tmp99 + _tmp132 * _tmp134 * _tmp99 +
                            _tmp136 * _tmp89 * _tmp99 - _tmp139 * _tmp151));
  const Scalar _tmp153 = Scalar(1.4083112389913199) * _tmp149;
  const Scalar _tmp154 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp51), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp54), Scalar(2));
  const Scalar _tmp155 = _tmp111 * _tmp114 + _tmp119 * _tmp121 + _tmp147 + _tmp148;
  const Scalar _tmp156 = Scalar(1.0) / (_tmp155);
  const Scalar _tmp157 =
      std::asinh(_tmp156 * (-_tmp110 * _tmp114 * _tmp129 - _tmp118 * _tmp121 * _tmp129 +
                            _tmp122 * _tmp141 - _tmp131 * _tmp134 - _tmp135 * _tmp89 + _tmp151));
  const Scalar _tmp158 = Scalar(1.4083112389913199) * _tmp155;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
          (-std::sinh(Scalar(1.0) * _tmp32) - std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                                                        (-std::sqrt(_tmp31) - _tmp32 * _tmp33))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp31 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp39 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp145 * (-std::sinh(Scalar(1.0) * _tmp144) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp126 *
                           (-_tmp144 * _tmp145 - std::sqrt(_tmp49)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp49 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp41 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp153 * (-std::sinh(Scalar(1.0) * _tmp152) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp150 *
                           (-std::sqrt(_tmp146) - _tmp152 * _tmp153))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp146 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp92 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp158 * (-std::sinh(Scalar(1.0) * _tmp157) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp156 *
                           (-std::sqrt(_tmp154) - _tmp157 * _tmp158))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp154 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp90 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
