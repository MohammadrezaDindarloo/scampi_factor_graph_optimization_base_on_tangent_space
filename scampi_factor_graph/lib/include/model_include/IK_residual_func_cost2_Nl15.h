// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl15
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl15(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 531

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (161)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp1 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp9 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp10 =
      -Scalar(0.010999999999999999) * _tmp8 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp11 = _tmp2 * _tmp4;
  const Scalar _tmp12 = _tmp0 * _tmp5;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp10 + _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp7;
  const Scalar _tmp16 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp18 = _tmp3 + _tmp6;
  const Scalar _tmp19 = -Scalar(0.010999999999999999) * _tmp18;
  const Scalar _tmp20 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp21 = _tmp1 * _tmp5;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp20 - Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp19 + _tmp22;
  const Scalar _tmp24 = _tmp17 + _tmp23;
  const Scalar _tmp25 = _tmp24 + position_vector(0, 0);
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp8 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp27 = _tmp11 - _tmp12;
  const Scalar _tmp28 = -Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp30 = _tmp28 + _tmp29;
  const Scalar _tmp31 = _tmp26 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(1, 0);
  const Scalar _tmp33 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp25), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp32), Scalar(2));
  const Scalar _tmp34 = Scalar(1.0) / (fh1);
  const Scalar _tmp35 = std::asinh(_tmp34 * fv1);
  const Scalar _tmp36 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp37 = _tmp10 - _tmp13;
  const Scalar _tmp38 = _tmp37 + _tmp7;
  const Scalar _tmp39 = -_tmp26;
  const Scalar _tmp40 = _tmp30 + _tmp39;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp42 = _tmp19 - _tmp22;
  const Scalar _tmp43 = _tmp17 + _tmp42;
  const Scalar _tmp44 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp45 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp44), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp41 - 1), Scalar(2));
  const Scalar _tmp46 = _tmp28 - _tmp29;
  const Scalar _tmp47 = _tmp39 + _tmp46;
  const Scalar _tmp48 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp49 = _tmp48 + Scalar(110.0);
  const Scalar _tmp50 = -_tmp17;
  const Scalar _tmp51 = _tmp42 + _tmp50;
  const Scalar _tmp52 = _tmp51 + position_vector(0, 0);
  const Scalar _tmp53 = _tmp52 + Scalar(125.0);
  const Scalar _tmp54 = std::pow(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp53, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp55 = _tmp53 * _tmp54;
  const Scalar _tmp56 = _tmp41 + Scalar(110.0);
  const Scalar _tmp57 = _tmp44 + Scalar(-125.0);
  const Scalar _tmp58 =
      std::sqrt(Scalar(std::pow(_tmp56, Scalar(2)) + std::pow(_tmp57, Scalar(2))));
  const Scalar _tmp59 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp60 = Scalar(1.0) / (_tmp57);
  const Scalar _tmp61 = _tmp58 * _tmp60;
  const Scalar _tmp62 = _tmp61 * (-_tmp40 * _tmp57 * _tmp59 + _tmp43 * _tmp56 * _tmp59);
  const Scalar _tmp63 = _tmp23 + _tmp50;
  const Scalar _tmp64 = _tmp26 + _tmp46;
  const Scalar _tmp65 = _tmp64 + position_vector(1, 0);
  const Scalar _tmp66 = _tmp65 + Scalar(-110.0);
  const Scalar _tmp67 = _tmp63 + position_vector(0, 0);
  const Scalar _tmp68 = _tmp67 + Scalar(125.0);
  const Scalar _tmp69 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp68, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp70 = _tmp66 * _tmp69;
  const Scalar _tmp71 = _tmp68 * _tmp69;
  const Scalar _tmp72 = _tmp62 * _tmp71 - _tmp63 * _tmp70 + _tmp64 * _tmp71;
  const Scalar _tmp73 = _tmp56 * _tmp60;
  const Scalar _tmp74 = Scalar(1.0) / (-_tmp70 + _tmp71 * _tmp73);
  const Scalar _tmp75 = _tmp49 * _tmp54;
  const Scalar _tmp76 = _tmp55 * _tmp73 - _tmp75;
  const Scalar _tmp77 = _tmp74 * _tmp76;
  const Scalar _tmp78 = _tmp47 * _tmp55 - _tmp51 * _tmp75 + _tmp55 * _tmp62 - _tmp72 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp80 = Scalar(1.0) * _tmp79;
  const Scalar _tmp81 = _tmp71 * _tmp77;
  const Scalar _tmp82 = _tmp32 + Scalar(-110.0);
  const Scalar _tmp83 = _tmp25 + Scalar(-125.0);
  const Scalar _tmp84 = std::pow(Scalar(std::pow(_tmp82, Scalar(2)) + std::pow(_tmp83, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp85 = _tmp83 * _tmp84;
  const Scalar _tmp86 = _tmp82 * _tmp84;
  const Scalar _tmp87 = fh1 * (_tmp24 * _tmp86 - _tmp31 * _tmp85);
  const Scalar _tmp88 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp89 = -_tmp7;
  const Scalar _tmp90 = _tmp37 + _tmp89;
  const Scalar _tmp91 = _tmp14 + _tmp89;
  const Scalar _tmp92 = _tmp38 * _tmp73;
  const Scalar _tmp93 = _tmp70 * _tmp91 - _tmp71 * _tmp92;
  const Scalar _tmp94 = -_tmp55 * _tmp92 + _tmp75 * _tmp90 - _tmp77 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) * _tmp43;
  const Scalar _tmp96 = Scalar(1.0) * _tmp40;
  const Scalar _tmp97 = -_tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp64 + _tmp97);
  const Scalar _tmp99 = _tmp98 * (-_tmp63 + _tmp95);
  const Scalar _tmp100 = _tmp74 * (_tmp38 * _tmp71 - _tmp71 * _tmp91);
  const Scalar _tmp101 = -_tmp100 * _tmp76 + _tmp38 * _tmp55 - _tmp55 * _tmp90 - _tmp94 * _tmp99;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp103 = _tmp95 + _tmp96 * _tmp99;
  const Scalar _tmp104 = 0;
  const Scalar _tmp105 = _tmp102 * _tmp104;
  const Scalar _tmp106 = _tmp73 * _tmp74;
  const Scalar _tmp107 = _tmp106 * _tmp93 + _tmp92;
  const Scalar _tmp108 = _tmp100 * _tmp73 - _tmp107 * _tmp99 - _tmp38;
  const Scalar _tmp109 = _tmp102 * _tmp78;
  const Scalar _tmp110 = _tmp101 * _tmp79;
  const Scalar _tmp111 = _tmp110 * (_tmp106 * _tmp72 - _tmp108 * _tmp109 - _tmp62);
  const Scalar _tmp112 = _tmp108 + _tmp111;
  const Scalar _tmp113 = _tmp102 * _tmp76;
  const Scalar _tmp114 = -_tmp112 * _tmp113 - _tmp73;
  const Scalar _tmp115 = _tmp71 * _tmp74;
  const Scalar _tmp116 = _tmp102 * _tmp55;
  const Scalar _tmp117 = _tmp85 * fh1;
  const Scalar _tmp118 = Scalar(1.0) * _tmp74;
  const Scalar _tmp119 = _tmp118 * _tmp93;
  const Scalar _tmp120 = -Scalar(1.0) * _tmp100 + _tmp119 * _tmp99;
  const Scalar _tmp121 = _tmp110 * (-_tmp109 * _tmp120 - _tmp118 * _tmp72);
  const Scalar _tmp122 = _tmp120 + _tmp121;
  const Scalar _tmp123 = -_tmp113 * _tmp122 + Scalar(1.0);
  const Scalar _tmp124 = _tmp86 * fh1;
  const Scalar _tmp125 = -_tmp117 * _tmp61 * (_tmp112 * _tmp116 + _tmp114 * _tmp115 + Scalar(1.0)) -
                         _tmp124 * _tmp61 * (_tmp115 * _tmp123 + _tmp116 * _tmp122) -
                         _tmp61 * _tmp87 * (_tmp55 * _tmp80 - _tmp80 * _tmp81) -
                         _tmp61 * _tmp88 * (_tmp105 * _tmp55 - _tmp105 * _tmp81);
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp102 * _tmp94;
  const Scalar _tmp128 = _tmp47 + _tmp97;
  const Scalar _tmp129 = _tmp128 * _tmp99;
  const Scalar _tmp130 = Scalar(1.0) / (-_tmp129 - _tmp51 + _tmp95);
  const Scalar _tmp131 = _tmp128 * _tmp130;
  const Scalar _tmp132 = -_tmp119 + _tmp121 * _tmp131 - _tmp122 * _tmp127;
  const Scalar _tmp133 = Scalar(1.0) * _tmp98;
  const Scalar _tmp134 = Scalar(1.0) * _tmp130;
  const Scalar _tmp135 = _tmp110 * _tmp134;
  const Scalar _tmp136 = _tmp128 * _tmp135 - _tmp80 * _tmp94;
  const Scalar _tmp137 = _tmp129 * _tmp134 + Scalar(1.0);
  const Scalar _tmp138 = _tmp134 * _tmp99;
  const Scalar _tmp139 = _tmp15 * fh1;
  const Scalar _tmp140 = -_tmp139 * _tmp86 - Scalar(40.024799999999999) * _tmp27 - _tmp31 * fv1;
  const Scalar _tmp141 = _tmp139 * _tmp85 + Scalar(40.024799999999999) * _tmp18 + _tmp24 * fv1;
  const Scalar _tmp142 = _tmp128 * _tmp98;
  const Scalar _tmp143 = _tmp107 + _tmp111 * _tmp131 - _tmp112 * _tmp127;
  const Scalar _tmp144 = _tmp103 * _tmp130;
  const Scalar _tmp145 = -_tmp104 * _tmp127 - _tmp128 * _tmp144 + _tmp97;
  const Scalar _tmp146 = std::asinh(
      _tmp126 * (Scalar(1.0) * _tmp117 * (_tmp111 * _tmp134 - _tmp133 * _tmp143) +
                 Scalar(1.0) * _tmp124 * (_tmp121 * _tmp134 - _tmp132 * _tmp133) +
                 Scalar(1.0) * _tmp140 * (-_tmp133 * _tmp137 + _tmp138) +
                 Scalar(1.0) * _tmp141 * (_tmp134 * _tmp142 - _tmp134) +
                 Scalar(1.0) * _tmp87 * (-_tmp133 * _tmp136 + _tmp135) +
                 Scalar(1.0) * _tmp88 * (-_tmp103 * _tmp134 - _tmp133 * _tmp145 + Scalar(1.0))));
  const Scalar _tmp147 = Scalar(1.4083112389913199) * _tmp125;
  const Scalar _tmp148 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp65), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp67 - 1), Scalar(2));
  const Scalar _tmp149 = _tmp80 * _tmp87;
  const Scalar _tmp150 = _tmp105 * _tmp88;
  const Scalar _tmp151 =
      _tmp114 * _tmp117 * _tmp74 + _tmp123 * _tmp124 * _tmp74 - _tmp149 * _tmp77 - _tmp150 * _tmp77;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 = _tmp134 * _tmp141;
  const Scalar _tmp154 =
      std::asinh(_tmp152 * (_tmp117 * _tmp143 * _tmp98 + _tmp124 * _tmp132 * _tmp98 +
                            _tmp136 * _tmp87 * _tmp98 + _tmp137 * _tmp140 * _tmp98 -
                            _tmp142 * _tmp153 + _tmp145 * _tmp88 * _tmp98));
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp151;
  const Scalar _tmp156 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp48 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp52 - 1), Scalar(2));
  const Scalar _tmp157 =
      _tmp102 * _tmp112 * _tmp117 + _tmp102 * _tmp122 * _tmp124 + _tmp149 + _tmp150;
  const Scalar _tmp158 = Scalar(1.0) / (_tmp157);
  const Scalar _tmp159 =
      std::asinh(_tmp158 * (-_tmp111 * _tmp117 * _tmp130 - _tmp121 * _tmp124 * _tmp130 -
                            _tmp135 * _tmp87 - _tmp138 * _tmp140 + _tmp144 * _tmp88 + _tmp153));
  const Scalar _tmp160 = Scalar(1.4083112389913199) * _tmp157;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp36 *
          (-std::sinh(Scalar(1.0) * _tmp35) - std::sinh(Scalar(0.71007031138673404) * _tmp34 *
                                                        (-std::sqrt(_tmp33) - _tmp35 * _tmp36))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp33 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp15 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp147 * (-std::sinh(Scalar(1.0) * _tmp146) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp126 *
                           (-_tmp146 * _tmp147 - std::sqrt(_tmp45)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp45 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp38 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp155 * (-std::sinh(Scalar(1.0) * _tmp154) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp152 *
                           (-std::sqrt(_tmp148) - _tmp154 * _tmp155))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp148 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp91 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp160 * (-std::sinh(Scalar(1.0) * _tmp159) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp158 *
                           (-std::sqrt(_tmp156) - _tmp159 * _tmp160))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp156 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp90 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
