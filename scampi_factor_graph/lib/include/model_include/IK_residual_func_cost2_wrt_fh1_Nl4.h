// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fh1_Nl4
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFh1Nl4(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 639

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (218)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _tmp0 * fv1;
  const Scalar _tmp2 = std::asinh(_tmp1);
  const Scalar _tmp3 = Scalar(1.0) * _tmp2;
  const Scalar _tmp4 = std::pow(fh1, Scalar(-2));
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp8 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp6 + Scalar(0.20999999999999999) * _tmp8 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp10 = -_tmp9;
  const Scalar _tmp11 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                        _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp12 = 2 * _tmp5;
  const Scalar _tmp13 = _tmp11 * _tmp12;
  const Scalar _tmp14 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp15 = 2 * _tmp7;
  const Scalar _tmp16 = _tmp14 * _tmp15;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp11 * _tmp15;
  const Scalar _tmp19 = _tmp12 * _tmp14;
  const Scalar _tmp20 = _tmp18 - _tmp19;
  const Scalar _tmp21 = -Scalar(0.010999999999999999) * _tmp20;
  const Scalar _tmp22 = -_tmp17 + _tmp21;
  const Scalar _tmp23 = _tmp10 + _tmp22;
  const Scalar _tmp24 = _tmp23 + position_vector(1, 0);
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp26 = -_tmp25;
  const Scalar _tmp27 = _tmp12 * _tmp7;
  const Scalar _tmp28 = 2 * _tmp11 * _tmp14;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = -Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp31 = 1 - 2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp31 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp33 = _tmp30 - _tmp32;
  const Scalar _tmp34 = _tmp26 + _tmp33;
  const Scalar _tmp35 = _tmp34 + position_vector(0, 0);
  const Scalar _tmp36 = Scalar(1.4083112389913199) * _tmp2;
  const Scalar _tmp37 =
      -_tmp36 * fh1 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp24 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp35 - 1), Scalar(2))));
  const Scalar _tmp38 =
      std::pow(Scalar(_tmp4 * std::pow(fv1, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp39 = Scalar(0.71007031138673404) * _tmp0;
  const Scalar _tmp40 = _tmp37 * _tmp39;
  const Scalar _tmp41 = _tmp24 + Scalar(110.0);
  const Scalar _tmp42 = _tmp35 + Scalar(125.0);
  const Scalar _tmp43 = std::pow(Scalar(std::pow(_tmp41, Scalar(2)) + std::pow(_tmp42, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp44 = _tmp41 * _tmp43;
  const Scalar _tmp45 = _tmp42 * _tmp43;
  const Scalar _tmp46 = -_tmp23 * _tmp45 + _tmp34 * _tmp44;
  const Scalar _tmp47 = _tmp17 + _tmp21;
  const Scalar _tmp48 = _tmp47 + _tmp9;
  const Scalar _tmp49 = _tmp48 + position_vector(1, 0);
  const Scalar _tmp50 = _tmp49 + Scalar(-110.0);
  const Scalar _tmp51 = _tmp30 + _tmp32;
  const Scalar _tmp52 = _tmp25 + _tmp51;
  const Scalar _tmp53 = _tmp52 + position_vector(0, 0);
  const Scalar _tmp54 = _tmp53 + Scalar(-125.0);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp50, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp54 * _tmp55;
  const Scalar _tmp57 = _tmp50 * _tmp55;
  const Scalar _tmp58 = _tmp10 + _tmp47;
  const Scalar _tmp59 = _tmp58 + position_vector(1, 0);
  const Scalar _tmp60 = _tmp59 + Scalar(110.0);
  const Scalar _tmp61 = _tmp26 + _tmp51;
  const Scalar _tmp62 = _tmp61 + position_vector(0, 0);
  const Scalar _tmp63 = _tmp62 + Scalar(-125.0);
  const Scalar _tmp64 = std::pow(Scalar(std::pow(_tmp60, Scalar(2)) + std::pow(_tmp63, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp65 = _tmp63 * _tmp64;
  const Scalar _tmp66 = _tmp22 + _tmp9;
  const Scalar _tmp67 = _tmp66 + position_vector(1, 0);
  const Scalar _tmp68 = _tmp67 + Scalar(-110.0);
  const Scalar _tmp69 = _tmp25 + _tmp33;
  const Scalar _tmp70 = _tmp69 + position_vector(0, 0);
  const Scalar _tmp71 = _tmp70 + Scalar(125.0);
  const Scalar _tmp72 =
      std::sqrt(Scalar(std::pow(_tmp68, Scalar(2)) + std::pow(_tmp71, Scalar(2))));
  const Scalar _tmp73 = Scalar(1.0) / (_tmp72);
  const Scalar _tmp74 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp75 = _tmp72 * _tmp74;
  const Scalar _tmp76 = _tmp75 * (-_tmp66 * _tmp71 * _tmp73 + _tmp68 * _tmp69 * _tmp73);
  const Scalar _tmp77 = _tmp60 * _tmp64;
  const Scalar _tmp78 = _tmp58 * _tmp65 - _tmp61 * _tmp77 + _tmp65 * _tmp76;
  const Scalar _tmp79 = _tmp68 * _tmp74;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp65 * _tmp79 - _tmp77);
  const Scalar _tmp81 = _tmp56 * _tmp79 - _tmp57;
  const Scalar _tmp82 = _tmp80 * _tmp81;
  const Scalar _tmp83 = _tmp48 * _tmp56 - _tmp52 * _tmp57 + _tmp56 * _tmp76 - _tmp78 * _tmp82;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp85 = Scalar(1.0) * _tmp84;
  const Scalar _tmp86 = _tmp65 * _tmp82;
  const Scalar _tmp87 = _tmp46 * _tmp75 * (_tmp56 * _tmp85 - _tmp85 * _tmp86);
  const Scalar _tmp88 = Scalar(0.20999999999999999) * _tmp27 - Scalar(0.20999999999999999) * _tmp28;
  const Scalar _tmp89 = -_tmp88;
  const Scalar _tmp90 =
      -Scalar(0.010999999999999999) * _tmp31 - Scalar(0.010999999999999999) * _tmp6;
  const Scalar _tmp91 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp19;
  const Scalar _tmp92 = _tmp90 + _tmp91;
  const Scalar _tmp93 = _tmp89 + _tmp92;
  const Scalar _tmp94 = _tmp65 * _tmp93;
  const Scalar _tmp95 = _tmp90 - _tmp91;
  const Scalar _tmp96 = _tmp88 + _tmp95;
  const Scalar _tmp97 = -_tmp65 * _tmp96 + _tmp94;
  const Scalar _tmp98 = Scalar(1.0) * _tmp80;
  const Scalar _tmp99 = Scalar(1.0) * _tmp69;
  const Scalar _tmp100 = -_tmp61 + _tmp99;
  const Scalar _tmp101 = _tmp77 * _tmp96 - _tmp79 * _tmp94;
  const Scalar _tmp102 = Scalar(1.0) * _tmp66;
  const Scalar _tmp103 = -_tmp102;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103 + _tmp58);
  const Scalar _tmp105 = Scalar(1.0) * _tmp104;
  const Scalar _tmp106 = _tmp100 * _tmp101 * _tmp105 * _tmp80 - _tmp97 * _tmp98;
  const Scalar _tmp107 = _tmp88 + _tmp92;
  const Scalar _tmp108 = _tmp56 * _tmp93;
  const Scalar _tmp109 = -_tmp101 * _tmp82 + _tmp107 * _tmp57 - _tmp108 * _tmp79;
  const Scalar _tmp110 = _tmp100 * _tmp104;
  const Scalar _tmp111 = -_tmp107 * _tmp56 + _tmp108 - _tmp109 * _tmp110 - _tmp82 * _tmp97;
  const Scalar _tmp112 = Scalar(1.0) / (_tmp111);
  const Scalar _tmp113 = _tmp112 * _tmp83;
  const Scalar _tmp114 = _tmp111 * _tmp84;
  const Scalar _tmp115 = _tmp114 * (-_tmp106 * _tmp113 - _tmp78 * _tmp98);
  const Scalar _tmp116 = _tmp106 + _tmp115;
  const Scalar _tmp117 = _tmp112 * _tmp81;
  const Scalar _tmp118 = _tmp80 * (-_tmp116 * _tmp117 + Scalar(1.0));
  const Scalar _tmp119 = _tmp112 * _tmp116;
  const Scalar _tmp120 = _tmp44 * _tmp75 * (_tmp118 * _tmp65 + _tmp119 * _tmp56);
  const Scalar _tmp121 = _tmp79 * _tmp80;
  const Scalar _tmp122 = _tmp101 * _tmp121 + _tmp79 * _tmp93;
  const Scalar _tmp123 = -_tmp110 * _tmp122 + _tmp121 * _tmp97 - _tmp93;
  const Scalar _tmp124 = _tmp114 * (-_tmp113 * _tmp123 + _tmp121 * _tmp78 - _tmp76);
  const Scalar _tmp125 = _tmp123 + _tmp124;
  const Scalar _tmp126 = _tmp80 * (-_tmp117 * _tmp125 - _tmp79);
  const Scalar _tmp127 = _tmp112 * _tmp125;
  const Scalar _tmp128 = _tmp45 * _tmp75 * (_tmp126 * _tmp65 + _tmp127 * _tmp56 + Scalar(1.0));
  const Scalar _tmp129 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp130 = _tmp102 * _tmp110 + _tmp99;
  const Scalar _tmp131 = 0;
  const Scalar _tmp132 = _tmp112 * _tmp131;
  const Scalar _tmp133 = -_tmp120 * fh1 - _tmp128 * fh1 -
                         _tmp129 * _tmp75 * (_tmp132 * _tmp56 - _tmp132 * _tmp86) - _tmp87 * fh1;
  const Scalar _tmp134 = Scalar(1.0) / (_tmp133);
  const Scalar _tmp135 = _tmp103 + _tmp48;
  const Scalar _tmp136 = _tmp110 * _tmp135;
  const Scalar _tmp137 = Scalar(1.0) / (-_tmp136 - _tmp52 + _tmp99);
  const Scalar _tmp138 = Scalar(1.0) * _tmp137;
  const Scalar _tmp139 = _tmp109 * _tmp112;
  const Scalar _tmp140 = _tmp135 * _tmp137;
  const Scalar _tmp141 = _tmp122 + _tmp124 * _tmp140 - _tmp125 * _tmp139;
  const Scalar _tmp142 = Scalar(1.0) * _tmp45 * (-_tmp105 * _tmp141 + _tmp124 * _tmp138);
  const Scalar _tmp143 = _tmp89 + _tmp95;
  const Scalar _tmp144 = _tmp143 * fh1;
  const Scalar _tmp145 = -_tmp144 * _tmp44 - Scalar(40.024799999999999) * _tmp20 - _tmp23 * fv1;
  const Scalar _tmp146 = _tmp136 * _tmp138 + Scalar(1.0);
  const Scalar _tmp147 = _tmp110 * _tmp138;
  const Scalar _tmp148 = -Scalar(1.0) * _tmp105 * _tmp146 + Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = -_tmp101 * _tmp98 + _tmp115 * _tmp140 - _tmp116 * _tmp139;
  const Scalar _tmp150 = Scalar(1.0) * _tmp44 * (-_tmp105 * _tmp149 + _tmp115 * _tmp138);
  const Scalar _tmp151 = _tmp144 * _tmp45 + Scalar(40.024799999999999) * _tmp29 + _tmp34 * fv1;
  const Scalar _tmp152 = _tmp135 * _tmp138;
  const Scalar _tmp153 = _tmp104 * _tmp152;
  const Scalar _tmp154 = -Scalar(1.0) * _tmp138 + Scalar(1.0) * _tmp153;
  const Scalar _tmp155 = _tmp130 * _tmp137;
  const Scalar _tmp156 = _tmp103 - _tmp131 * _tmp139 - _tmp135 * _tmp155;
  const Scalar _tmp157 = _tmp114 * _tmp138;
  const Scalar _tmp158 = -_tmp109 * _tmp85 + _tmp114 * _tmp152;
  const Scalar _tmp159 = Scalar(1.0) * _tmp46;
  const Scalar _tmp160 = _tmp159 * (-_tmp105 * _tmp158 + _tmp157);
  const Scalar _tmp161 =
      Scalar(1.0) * _tmp129 * (-_tmp105 * _tmp156 - _tmp130 * _tmp138 + Scalar(1.0)) +
      _tmp142 * fh1 + _tmp145 * _tmp148 + _tmp150 * fh1 + _tmp151 * _tmp154 + _tmp160 * fh1;
  const Scalar _tmp162 = std::asinh(_tmp134 * _tmp161);
  const Scalar _tmp163 = Scalar(1.4083112389913199) * _tmp133;
  const Scalar _tmp164 =
      -_tmp162 * _tmp163 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp67), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp70 - 1), Scalar(2))));
  const Scalar _tmp165 = Scalar(0.71007031138673404) * _tmp134;
  const Scalar _tmp166 = _tmp164 * _tmp165;
  const Scalar _tmp167 = Scalar(1.0) * _tmp162;
  const Scalar _tmp168 = -_tmp120 - _tmp128 - _tmp87;
  const Scalar _tmp169 = Scalar(1.4083112389913199) * _tmp168;
  const Scalar _tmp170 = _tmp143 * _tmp44;
  const Scalar _tmp171 = _tmp143 * _tmp45;
  const Scalar _tmp172 = std::pow(_tmp133, Scalar(-2));
  const Scalar _tmp173 = _tmp168 * _tmp172;
  const Scalar _tmp174 =
      (_tmp134 * (_tmp142 - _tmp148 * _tmp170 + _tmp150 + _tmp154 * _tmp171 + _tmp160) -
       _tmp161 * _tmp173) /
      std::sqrt(Scalar(std::pow(_tmp161, Scalar(2)) * _tmp172 + 1));
  const Scalar _tmp175 = _tmp104 * _tmp158 * _tmp46;
  const Scalar _tmp176 = _tmp104 * _tmp149 * _tmp44;
  const Scalar _tmp177 = _tmp138 * _tmp151;
  const Scalar _tmp178 = _tmp104 * _tmp141 * _tmp45;
  const Scalar _tmp179 = _tmp104 * _tmp146;
  const Scalar _tmp180 = _tmp104 * _tmp129 * _tmp156 - _tmp104 * _tmp135 * _tmp177 +
                         _tmp145 * _tmp179 + _tmp175 * fh1 + _tmp176 * fh1 + _tmp178 * fh1;
  const Scalar _tmp181 = _tmp118 * _tmp44;
  const Scalar _tmp182 = _tmp159 * _tmp84;
  const Scalar _tmp183 = _tmp182 * fh1;
  const Scalar _tmp184 = _tmp129 * _tmp132;
  const Scalar _tmp185 = _tmp126 * _tmp45;
  const Scalar _tmp186 = _tmp181 * fh1 - _tmp183 * _tmp82 - _tmp184 * _tmp82 + _tmp185 * fh1;
  const Scalar _tmp187 = Scalar(1.0) / (_tmp186);
  const Scalar _tmp188 = std::asinh(_tmp180 * _tmp187);
  const Scalar _tmp189 = Scalar(1.0) * _tmp188;
  const Scalar _tmp190 = std::pow(_tmp186, Scalar(-2));
  const Scalar _tmp191 = _tmp181 - _tmp182 * _tmp82 + _tmp185;
  const Scalar _tmp192 = _tmp190 * _tmp191;
  const Scalar _tmp193 = (-_tmp180 * _tmp192 + _tmp187 * (-_tmp153 * _tmp171 - _tmp170 * _tmp179 +
                                                          _tmp175 + _tmp176 + _tmp178)) /
                         std::sqrt(Scalar(std::pow(_tmp180, Scalar(2)) * _tmp190 + 1));
  const Scalar _tmp194 = Scalar(1.4083112389913199) * _tmp186;
  const Scalar _tmp195 = Scalar(1.4083112389913199) * _tmp191;
  const Scalar _tmp196 = Scalar(0.71007031138673404) * _tmp187;
  const Scalar _tmp197 =
      -_tmp188 * _tmp194 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp62), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp59 - 1), Scalar(2))));
  const Scalar _tmp198 = _tmp196 * _tmp197;
  const Scalar _tmp199 = _tmp127 * _tmp45;
  const Scalar _tmp200 = _tmp119 * _tmp44;
  const Scalar _tmp201 = _tmp183 + _tmp184 + _tmp199 * fh1 + _tmp200 * fh1;
  const Scalar _tmp202 = Scalar(1.0) / (_tmp201);
  const Scalar _tmp203 = _tmp157 * _tmp46;
  const Scalar _tmp204 = _tmp115 * _tmp137 * _tmp44;
  const Scalar _tmp205 = _tmp124 * _tmp137 * _tmp45;
  const Scalar _tmp206 = _tmp129 * _tmp155 - _tmp145 * _tmp147 + _tmp177 - _tmp203 * fh1 -
                         _tmp204 * fh1 - _tmp205 * fh1;
  const Scalar _tmp207 = std::asinh(_tmp202 * _tmp206);
  const Scalar _tmp208 = Scalar(1.0) * _tmp207;
  const Scalar _tmp209 = Scalar(1.4083112389913199) * _tmp201;
  const Scalar _tmp210 =
      -_tmp207 * _tmp209 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp49), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp53), Scalar(2))));
  const Scalar _tmp211 = Scalar(0.71007031138673404) * _tmp202;
  const Scalar _tmp212 = _tmp210 * _tmp211;
  const Scalar _tmp213 = _tmp182 + _tmp199 + _tmp200;
  const Scalar _tmp214 = Scalar(1.4083112389913199) * _tmp213;
  const Scalar _tmp215 = std::pow(_tmp201, Scalar(-2));
  const Scalar _tmp216 = _tmp213 * _tmp215;
  const Scalar _tmp217 =
      (_tmp202 * (_tmp138 * _tmp171 + _tmp147 * _tmp170 - _tmp203 - _tmp204 - _tmp205) -
       _tmp206 * _tmp216) /
      std::sqrt(Scalar(std::pow(_tmp206, Scalar(2)) * _tmp215 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = Scalar(1.4083112389913199) * fh1 *
                   (Scalar(1.0) * _tmp38 * _tmp4 * fv1 * std::cosh(_tmp3) -
                    (-Scalar(0.71007031138673404) * _tmp37 * _tmp4 +
                     _tmp39 * (Scalar(1.4083112389913199) * _tmp1 * _tmp38 - _tmp36)) *
                        std::cosh(_tmp40)) -
               Scalar(1.4083112389913199) * std::sinh(_tmp3) -
               Scalar(1.4083112389913199) * std::sinh(_tmp40);
  _res(1, 0) = _tmp163 * (-Scalar(1.0) * _tmp174 * std::cosh(_tmp167) -
                          (-Scalar(0.71007031138673404) * _tmp164 * _tmp173 +
                           _tmp165 * (-_tmp162 * _tmp169 - _tmp163 * _tmp174)) *
                              std::cosh(_tmp166)) +
               _tmp169 * (-std::sinh(_tmp166) - std::sinh(_tmp167));
  _res(2, 0) = _tmp194 * (-Scalar(1.0) * _tmp193 * std::cosh(_tmp189) -
                          (-Scalar(0.71007031138673404) * _tmp192 * _tmp197 +
                           _tmp196 * (-_tmp188 * _tmp195 - _tmp193 * _tmp194)) *
                              std::cosh(_tmp198)) +
               _tmp195 * (-std::sinh(_tmp189) - std::sinh(_tmp198));
  _res(3, 0) = _tmp209 * (-Scalar(1.0) * _tmp217 * std::cosh(_tmp208) -
                          (-Scalar(0.71007031138673404) * _tmp210 * _tmp216 +
                           _tmp211 * (-_tmp207 * _tmp214 - _tmp209 * _tmp217)) *
                              std::cosh(_tmp212)) +
               _tmp214 * (-std::sinh(_tmp208) - std::sinh(_tmp212));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
