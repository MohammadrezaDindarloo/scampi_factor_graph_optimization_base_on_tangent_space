// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl21
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl21(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 605

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (189)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = 2 * _tmp3 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = 2 * _tmp6;
  const Scalar _tmp11 = _tmp10 * _tmp4;
  const Scalar _tmp12 = _tmp3 * _tmp7;
  const Scalar _tmp13 = _tmp11 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp16 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 - _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp9;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp15 +
                        Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999);
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp24 = _tmp10 * _tmp3;
  const Scalar _tmp25 = _tmp4 * _tmp7;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp27;
  const Scalar _tmp29 = -_tmp23 + _tmp28;
  const Scalar _tmp30 = _tmp22 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(1, 0);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = -_tmp22;
  const Scalar _tmp34 = _tmp29 + _tmp33;
  const Scalar _tmp35 = _tmp34 + position_vector(1, 0);
  const Scalar _tmp36 = _tmp35 + Scalar(110.0);
  const Scalar _tmp37 = -_tmp9;
  const Scalar _tmp38 = _tmp18 + _tmp37;
  const Scalar _tmp39 = _tmp38 + position_vector(0, 0);
  const Scalar _tmp40 = _tmp39 + Scalar(125.0);
  const Scalar _tmp41 = std::pow(Scalar(std::pow(_tmp36, Scalar(2)) + std::pow(_tmp40, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp42 = _tmp40 * _tmp41;
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp44 = -_tmp43;
  const Scalar _tmp45 =
      -Scalar(0.010999999999999999) * _tmp16 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp46 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp47 = _tmp45 + _tmp46;
  const Scalar _tmp48 = _tmp44 + _tmp47;
  const Scalar _tmp49 = _tmp45 - _tmp46;
  const Scalar _tmp50 = _tmp44 + _tmp49;
  const Scalar _tmp51 = _tmp36 * _tmp41;
  const Scalar _tmp52 = _tmp14 + _tmp17;
  const Scalar _tmp53 = _tmp37 + _tmp52;
  const Scalar _tmp54 = _tmp53 + position_vector(0, 0);
  const Scalar _tmp55 = _tmp54 + Scalar(-125.0);
  const Scalar _tmp56 = Scalar(1.0) / (_tmp55);
  const Scalar _tmp57 = _tmp23 + _tmp33;
  const Scalar _tmp58 = _tmp28 + _tmp57;
  const Scalar _tmp59 = _tmp58 + position_vector(1, 0);
  const Scalar _tmp60 = _tmp59 + Scalar(110.0);
  const Scalar _tmp61 = _tmp56 * _tmp60;
  const Scalar _tmp62 = _tmp22 + _tmp23 + _tmp28;
  const Scalar _tmp63 = _tmp62 + position_vector(1, 0);
  const Scalar _tmp64 = _tmp63 + Scalar(-110.0);
  const Scalar _tmp65 = _tmp52 + _tmp9;
  const Scalar _tmp66 = _tmp65 + position_vector(0, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(-125.0);
  const Scalar _tmp68 = std::pow(Scalar(std::pow(_tmp64, Scalar(2)) + std::pow(_tmp67, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp69 = _tmp67 * _tmp68;
  const Scalar _tmp70 = _tmp48 * _tmp69;
  const Scalar _tmp71 = _tmp43 + _tmp47;
  const Scalar _tmp72 = _tmp64 * _tmp68;
  const Scalar _tmp73 = -_tmp61 * _tmp70 + _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp42 * _tmp61 - _tmp51;
  const Scalar _tmp75 = Scalar(1.0) / (_tmp61 * _tmp69 - _tmp72);
  const Scalar _tmp76 = _tmp74 * _tmp75;
  const Scalar _tmp77 = _tmp48 * _tmp61;
  const Scalar _tmp78 = -_tmp42 * _tmp77 + _tmp50 * _tmp51 - _tmp73 * _tmp76;
  const Scalar _tmp79 = Scalar(1.0) * _tmp58;
  const Scalar _tmp80 = -_tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp62 + _tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp53;
  const Scalar _tmp83 = -_tmp65 + _tmp82;
  const Scalar _tmp84 = _tmp81 * _tmp83;
  const Scalar _tmp85 = -_tmp69 * _tmp71 + _tmp70;
  const Scalar _tmp86 = _tmp42 * _tmp48 - _tmp42 * _tmp50 - _tmp76 * _tmp85 - _tmp78 * _tmp84;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp88 = Scalar(1.0) * _tmp75;
  const Scalar _tmp89 = Scalar(1.0) * _tmp81;
  const Scalar _tmp90 = _tmp73 * _tmp75 * _tmp83 * _tmp89 - _tmp85 * _tmp88;
  const Scalar _tmp91 =
      std::sqrt(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp60, Scalar(2))));
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = _tmp56 * _tmp91;
  const Scalar _tmp94 = _tmp93 * (_tmp53 * _tmp60 * _tmp92 - _tmp55 * _tmp58 * _tmp92);
  const Scalar _tmp95 = _tmp62 * _tmp69 - _tmp65 * _tmp72 + _tmp69 * _tmp94;
  const Scalar _tmp96 = _tmp34 * _tmp42 - _tmp38 * _tmp51 + _tmp42 * _tmp94 - _tmp76 * _tmp95;
  const Scalar _tmp97 = _tmp87 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp86 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (-_tmp88 * _tmp95 - _tmp90 * _tmp97);
  const Scalar _tmp101 = _tmp87 * (_tmp100 + _tmp90);
  const Scalar _tmp102 = -_tmp101 * _tmp74 + Scalar(1.0);
  const Scalar _tmp103 = _tmp69 * _tmp75;
  const Scalar _tmp104 = _tmp31 + Scalar(-110.0);
  const Scalar _tmp105 = _tmp20 + Scalar(125.0);
  const Scalar _tmp106 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp105, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp107 = _tmp104 * _tmp106;
  const Scalar _tmp108 = _tmp107 * fh1;
  const Scalar _tmp109 = _tmp61 * _tmp75;
  const Scalar _tmp110 = _tmp109 * _tmp73 + _tmp77;
  const Scalar _tmp111 = _tmp109 * _tmp85 - _tmp110 * _tmp84 - _tmp48;
  const Scalar _tmp112 = _tmp99 * (_tmp109 * _tmp95 - _tmp111 * _tmp97 - _tmp94);
  const Scalar _tmp113 = _tmp87 * (_tmp111 + _tmp112);
  const Scalar _tmp114 = -_tmp113 * _tmp74 - _tmp61;
  const Scalar _tmp115 = _tmp105 * _tmp106;
  const Scalar _tmp116 = _tmp115 * fh1;
  const Scalar _tmp117 = Scalar(1.0) * _tmp98;
  const Scalar _tmp118 = _tmp69 * _tmp76;
  const Scalar _tmp119 = fh1 * (_tmp107 * _tmp19 - _tmp115 * _tmp30);
  const Scalar _tmp120 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp121 = _tmp79 * _tmp84 + _tmp82;
  const Scalar _tmp122 = 0;
  const Scalar _tmp123 = _tmp93 * (-_tmp118 * _tmp122 + _tmp122 * _tmp42);
  const Scalar _tmp124 = -_tmp108 * _tmp93 * (_tmp101 * _tmp42 + _tmp102 * _tmp103) -
                         _tmp116 * _tmp93 * (_tmp103 * _tmp114 + _tmp113 * _tmp42 + Scalar(1.0)) -
                         _tmp119 * _tmp93 * (-_tmp117 * _tmp118 + _tmp117 * _tmp42) -
                         _tmp120 * _tmp123;
  const Scalar _tmp125 = std::pow(_tmp124, Scalar(-2));
  const Scalar _tmp126 = _tmp123 * _tmp125;
  const Scalar _tmp127 = _tmp34 + _tmp80;
  const Scalar _tmp128 = _tmp127 * _tmp84;
  const Scalar _tmp129 = Scalar(1.0) / (-_tmp128 - _tmp38 + _tmp82);
  const Scalar _tmp130 = Scalar(1.0) * _tmp129;
  const Scalar _tmp131 = _tmp127 * _tmp129;
  const Scalar _tmp132 = _tmp110 + _tmp112 * _tmp131 - _tmp113 * _tmp78;
  const Scalar _tmp133 = _tmp121 * _tmp129;
  const Scalar _tmp134 = _tmp81 * (-_tmp122 * _tmp78 - _tmp127 * _tmp133 + _tmp80);
  const Scalar _tmp135 = -Scalar(1.0) * _tmp121 * _tmp130 - Scalar(1.0) * _tmp134 + Scalar(1.0);
  const Scalar _tmp136 = _tmp100 * _tmp131 - _tmp101 * _tmp78 - _tmp73 * _tmp88;
  const Scalar _tmp137 = _tmp130 * _tmp99;
  const Scalar _tmp138 = -_tmp117 * _tmp78 + _tmp127 * _tmp137;
  const Scalar _tmp139 = fh1 * (_tmp43 + _tmp49);
  const Scalar _tmp140 = -_tmp107 * _tmp139 - Scalar(40.024799999999999) * _tmp26 - _tmp30 * fv1;
  const Scalar _tmp141 = _tmp130 * _tmp84;
  const Scalar _tmp142 = _tmp128 * _tmp130 + Scalar(1.0);
  const Scalar _tmp143 = Scalar(1.0) * _tmp141 - Scalar(1.0) * _tmp142 * _tmp89;
  const Scalar _tmp144 = _tmp115 * _tmp139 + Scalar(40.024799999999999) * _tmp13 + _tmp19 * fv1;
  const Scalar _tmp145 = _tmp127 * _tmp81;
  const Scalar _tmp146 = Scalar(1.0) * _tmp130 * _tmp145 - Scalar(1.0) * _tmp130;
  const Scalar _tmp147 = Scalar(1.0) * _tmp108 * (_tmp100 * _tmp130 - _tmp136 * _tmp89) +
                         Scalar(1.0) * _tmp116 * (_tmp112 * _tmp130 - _tmp132 * _tmp89) +
                         Scalar(1.0) * _tmp119 * (_tmp137 - _tmp138 * _tmp89) + _tmp120 * _tmp135 +
                         _tmp140 * _tmp143 + _tmp144 * _tmp146;
  const Scalar _tmp148 = Scalar(1.0) / (_tmp124);
  const Scalar _tmp149 = std::asinh(_tmp147 * _tmp148);
  const Scalar _tmp150 = Scalar(1.0) * _tmp149;
  const Scalar _tmp151 = _tmp27 + _tmp57;
  const Scalar _tmp152 =
      (-_tmp126 * _tmp147 + _tmp148 * (-_tmp135 + _tmp143 * _tmp151 + _tmp146 * _tmp19)) /
      std::sqrt(Scalar(_tmp125 * std::pow(_tmp147, Scalar(2)) + 1));
  const Scalar _tmp153 = Scalar(1.4083112389913199) * _tmp124;
  const Scalar _tmp154 =
      -_tmp149 * _tmp153 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp54), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp59 - 1), Scalar(2))));
  const Scalar _tmp155 = Scalar(0.71007031138673404) * _tmp148;
  const Scalar _tmp156 = _tmp154 * _tmp155;
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp123;
  const Scalar _tmp158 = _tmp142 * _tmp81;
  const Scalar _tmp159 = _tmp130 * _tmp144;
  const Scalar _tmp160 = _tmp108 * _tmp136 * _tmp81 + _tmp116 * _tmp132 * _tmp81 +
                         _tmp119 * _tmp138 * _tmp81 + _tmp120 * _tmp134 + _tmp140 * _tmp158 -
                         _tmp145 * _tmp159;
  const Scalar _tmp161 = _tmp117 * _tmp119;
  const Scalar _tmp162 = _tmp120 * _tmp122;
  const Scalar _tmp163 =
      _tmp102 * _tmp108 * _tmp75 + _tmp114 * _tmp116 * _tmp75 - _tmp161 * _tmp76 - _tmp162 * _tmp76;
  const Scalar _tmp164 = Scalar(1.0) / (_tmp163);
  const Scalar _tmp165 = std::asinh(_tmp160 * _tmp164);
  const Scalar _tmp166 = Scalar(1.0) * _tmp165;
  const Scalar _tmp167 = _tmp130 * _tmp19;
  const Scalar _tmp168 = std::pow(_tmp163, Scalar(-2));
  const Scalar _tmp169 = _tmp122 * _tmp168 * _tmp76;
  const Scalar _tmp170 =
      (-_tmp160 * _tmp169 + _tmp164 * (-_tmp134 - _tmp145 * _tmp167 + _tmp151 * _tmp158)) /
      std::sqrt(Scalar(std::pow(_tmp160, Scalar(2)) * _tmp168 + 1));
  const Scalar _tmp171 = Scalar(1.4083112389913199) * _tmp163;
  const Scalar _tmp172 =
      -_tmp165 * _tmp171 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp63), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp66), Scalar(2))));
  const Scalar _tmp173 = Scalar(0.71007031138673404) * _tmp164;
  const Scalar _tmp174 = _tmp172 * _tmp173;
  const Scalar _tmp175 = Scalar(1.4083112389913199) * _tmp122;
  const Scalar _tmp176 = _tmp175 * _tmp76;
  const Scalar _tmp177 = -_tmp100 * _tmp108 * _tmp129 - _tmp112 * _tmp116 * _tmp129 -
                         _tmp119 * _tmp137 + _tmp120 * _tmp133 - _tmp140 * _tmp141 + _tmp159;
  const Scalar _tmp178 = _tmp101 * _tmp108 + _tmp113 * _tmp116 + _tmp161 + _tmp162;
  const Scalar _tmp179 = Scalar(1.0) / (_tmp178);
  const Scalar _tmp180 = std::asinh(_tmp177 * _tmp179);
  const Scalar _tmp181 = Scalar(1.0) * _tmp180;
  const Scalar _tmp182 = Scalar(1.4083112389913199) * _tmp178;
  const Scalar _tmp183 =
      -_tmp180 * _tmp182 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp35 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp39 - 1), Scalar(2))));
  const Scalar _tmp184 = Scalar(0.71007031138673404) * _tmp179;
  const Scalar _tmp185 = _tmp183 * _tmp184;
  const Scalar _tmp186 = std::pow(_tmp178, Scalar(-2));
  const Scalar _tmp187 = _tmp122 * _tmp186;
  const Scalar _tmp188 = (_tmp177 * _tmp187 + _tmp179 * (-_tmp133 - _tmp141 * _tmp151 + _tmp167)) /
                         std::sqrt(Scalar(std::pow(_tmp177, Scalar(2)) * _tmp186 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 *
      (_tmp2 * std::sinh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                         (-_tmp1 * _tmp32 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp31),
                                               Scalar(2)) +
                                  std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp20 - 1),
                                           Scalar(2)))))));
  _res(1, 0) =
      -_tmp153 *
          (-Scalar(34.083374946563197) * _tmp126 + Scalar(1.0) * _tmp152 * std::sinh(_tmp150) -
           (-Scalar(0.71007031138673404) * _tmp126 * _tmp154 +
            _tmp155 * (-_tmp149 * _tmp157 - _tmp152 * _tmp153)) *
               std::sinh(_tmp156)) -
      _tmp157 * (Scalar(34.083374946563197) * _tmp148 + std::cosh(_tmp150) - std::cosh(_tmp156));
  _res(2, 0) =
      -_tmp171 *
          (-Scalar(34.083374946563197) * _tmp169 + Scalar(1.0) * _tmp170 * std::sinh(_tmp166) -
           (-Scalar(0.71007031138673404) * _tmp169 * _tmp172 +
            _tmp173 * (-_tmp165 * _tmp176 - _tmp170 * _tmp171)) *
               std::sinh(_tmp174)) -
      _tmp176 * (Scalar(34.083374946563197) * _tmp164 + std::cosh(_tmp166) - std::cosh(_tmp174));
  _res(3, 0) =
      _tmp175 * (Scalar(34.083374946563197) * _tmp179 + std::cosh(_tmp181) - std::cosh(_tmp185)) -
      _tmp182 * (Scalar(34.083374946563197) * _tmp187 + Scalar(1.0) * _tmp188 * std::sinh(_tmp181) -
                 (Scalar(0.71007031138673404) * _tmp183 * _tmp187 +
                  _tmp184 * (_tmp175 * _tmp180 - _tmp182 * _tmp188)) *
                     std::sinh(_tmp185));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
