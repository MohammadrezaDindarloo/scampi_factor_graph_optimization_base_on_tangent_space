// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl9
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl9(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 593

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (192)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp7;
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = 2 * _tmp3;
  const Scalar _tmp12 = _tmp10 * _tmp11;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp14 = _tmp3 * _tmp8;
  const Scalar _tmp15 = 2 * _tmp1 * _tmp10;
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp17;
  const Scalar _tmp19 = _tmp13 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp6;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp24 = _tmp1 * _tmp11;
  const Scalar _tmp25 = _tmp10 * _tmp8;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp29 = _tmp27 - _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = Scalar(1.0) * _tmp0 /
                        std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp35 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp36 = _tmp19 + _tmp5;
  const Scalar _tmp37 = Scalar(1.0) * _tmp36;
  const Scalar _tmp38 = -_tmp37;
  const Scalar _tmp39 = -_tmp13;
  const Scalar _tmp40 = _tmp18 + _tmp39;
  const Scalar _tmp41 = _tmp40 + _tmp6;
  const Scalar _tmp42 = _tmp38 + _tmp41;
  const Scalar _tmp43 = _tmp40 + _tmp5;
  const Scalar _tmp44 = Scalar(1.0) / (_tmp38 + _tmp43);
  const Scalar _tmp45 = -_tmp23;
  const Scalar _tmp46 = _tmp27 + _tmp28;
  const Scalar _tmp47 = _tmp45 + _tmp46;
  const Scalar _tmp48 = _tmp23 + _tmp46;
  const Scalar _tmp49 = Scalar(1.0) * _tmp48;
  const Scalar _tmp50 = _tmp44 * (-_tmp47 + _tmp49);
  const Scalar _tmp51 = _tmp37 * _tmp50 + _tmp49;
  const Scalar _tmp52 = _tmp42 * _tmp50;
  const Scalar _tmp53 = _tmp29 + _tmp45;
  const Scalar _tmp54 = Scalar(1.0) / (_tmp49 - _tmp52 - _tmp53);
  const Scalar _tmp55 = _tmp51 * _tmp54;
  const Scalar _tmp56 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp57 = -_tmp56;
  const Scalar _tmp58 =
      -Scalar(0.010999999999999999) * _tmp2 - Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp59 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp60 = _tmp58 - _tmp59;
  const Scalar _tmp61 = _tmp57 + _tmp60;
  const Scalar _tmp62 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp63 = _tmp62 + Scalar(110.0);
  const Scalar _tmp64 = _tmp53 + position_vector(0, 0);
  const Scalar _tmp65 = _tmp64 + Scalar(125.0);
  const Scalar _tmp66 = std::pow(Scalar(std::pow(_tmp63, Scalar(2)) + std::pow(_tmp65, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp67 = _tmp63 * _tmp66;
  const Scalar _tmp68 = _tmp36 + position_vector(1, 0);
  const Scalar _tmp69 = _tmp68 + Scalar(-110.0);
  const Scalar _tmp70 = _tmp48 + position_vector(0, 0);
  const Scalar _tmp71 = _tmp70 + Scalar(-125.0);
  const Scalar _tmp72 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp73 = _tmp69 * _tmp72;
  const Scalar _tmp74 = _tmp58 + _tmp59;
  const Scalar _tmp75 = _tmp56 + _tmp74;
  const Scalar _tmp76 = _tmp47 + position_vector(0, 0);
  const Scalar _tmp77 = _tmp76 + Scalar(125.0);
  const Scalar _tmp78 = _tmp43 + position_vector(1, 0);
  const Scalar _tmp79 = _tmp78 + Scalar(-110.0);
  const Scalar _tmp80 = std::pow(Scalar(std::pow(_tmp77, Scalar(2)) + std::pow(_tmp79, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp81 = _tmp77 * _tmp80;
  const Scalar _tmp82 = _tmp75 * _tmp81;
  const Scalar _tmp83 = _tmp57 + _tmp74;
  const Scalar _tmp84 = _tmp79 * _tmp80;
  const Scalar _tmp85 = -_tmp73 * _tmp82 + _tmp83 * _tmp84;
  const Scalar _tmp86 = _tmp65 * _tmp66;
  const Scalar _tmp87 = -_tmp67 + _tmp73 * _tmp86;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp73 * _tmp81 - _tmp84);
  const Scalar _tmp89 = _tmp87 * _tmp88;
  const Scalar _tmp90 = _tmp75 * _tmp86;
  const Scalar _tmp91 = _tmp61 * _tmp67 - _tmp73 * _tmp90 - _tmp85 * _tmp89;
  const Scalar _tmp92 = _tmp88 * (-_tmp81 * _tmp83 + _tmp82);
  const Scalar _tmp93 = -_tmp50 * _tmp91 - _tmp61 * _tmp86 - _tmp87 * _tmp92 + _tmp90;
  const Scalar _tmp94 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp95 = 0;
  const Scalar _tmp96 = _tmp44 * (_tmp38 - _tmp42 * _tmp55 - _tmp91 * _tmp95);
  const Scalar _tmp97 = -Scalar(1.0) * _tmp55 - Scalar(1.0) * _tmp96 + Scalar(1.0);
  const Scalar _tmp98 =
      std::sqrt(Scalar(std::pow(_tmp69, Scalar(2)) + std::pow(_tmp71, Scalar(2))));
  const Scalar _tmp99 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp100 = _tmp72 * _tmp98;
  const Scalar _tmp101 = _tmp100 * (-_tmp36 * _tmp71 * _tmp99 + _tmp48 * _tmp69 * _tmp99);
  const Scalar _tmp102 = _tmp73 * _tmp88;
  const Scalar _tmp103 = _tmp102 * _tmp85 + _tmp73 * _tmp75;
  const Scalar _tmp104 = -_tmp103 * _tmp50 + _tmp73 * _tmp92 - _tmp75;
  const Scalar _tmp105 = _tmp101 * _tmp81 + _tmp43 * _tmp81 - _tmp47 * _tmp84;
  const Scalar _tmp106 = _tmp101 * _tmp86 - _tmp105 * _tmp89 + _tmp41 * _tmp86 - _tmp53 * _tmp67;
  const Scalar _tmp107 = _tmp106 * _tmp94;
  const Scalar _tmp108 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp109 = _tmp108 * _tmp93;
  const Scalar _tmp110 = _tmp109 * (-_tmp101 + _tmp102 * _tmp105 - _tmp104 * _tmp107);
  const Scalar _tmp111 = _tmp42 * _tmp54;
  const Scalar _tmp112 = _tmp94 * (_tmp104 + _tmp110);
  const Scalar _tmp113 = _tmp103 + _tmp110 * _tmp111 - _tmp112 * _tmp91;
  const Scalar _tmp114 = Scalar(1.0) * _tmp44;
  const Scalar _tmp115 = Scalar(1.0) * _tmp54;
  const Scalar _tmp116 = _tmp31 + Scalar(-125.0);
  const Scalar _tmp117 = _tmp21 + Scalar(110.0);
  const Scalar _tmp118 =
      std::pow(Scalar(std::pow(_tmp116, Scalar(2)) + std::pow(_tmp117, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp119 = _tmp116 * _tmp118;
  const Scalar _tmp120 = Scalar(1.0) * fh1;
  const Scalar _tmp121 = Scalar(1.0) * _tmp88;
  const Scalar _tmp122 = _tmp121 * _tmp85;
  const Scalar _tmp123 = _tmp122 * _tmp50 - Scalar(1.0) * _tmp92;
  const Scalar _tmp124 = _tmp109 * (-_tmp105 * _tmp121 - _tmp107 * _tmp123);
  const Scalar _tmp125 = _tmp94 * (_tmp123 + _tmp124);
  const Scalar _tmp126 = _tmp111 * _tmp124 - _tmp122 - _tmp125 * _tmp91;
  const Scalar _tmp127 = _tmp117 * _tmp118;
  const Scalar _tmp128 = fh1 * (_tmp56 + _tmp60);
  const Scalar _tmp129 = -_tmp127 * _tmp128 - Scalar(40.024799999999999) * _tmp16 - _tmp20 * fv1;
  const Scalar _tmp130 = _tmp115 * _tmp52 + Scalar(1.0);
  const Scalar _tmp131 = _tmp115 * _tmp50;
  const Scalar _tmp132 = -Scalar(1.0) * _tmp114 * _tmp130 + Scalar(1.0) * _tmp131;
  const Scalar _tmp133 = _tmp119 * _tmp128 + Scalar(40.024799999999999) * _tmp26 + _tmp30 * fv1;
  const Scalar _tmp134 = _tmp42 * _tmp44;
  const Scalar _tmp135 = Scalar(1.0) * _tmp115 * _tmp134 - Scalar(1.0) * _tmp115;
  const Scalar _tmp136 = _tmp109 * _tmp115;
  const Scalar _tmp137 = Scalar(1.0) * _tmp108;
  const Scalar _tmp138 = _tmp136 * _tmp42 - _tmp137 * _tmp91;
  const Scalar _tmp139 = fh1 * (-_tmp119 * _tmp20 + _tmp127 * _tmp30);
  const Scalar _tmp140 = _tmp119 * _tmp120 * (_tmp110 * _tmp115 - _tmp113 * _tmp114) +
                         _tmp120 * _tmp127 * (-_tmp114 * _tmp126 + _tmp115 * _tmp124) +
                         _tmp129 * _tmp132 + _tmp133 * _tmp135 +
                         Scalar(1.0) * _tmp139 * (-_tmp114 * _tmp138 + _tmp136) + _tmp35 * _tmp97;
  const Scalar _tmp141 = -_tmp125 * _tmp87 + Scalar(1.0);
  const Scalar _tmp142 = _tmp81 * _tmp88;
  const Scalar _tmp143 = _tmp127 * fh1;
  const Scalar _tmp144 = _tmp81 * _tmp89;
  const Scalar _tmp145 = _tmp100 * (-_tmp144 * _tmp95 + _tmp86 * _tmp95);
  const Scalar _tmp146 = -_tmp112 * _tmp87 - _tmp73;
  const Scalar _tmp147 = _tmp119 * fh1;
  const Scalar _tmp148 = -_tmp100 * _tmp139 * (-_tmp137 * _tmp144 + _tmp137 * _tmp86) -
                         _tmp100 * _tmp143 * (_tmp125 * _tmp86 + _tmp141 * _tmp142) -
                         _tmp100 * _tmp147 * (_tmp112 * _tmp86 + _tmp142 * _tmp146 + Scalar(1.0)) -
                         _tmp145 * _tmp35;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 = std::asinh(_tmp140 * _tmp149);
  const Scalar _tmp151 = Scalar(1.0) * _tmp150;
  const Scalar _tmp152 = Scalar(1.4083112389913199) * _tmp148;
  const Scalar _tmp153 =
      -_tmp150 * _tmp152 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp68), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp70), Scalar(2))));
  const Scalar _tmp154 = Scalar(0.71007031138673404) * _tmp149;
  const Scalar _tmp155 = _tmp153 * _tmp154;
  const Scalar _tmp156 = Scalar(1.4083112389913199) * _tmp145;
  const Scalar _tmp157 = std::pow(_tmp148, Scalar(-2));
  const Scalar _tmp158 = _tmp17 + _tmp39 + _tmp5;
  const Scalar _tmp159 = _tmp145 * _tmp157;
  const Scalar _tmp160 =
      (-_tmp140 * _tmp159 + _tmp149 * (_tmp132 * _tmp158 + _tmp135 * _tmp30 - _tmp97)) /
      std::sqrt(Scalar(std::pow(_tmp140, Scalar(2)) * _tmp157 + 1));
  const Scalar _tmp161 = _tmp130 * _tmp44;
  const Scalar _tmp162 = _tmp115 * _tmp133;
  const Scalar _tmp163 = _tmp113 * _tmp147 * _tmp44 + _tmp126 * _tmp143 * _tmp44 +
                         _tmp129 * _tmp161 - _tmp134 * _tmp162 + _tmp138 * _tmp139 * _tmp44 +
                         _tmp35 * _tmp96;
  const Scalar _tmp164 = _tmp137 * _tmp139;
  const Scalar _tmp165 = _tmp35 * _tmp95;
  const Scalar _tmp166 =
      _tmp141 * _tmp143 * _tmp88 + _tmp146 * _tmp147 * _tmp88 - _tmp164 * _tmp89 - _tmp165 * _tmp89;
  const Scalar _tmp167 = Scalar(1.0) / (_tmp166);
  const Scalar _tmp168 = std::asinh(_tmp163 * _tmp167);
  const Scalar _tmp169 = Scalar(1.0) * _tmp168;
  const Scalar _tmp170 = Scalar(1.4083112389913199) * _tmp166;
  const Scalar _tmp171 =
      -_tmp168 * _tmp170 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp78), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp76 - 1), Scalar(2))));
  const Scalar _tmp172 = Scalar(0.71007031138673404) * _tmp167;
  const Scalar _tmp173 = _tmp171 * _tmp172;
  const Scalar _tmp174 = Scalar(1.4083112389913199) * _tmp95;
  const Scalar _tmp175 = _tmp174 * _tmp89;
  const Scalar _tmp176 = std::pow(_tmp166, Scalar(-2));
  const Scalar _tmp177 = _tmp176 * _tmp89 * _tmp95;
  const Scalar _tmp178 = _tmp115 * _tmp30;
  const Scalar _tmp179 =
      (-_tmp163 * _tmp177 + _tmp167 * (-_tmp134 * _tmp178 + _tmp158 * _tmp161 - _tmp96)) /
      std::sqrt(Scalar(std::pow(_tmp163, Scalar(2)) * _tmp176 + 1));
  const Scalar _tmp180 = _tmp112 * _tmp147 + _tmp125 * _tmp143 + _tmp164 + _tmp165;
  const Scalar _tmp181 = Scalar(1.0) / (_tmp180);
  const Scalar _tmp182 = -_tmp110 * _tmp147 * _tmp54 - _tmp124 * _tmp143 * _tmp54 -
                         _tmp129 * _tmp131 - _tmp136 * _tmp139 + _tmp162 + _tmp35 * _tmp55;
  const Scalar _tmp183 = std::asinh(_tmp181 * _tmp182);
  const Scalar _tmp184 = Scalar(1.4083112389913199) * _tmp180;
  const Scalar _tmp185 =
      -_tmp183 * _tmp184 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp62 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp64 - 1), Scalar(2))));
  const Scalar _tmp186 = std::pow(_tmp180, Scalar(-2));
  const Scalar _tmp187 = _tmp186 * _tmp95;
  const Scalar _tmp188 = (_tmp181 * (-_tmp131 * _tmp158 + _tmp178 - _tmp55) + _tmp182 * _tmp187) /
                         std::sqrt(Scalar(std::pow(_tmp182, Scalar(2)) * _tmp186 + 1));
  const Scalar _tmp189 = Scalar(0.71007031138673404) * _tmp181;
  const Scalar _tmp190 = _tmp185 * _tmp189;
  const Scalar _tmp191 = Scalar(1.0) * _tmp183;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
      (-_tmp34 * std::cosh(Scalar(1.0) * _tmp32) +
       _tmp34 * std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                          (-_tmp32 * _tmp33 -
                           Scalar(125.0) *
                               std::sqrt(Scalar(
                                   std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp31),
                                            Scalar(2)) +
                                   Scalar(0.77439999999999998) *
                                       std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp21 - 1),
                                                Scalar(2)))))));
  _res(1, 0) = _tmp152 * (-Scalar(1.0) * _tmp160 * std::cosh(_tmp151) -
                          (-Scalar(0.71007031138673404) * _tmp153 * _tmp159 +
                           _tmp154 * (-_tmp150 * _tmp156 - _tmp152 * _tmp160)) *
                              std::cosh(_tmp155)) +
               _tmp156 * (-std::sinh(_tmp151) - std::sinh(_tmp155));
  _res(2, 0) = _tmp170 * (-Scalar(1.0) * _tmp179 * std::cosh(_tmp169) -
                          (-Scalar(0.71007031138673404) * _tmp171 * _tmp177 +
                           _tmp172 * (-_tmp168 * _tmp175 - _tmp170 * _tmp179)) *
                              std::cosh(_tmp173)) +
               _tmp175 * (-std::sinh(_tmp169) - std::sinh(_tmp173));
  _res(3, 0) = -_tmp174 * (-std::sinh(_tmp190) - std::sinh(_tmp191)) +
               _tmp184 * (-Scalar(1.0) * _tmp188 * std::cosh(_tmp191) -
                          (Scalar(0.71007031138673404) * _tmp185 * _tmp187 +
                           _tmp189 * (_tmp174 * _tmp183 - _tmp184 * _tmp188)) *
                              std::cosh(_tmp190));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
