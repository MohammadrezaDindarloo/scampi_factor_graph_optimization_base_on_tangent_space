// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl14
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl14(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 528

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (161)
  const Scalar _tmp0 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp6 = 2 * _tmp5;
  const Scalar _tmp7 = _tmp4 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp10 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp11 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp12 = _tmp0 * _tmp6;
  const Scalar _tmp13 = _tmp2 * _tmp4;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 + _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp8;
  const Scalar _tmp17 = _tmp1 * _tmp6;
  const Scalar _tmp18 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp17 - Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp20 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp20;
  const Scalar _tmp22 = _tmp3 + _tmp7;
  const Scalar _tmp23 = -Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp21 + _tmp23;
  const Scalar _tmp25 = _tmp19 + _tmp24;
  const Scalar _tmp26 = _tmp25 + position_vector(0, 0);
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp28 = _tmp12 - _tmp13;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp31 = _tmp29 + _tmp30;
  const Scalar _tmp32 = _tmp27 + _tmp31;
  const Scalar _tmp33 = _tmp32 + position_vector(1, 0);
  const Scalar _tmp34 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp26), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp33), Scalar(2));
  const Scalar _tmp35 = Scalar(1.0) / (fh1);
  const Scalar _tmp36 = std::asinh(_tmp35 * fv1);
  const Scalar _tmp37 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp38 = -_tmp27;
  const Scalar _tmp39 = _tmp29 - _tmp30;
  const Scalar _tmp40 = _tmp38 + _tmp39;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp42 = _tmp41 + Scalar(110.0);
  const Scalar _tmp43 = -_tmp19;
  const Scalar _tmp44 = -_tmp21 + _tmp23;
  const Scalar _tmp45 = _tmp43 + _tmp44;
  const Scalar _tmp46 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp47 = _tmp46 + Scalar(125.0);
  const Scalar _tmp48 = std::pow(Scalar(std::pow(_tmp42, Scalar(2)) + std::pow(_tmp47, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp47 * _tmp48;
  const Scalar _tmp50 = _tmp24 + _tmp43;
  const Scalar _tmp51 = _tmp31 + _tmp38;
  const Scalar _tmp52 = _tmp51 + position_vector(1, 0);
  const Scalar _tmp53 = _tmp52 + Scalar(110.0);
  const Scalar _tmp54 = _tmp50 + position_vector(0, 0);
  const Scalar _tmp55 = _tmp54 + Scalar(-125.0);
  const Scalar _tmp56 =
      std::sqrt(Scalar(std::pow(_tmp53, Scalar(2)) + std::pow(_tmp55, Scalar(2))));
  const Scalar _tmp57 = Scalar(1.0) / (_tmp56);
  const Scalar _tmp58 = Scalar(1.0) / (_tmp55);
  const Scalar _tmp59 = _tmp56 * _tmp58;
  const Scalar _tmp60 = _tmp59 * (_tmp50 * _tmp53 * _tmp57 - _tmp51 * _tmp55 * _tmp57);
  const Scalar _tmp61 = _tmp42 * _tmp48;
  const Scalar _tmp62 = _tmp40 * _tmp49 - _tmp45 * _tmp61 + _tmp49 * _tmp60;
  const Scalar _tmp63 = _tmp53 * _tmp58;
  const Scalar _tmp64 = Scalar(1.0) / (_tmp49 * _tmp63 - _tmp61);
  const Scalar _tmp65 = Scalar(1.0) * _tmp64;
  const Scalar _tmp66 = -_tmp8;
  const Scalar _tmp67 = _tmp11 - _tmp14;
  const Scalar _tmp68 = _tmp66 + _tmp67;
  const Scalar _tmp69 = _tmp67 + _tmp8;
  const Scalar _tmp70 = _tmp49 * _tmp69;
  const Scalar _tmp71 = _tmp61 * _tmp68 - _tmp63 * _tmp70;
  const Scalar _tmp72 = _tmp65 * _tmp71;
  const Scalar _tmp73 = Scalar(1.0) * _tmp51;
  const Scalar _tmp74 = -_tmp73;
  const Scalar _tmp75 = Scalar(1.0) / (_tmp40 + _tmp74);
  const Scalar _tmp76 = Scalar(1.0) * _tmp50;
  const Scalar _tmp77 = _tmp75 * (-_tmp45 + _tmp76);
  const Scalar _tmp78 = -_tmp49 * _tmp68 + _tmp70;
  const Scalar _tmp79 = -_tmp65 * _tmp78 + _tmp72 * _tmp77;
  const Scalar _tmp80 = _tmp15 + _tmp66;
  const Scalar _tmp81 = _tmp19 + _tmp44;
  const Scalar _tmp82 = _tmp81 + position_vector(0, 0);
  const Scalar _tmp83 = _tmp82 + Scalar(125.0);
  const Scalar _tmp84 = _tmp27 + _tmp39;
  const Scalar _tmp85 = _tmp84 + position_vector(1, 0);
  const Scalar _tmp86 = _tmp85 + Scalar(-110.0);
  const Scalar _tmp87 = std::pow(Scalar(std::pow(_tmp83, Scalar(2)) + std::pow(_tmp86, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp88 = _tmp83 * _tmp87;
  const Scalar _tmp89 = _tmp69 * _tmp88;
  const Scalar _tmp90 = _tmp86 * _tmp87;
  const Scalar _tmp91 = _tmp63 * _tmp88 - _tmp90;
  const Scalar _tmp92 = _tmp64 * _tmp91;
  const Scalar _tmp93 = -_tmp63 * _tmp89 - _tmp71 * _tmp92 + _tmp80 * _tmp90;
  const Scalar _tmp94 = -_tmp77 * _tmp93 - _tmp78 * _tmp92 - _tmp80 * _tmp88 + _tmp89;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp96 = _tmp60 * _tmp88 - _tmp62 * _tmp92 - _tmp81 * _tmp90 + _tmp84 * _tmp88;
  const Scalar _tmp97 = _tmp95 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp94 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (-_tmp62 * _tmp65 - _tmp79 * _tmp97);
  const Scalar _tmp101 = _tmp100 + _tmp79;
  const Scalar _tmp102 = _tmp91 * _tmp95;
  const Scalar _tmp103 = -_tmp101 * _tmp102 + Scalar(1.0);
  const Scalar _tmp104 = _tmp49 * _tmp64;
  const Scalar _tmp105 = _tmp88 * _tmp95;
  const Scalar _tmp106 = _tmp33 + Scalar(-110.0);
  const Scalar _tmp107 = _tmp26 + Scalar(-125.0);
  const Scalar _tmp108 =
      std::pow(Scalar(std::pow(_tmp106, Scalar(2)) + std::pow(_tmp107, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp109 = _tmp106 * _tmp108;
  const Scalar _tmp110 = _tmp109 * fh1;
  const Scalar _tmp111 = Scalar(1.0) * _tmp98;
  const Scalar _tmp112 = _tmp65 * _tmp91 * _tmp98;
  const Scalar _tmp113 = _tmp107 * _tmp108;
  const Scalar _tmp114 = fh1 * (_tmp109 * _tmp25 - _tmp113 * _tmp32);
  const Scalar _tmp115 = _tmp63 * _tmp64;
  const Scalar _tmp116 = _tmp115 * _tmp71 + _tmp63 * _tmp69;
  const Scalar _tmp117 = _tmp115 * _tmp78 - _tmp116 * _tmp77 - _tmp69;
  const Scalar _tmp118 = _tmp99 * (_tmp115 * _tmp62 - _tmp117 * _tmp97 - _tmp60);
  const Scalar _tmp119 = _tmp117 + _tmp118;
  const Scalar _tmp120 = -_tmp102 * _tmp119 - _tmp63;
  const Scalar _tmp121 = _tmp113 * fh1;
  const Scalar _tmp122 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp123 = _tmp73 * _tmp77 + _tmp76;
  const Scalar _tmp124 = 0;
  const Scalar _tmp125 = -_tmp110 * _tmp59 * (_tmp101 * _tmp105 + _tmp103 * _tmp104) -
                         _tmp114 * _tmp59 * (_tmp111 * _tmp88 - _tmp112 * _tmp49) -
                         _tmp121 * _tmp59 * (_tmp104 * _tmp120 + _tmp105 * _tmp119 + Scalar(1.0)) -
                         _tmp122 * _tmp59 * (-_tmp124 * _tmp49 * _tmp92 + _tmp124 * _tmp88);
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp16 * fh1;
  const Scalar _tmp128 = _tmp113 * _tmp127 + Scalar(40.024799999999999) * _tmp22 + _tmp25 * fv1;
  const Scalar _tmp129 = _tmp74 + _tmp84;
  const Scalar _tmp130 = _tmp129 * _tmp77;
  const Scalar _tmp131 = Scalar(1.0) / (-_tmp130 + _tmp76 - _tmp81);
  const Scalar _tmp132 = Scalar(1.0) * _tmp131;
  const Scalar _tmp133 = _tmp129 * _tmp75;
  const Scalar _tmp134 = _tmp93 * _tmp95;
  const Scalar _tmp135 = _tmp129 * _tmp131;
  const Scalar _tmp136 = _tmp100 * _tmp135 - _tmp101 * _tmp134 - _tmp72;
  const Scalar _tmp137 = Scalar(1.0) * _tmp75;
  const Scalar _tmp138 = _tmp116 + _tmp118 * _tmp135 - _tmp119 * _tmp134;
  const Scalar _tmp139 = _tmp130 * _tmp132 + Scalar(1.0);
  const Scalar _tmp140 = _tmp132 * _tmp77;
  const Scalar _tmp141 = -_tmp109 * _tmp127 - Scalar(40.024799999999999) * _tmp28 - _tmp32 * fv1;
  const Scalar _tmp142 = _tmp132 * _tmp99;
  const Scalar _tmp143 = -_tmp111 * _tmp93 + _tmp129 * _tmp142;
  const Scalar _tmp144 = _tmp123 * _tmp131;
  const Scalar _tmp145 = -_tmp124 * _tmp93 - _tmp129 * _tmp144 + _tmp74;
  const Scalar _tmp146 = std::asinh(
      _tmp126 * (Scalar(1.0) * _tmp110 * (_tmp100 * _tmp132 - _tmp136 * _tmp137) +
                 Scalar(1.0) * _tmp114 * (-_tmp137 * _tmp143 + _tmp142) +
                 Scalar(1.0) * _tmp121 * (_tmp118 * _tmp132 - _tmp137 * _tmp138) +
                 Scalar(1.0) * _tmp122 * (-_tmp123 * _tmp132 - _tmp137 * _tmp145 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp128 * (_tmp132 * _tmp133 - _tmp132) +
                 Scalar(1.0) * _tmp141 * (-_tmp137 * _tmp139 + _tmp140)));
  const Scalar _tmp147 = Scalar(1.4083112389913199) * _tmp125;
  const Scalar _tmp148 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp54), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp52 - 1), Scalar(2));
  const Scalar _tmp149 = _tmp128 * _tmp132;
  const Scalar _tmp150 = _tmp122 * _tmp124;
  const Scalar _tmp151 = _tmp103 * _tmp110 * _tmp64 - _tmp112 * _tmp114 +
                         _tmp120 * _tmp121 * _tmp64 - _tmp150 * _tmp92;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 =
      std::asinh(_tmp152 * (_tmp110 * _tmp136 * _tmp75 + _tmp114 * _tmp143 * _tmp75 +
                            _tmp121 * _tmp138 * _tmp75 + _tmp122 * _tmp145 * _tmp75 -
                            _tmp133 * _tmp149 + _tmp139 * _tmp141 * _tmp75));
  const Scalar _tmp154 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp41 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp46 - 1), Scalar(2));
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp151;
  const Scalar _tmp156 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp85), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp82 - 1), Scalar(2));
  const Scalar _tmp157 =
      _tmp101 * _tmp110 * _tmp95 + _tmp111 * _tmp114 + _tmp119 * _tmp121 * _tmp95 + _tmp150;
  const Scalar _tmp158 = Scalar(1.0) / (_tmp157);
  const Scalar _tmp159 = std::asinh(_tmp158 * (-_tmp100 * _tmp110 * _tmp131 - _tmp114 * _tmp142 -
                                               _tmp118 * _tmp121 * _tmp131 + _tmp122 * _tmp144 -
                                               _tmp140 * _tmp141 + _tmp149));
  const Scalar _tmp160 = Scalar(1.4083112389913199) * _tmp157;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp37 *
          (-std::sinh(Scalar(1.0) * _tmp36) - std::sinh(Scalar(0.71007031138673404) * _tmp35 *
                                                        (-std::sqrt(_tmp34) - _tmp36 * _tmp37))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp34 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp16 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp147 * (-std::sinh(Scalar(1.0) * _tmp146) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp126 *
                           (-_tmp146 * _tmp147 - std::sqrt(_tmp148)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp148 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp69 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp155 * (-std::sinh(Scalar(1.0) * _tmp153) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp152 *
                           (-_tmp153 * _tmp155 - std::sqrt(_tmp154)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp154 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp68 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp160 * (-std::sinh(Scalar(1.0) * _tmp159) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp158 *
                           (-std::sqrt(_tmp156) - _tmp159 * _tmp160))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp156 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp80 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
