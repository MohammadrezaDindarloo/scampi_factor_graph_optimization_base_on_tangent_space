// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl16
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl16(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 529

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (164)
  const Scalar _tmp0 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = 2 * _tmp5;
  const Scalar _tmp7 = _tmp4 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp10 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp11 = -Scalar(0.010999999999999999) * _tmp10 -
                        Scalar(0.010999999999999999) * _tmp9 + Scalar(-0.010999999999999999);
  const Scalar _tmp12 = _tmp0 * _tmp6;
  const Scalar _tmp13 = _tmp2 * _tmp4;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 + _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp8;
  const Scalar _tmp17 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp19 = _tmp12 + _tmp13;
  const Scalar _tmp20 = -Scalar(0.010999999999999999) * _tmp19;
  const Scalar _tmp21 = _tmp1 * _tmp6;
  const Scalar _tmp22 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp21 - Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp20 + _tmp23;
  const Scalar _tmp25 = _tmp18 + _tmp24;
  const Scalar _tmp26 = _tmp25 + position_vector(0, 0);
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp28 = _tmp3 - _tmp7;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp31 = _tmp29 + _tmp30;
  const Scalar _tmp32 = _tmp27 + _tmp31;
  const Scalar _tmp33 = _tmp32 + position_vector(1, 0);
  const Scalar _tmp34 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp26), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp33), Scalar(2));
  const Scalar _tmp35 = Scalar(1.0) / (fh1);
  const Scalar _tmp36 = std::asinh(_tmp35 * fv1);
  const Scalar _tmp37 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp38 = _tmp11 - _tmp14;
  const Scalar _tmp39 = _tmp38 + _tmp8;
  const Scalar _tmp40 = -_tmp18;
  const Scalar _tmp41 = _tmp24 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(0, 0);
  const Scalar _tmp43 = _tmp29 - _tmp30;
  const Scalar _tmp44 = _tmp27 + _tmp43;
  const Scalar _tmp45 = _tmp44 + position_vector(1, 0);
  const Scalar _tmp46 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp45), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp42 - 1), Scalar(2));
  const Scalar _tmp47 = -_tmp27;
  const Scalar _tmp48 = _tmp31 + _tmp47;
  const Scalar _tmp49 = _tmp48 + position_vector(1, 0);
  const Scalar _tmp50 = _tmp49 + Scalar(110.0);
  const Scalar _tmp51 = _tmp20 - _tmp23;
  const Scalar _tmp52 = _tmp18 + _tmp51;
  const Scalar _tmp53 = _tmp52 + position_vector(0, 0);
  const Scalar _tmp54 = _tmp53 + Scalar(-125.0);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp50, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp54 * _tmp55;
  const Scalar _tmp57 = _tmp45 + Scalar(-110.0);
  const Scalar _tmp58 = _tmp42 + Scalar(125.0);
  const Scalar _tmp59 =
      std::sqrt(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp58, Scalar(2))));
  const Scalar _tmp60 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp61 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp62 = _tmp59 * _tmp61;
  const Scalar _tmp63 = _tmp62 * (_tmp41 * _tmp57 * _tmp60 - _tmp44 * _tmp58 * _tmp60);
  const Scalar _tmp64 = _tmp43 + _tmp47;
  const Scalar _tmp65 = _tmp64 + position_vector(1, 0);
  const Scalar _tmp66 = _tmp65 + Scalar(110.0);
  const Scalar _tmp67 = _tmp40 + _tmp51;
  const Scalar _tmp68 = _tmp67 + position_vector(0, 0);
  const Scalar _tmp69 = _tmp68 + Scalar(125.0);
  const Scalar _tmp70 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp69, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp71 = _tmp69 * _tmp70;
  const Scalar _tmp72 = _tmp66 * _tmp70;
  const Scalar _tmp73 = _tmp63 * _tmp71 + _tmp64 * _tmp71 - _tmp67 * _tmp72;
  const Scalar _tmp74 = _tmp57 * _tmp61;
  const Scalar _tmp75 = Scalar(1.0) / (_tmp71 * _tmp74 - _tmp72);
  const Scalar _tmp76 = _tmp50 * _tmp55;
  const Scalar _tmp77 = _tmp56 * _tmp74 - _tmp76;
  const Scalar _tmp78 = _tmp75 * _tmp77;
  const Scalar _tmp79 = _tmp48 * _tmp56 - _tmp52 * _tmp76 + _tmp56 * _tmp63 - _tmp73 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp79);
  const Scalar _tmp81 = Scalar(1.0) * _tmp80;
  const Scalar _tmp82 = _tmp71 * _tmp78;
  const Scalar _tmp83 = _tmp33 + Scalar(-110.0);
  const Scalar _tmp84 = _tmp26 + Scalar(-125.0);
  const Scalar _tmp85 = std::pow(Scalar(std::pow(_tmp83, Scalar(2)) + std::pow(_tmp84, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp86 = _tmp84 * _tmp85;
  const Scalar _tmp87 = _tmp83 * _tmp85;
  const Scalar _tmp88 = fh1 * (_tmp25 * _tmp87 - _tmp32 * _tmp86);
  const Scalar _tmp89 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp90 = -_tmp8;
  const Scalar _tmp91 = _tmp15 + _tmp90;
  const Scalar _tmp92 = _tmp39 * _tmp56;
  const Scalar _tmp93 = _tmp38 + _tmp90;
  const Scalar _tmp94 = _tmp39 * _tmp71;
  const Scalar _tmp95 = _tmp75 * (_tmp72 * _tmp93 - _tmp74 * _tmp94);
  const Scalar _tmp96 = -_tmp74 * _tmp92 + _tmp76 * _tmp91 - _tmp77 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) * _tmp44;
  const Scalar _tmp98 = -_tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp64 + _tmp98);
  const Scalar _tmp100 = Scalar(1.0) * _tmp41;
  const Scalar _tmp101 = _tmp99 * (_tmp100 - _tmp67);
  const Scalar _tmp102 = -_tmp71 * _tmp93 + _tmp94;
  const Scalar _tmp103 = -_tmp101 * _tmp96 - _tmp102 * _tmp78 - _tmp56 * _tmp91 + _tmp92;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = _tmp100 + _tmp101 * _tmp97;
  const Scalar _tmp106 = 0;
  const Scalar _tmp107 = _tmp104 * _tmp106;
  const Scalar _tmp108 = Scalar(1.0) * _tmp95;
  const Scalar _tmp109 = Scalar(1.0) * _tmp75;
  const Scalar _tmp110 = _tmp101 * _tmp108 - _tmp102 * _tmp109;
  const Scalar _tmp111 = _tmp104 * _tmp79;
  const Scalar _tmp112 = _tmp103 * _tmp80;
  const Scalar _tmp113 = _tmp112 * (-_tmp109 * _tmp73 - _tmp110 * _tmp111);
  const Scalar _tmp114 = _tmp110 + _tmp113;
  const Scalar _tmp115 = _tmp104 * _tmp77;
  const Scalar _tmp116 = -_tmp114 * _tmp115 + Scalar(1.0);
  const Scalar _tmp117 = _tmp71 * _tmp75;
  const Scalar _tmp118 = _tmp104 * _tmp56;
  const Scalar _tmp119 = _tmp87 * fh1;
  const Scalar _tmp120 = _tmp74 * _tmp75;
  const Scalar _tmp121 = _tmp39 * _tmp74 + _tmp74 * _tmp95;
  const Scalar _tmp122 = -_tmp101 * _tmp121 + _tmp102 * _tmp120 - _tmp39;
  const Scalar _tmp123 = _tmp112 * (-_tmp111 * _tmp122 + _tmp120 * _tmp73 - _tmp63);
  const Scalar _tmp124 = _tmp122 + _tmp123;
  const Scalar _tmp125 = -_tmp115 * _tmp124 - _tmp74;
  const Scalar _tmp126 = _tmp86 * fh1;
  const Scalar _tmp127 = -_tmp119 * _tmp62 * (_tmp114 * _tmp118 + _tmp116 * _tmp117) -
                         _tmp126 * _tmp62 * (_tmp117 * _tmp125 + _tmp118 * _tmp124 + Scalar(1.0)) -
                         _tmp62 * _tmp88 * (_tmp56 * _tmp81 - _tmp81 * _tmp82) -
                         _tmp62 * _tmp89 * (_tmp107 * _tmp56 - _tmp107 * _tmp82);
  const Scalar _tmp128 = Scalar(1.0) / (_tmp127);
  const Scalar _tmp129 = _tmp48 + _tmp98;
  const Scalar _tmp130 = _tmp101 * _tmp129;
  const Scalar _tmp131 = Scalar(1.0) / (_tmp100 - _tmp130 - _tmp52);
  const Scalar _tmp132 = _tmp129 * _tmp131;
  const Scalar _tmp133 = _tmp104 * _tmp96;
  const Scalar _tmp134 = _tmp121 + _tmp123 * _tmp132 - _tmp124 * _tmp133;
  const Scalar _tmp135 = Scalar(1.0) * _tmp99;
  const Scalar _tmp136 = Scalar(1.0) * _tmp131;
  const Scalar _tmp137 = _tmp16 * fh1;
  const Scalar _tmp138 = _tmp137 * _tmp86 + Scalar(40.024799999999999) * _tmp19 + _tmp25 * fv1;
  const Scalar _tmp139 = _tmp129 * _tmp99;
  const Scalar _tmp140 = -_tmp108 + _tmp113 * _tmp132 - _tmp114 * _tmp133;
  const Scalar _tmp141 = _tmp112 * _tmp136;
  const Scalar _tmp142 = _tmp129 * _tmp141 - _tmp81 * _tmp96;
  const Scalar _tmp143 = _tmp130 * _tmp136 + Scalar(1.0);
  const Scalar _tmp144 = _tmp101 * _tmp136;
  const Scalar _tmp145 = -_tmp137 * _tmp87 - Scalar(40.024799999999999) * _tmp28 - _tmp32 * fv1;
  const Scalar _tmp146 = _tmp105 * _tmp131;
  const Scalar _tmp147 = -_tmp106 * _tmp133 - _tmp129 * _tmp146 + _tmp98;
  const Scalar _tmp148 = std::asinh(
      _tmp128 * (Scalar(1.0) * _tmp119 * (_tmp113 * _tmp136 - _tmp135 * _tmp140) +
                 Scalar(1.0) * _tmp126 * (_tmp123 * _tmp136 - _tmp134 * _tmp135) +
                 Scalar(1.0) * _tmp138 * (_tmp136 * _tmp139 - _tmp136) +
                 Scalar(1.0) * _tmp145 * (-_tmp135 * _tmp143 + _tmp144) +
                 Scalar(1.0) * _tmp88 * (-_tmp135 * _tmp142 + _tmp141) +
                 Scalar(1.0) * _tmp89 * (-_tmp105 * _tmp136 - _tmp135 * _tmp147 + Scalar(1.0))));
  const Scalar _tmp149 = Scalar(1.4083112389913199) * _tmp127;
  const Scalar _tmp150 = _tmp136 * _tmp138;
  const Scalar _tmp151 = _tmp107 * _tmp89;
  const Scalar _tmp152 = _tmp81 * _tmp88;
  const Scalar _tmp153 =
      _tmp116 * _tmp119 * _tmp75 + _tmp125 * _tmp126 * _tmp75 - _tmp151 * _tmp78 - _tmp152 * _tmp78;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 =
      std::asinh(_tmp154 * (_tmp119 * _tmp140 * _tmp99 + _tmp126 * _tmp134 * _tmp99 -
                            _tmp139 * _tmp150 + _tmp142 * _tmp88 * _tmp99 +
                            _tmp143 * _tmp145 * _tmp99 + _tmp147 * _tmp89 * _tmp99));
  const Scalar _tmp156 = Scalar(1.4083112389913199) * _tmp153;
  const Scalar _tmp157 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp65 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp68 - 1), Scalar(2));
  const Scalar _tmp158 = _tmp104 * fh1;
  const Scalar _tmp159 =
      _tmp114 * _tmp158 * _tmp87 + _tmp124 * _tmp158 * _tmp86 + _tmp151 + _tmp152;
  const Scalar _tmp160 = Scalar(1.0) / (_tmp159);
  const Scalar _tmp161 =
      std::asinh(_tmp160 * (-_tmp113 * _tmp119 * _tmp131 - _tmp123 * _tmp126 * _tmp131 -
                            _tmp141 * _tmp88 - _tmp144 * _tmp145 + _tmp146 * _tmp89 + _tmp150));
  const Scalar _tmp162 = Scalar(1.4083112389913199) * _tmp159;
  const Scalar _tmp163 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp53), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp49 - 1), Scalar(2));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp37 *
          (-std::sinh(Scalar(1.0) * _tmp36) - std::sinh(Scalar(0.71007031138673404) * _tmp35 *
                                                        (-std::sqrt(_tmp34) - _tmp36 * _tmp37))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp34 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp16 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp149 * (-std::sinh(Scalar(1.0) * _tmp148) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp128 *
                           (-_tmp148 * _tmp149 - std::sqrt(_tmp46)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp46 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp39 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp156 * (-std::sinh(Scalar(1.0) * _tmp155) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp154 *
                           (-_tmp155 * _tmp156 - std::sqrt(_tmp157)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp157 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp93 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp162 * (-std::sinh(Scalar(1.0) * _tmp161) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp160 *
                           (-_tmp161 * _tmp162 - std::sqrt(_tmp163)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp163 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp91 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
