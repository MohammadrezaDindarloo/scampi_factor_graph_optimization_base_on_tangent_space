// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl8
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl8(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 507

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (158)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = 2 * _tmp2 * _tmp3;
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp10 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp12 = 2 * _tmp5;
  const Scalar _tmp13 = _tmp12 * _tmp2;
  const Scalar _tmp14 = _tmp3 * _tmp6;
  const Scalar _tmp15 = _tmp13 - _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp11 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp8;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp4 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = _tmp12 * _tmp3;
  const Scalar _tmp23 = _tmp2 * _tmp6;
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp28 = _tmp25 + _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp33 =
      -Scalar(0.010999999999999999) * _tmp26 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp35 = _tmp33 - _tmp34;
  const Scalar _tmp36 = _tmp32 + _tmp35;
  const Scalar _tmp37 = _tmp11 + _tmp16;
  const Scalar _tmp38 = _tmp37 + _tmp8;
  const Scalar _tmp39 = _tmp38 + position_vector(1, 0);
  const Scalar _tmp40 = _tmp39 + Scalar(-110.0);
  const Scalar _tmp41 = _tmp20 + _tmp28;
  const Scalar _tmp42 = _tmp41 + position_vector(0, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(-125.0);
  const Scalar _tmp44 = Scalar(1.0) / (_tmp43);
  const Scalar _tmp45 = _tmp40 * _tmp44;
  const Scalar _tmp46 = -_tmp8;
  const Scalar _tmp47 = _tmp17 + _tmp46;
  const Scalar _tmp48 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp49 = _tmp48 + Scalar(110.0);
  const Scalar _tmp50 = _tmp25 - _tmp27;
  const Scalar _tmp51 = _tmp21 + _tmp50;
  const Scalar _tmp52 = _tmp51 + position_vector(0, 0);
  const Scalar _tmp53 = _tmp52 + Scalar(125.0);
  const Scalar _tmp54 = std::pow(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp53, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp55 = _tmp53 * _tmp54;
  const Scalar _tmp56 = _tmp49 * _tmp54;
  const Scalar _tmp57 = Scalar(1.0) / (_tmp45 * _tmp55 - _tmp56);
  const Scalar _tmp58 =
      std::sqrt(Scalar(std::pow(_tmp40, Scalar(2)) + std::pow(_tmp43, Scalar(2))));
  const Scalar _tmp59 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp60 = _tmp44 * _tmp58;
  const Scalar _tmp61 = _tmp60 * (-_tmp38 * _tmp43 * _tmp59 + _tmp40 * _tmp41 * _tmp59);
  const Scalar _tmp62 = _tmp57 * (_tmp47 * _tmp55 - _tmp51 * _tmp56 + _tmp55 * _tmp61);
  const Scalar _tmp63 = -_tmp32;
  const Scalar _tmp64 = _tmp35 + _tmp63;
  const Scalar _tmp65 = _tmp33 + _tmp34;
  const Scalar _tmp66 = _tmp32 + _tmp65;
  const Scalar _tmp67 = _tmp55 * _tmp66;
  const Scalar _tmp68 = _tmp57 * (-_tmp55 * _tmp64 + _tmp67);
  const Scalar _tmp69 = Scalar(1.0) * _tmp41;
  const Scalar _tmp70 = -_tmp51 + _tmp69;
  const Scalar _tmp71 = Scalar(1.0) * _tmp38;
  const Scalar _tmp72 = -_tmp71;
  const Scalar _tmp73 = Scalar(1.0) / (_tmp47 + _tmp72);
  const Scalar _tmp74 = Scalar(1.0) * _tmp73;
  const Scalar _tmp75 = _tmp57 * (-_tmp45 * _tmp67 + _tmp56 * _tmp64);
  const Scalar _tmp76 = -Scalar(1.0) * _tmp68 + _tmp70 * _tmp74 * _tmp75;
  const Scalar _tmp77 = _tmp63 + _tmp65;
  const Scalar _tmp78 = _tmp20 + _tmp50;
  const Scalar _tmp79 = _tmp78 + position_vector(0, 0);
  const Scalar _tmp80 = _tmp79 + Scalar(125.0);
  const Scalar _tmp81 = _tmp37 + _tmp46;
  const Scalar _tmp82 = _tmp81 + position_vector(1, 0);
  const Scalar _tmp83 = _tmp82 + Scalar(-110.0);
  const Scalar _tmp84 = std::pow(Scalar(std::pow(_tmp80, Scalar(2)) + std::pow(_tmp83, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp85 = _tmp80 * _tmp84;
  const Scalar _tmp86 = _tmp66 * _tmp85;
  const Scalar _tmp87 = _tmp83 * _tmp84;
  const Scalar _tmp88 = _tmp45 * _tmp85 - _tmp87;
  const Scalar _tmp89 = -_tmp45 * _tmp86 - _tmp75 * _tmp88 + _tmp77 * _tmp87;
  const Scalar _tmp90 = _tmp70 * _tmp73;
  const Scalar _tmp91 = -_tmp68 * _tmp88 - _tmp77 * _tmp85 + _tmp86 - _tmp89 * _tmp90;
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = _tmp61 * _tmp85 - _tmp62 * _tmp88 - _tmp78 * _tmp87 + _tmp81 * _tmp85;
  const Scalar _tmp94 = _tmp92 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp96 = _tmp91 * _tmp95;
  const Scalar _tmp97 = _tmp96 * (-Scalar(1.0) * _tmp62 - _tmp76 * _tmp94);
  const Scalar _tmp98 = _tmp76 + _tmp97;
  const Scalar _tmp99 = _tmp85 * _tmp92;
  const Scalar _tmp100 = _tmp88 * _tmp92;
  const Scalar _tmp101 = -_tmp100 * _tmp98 + Scalar(1.0);
  const Scalar _tmp102 = _tmp55 * _tmp57;
  const Scalar _tmp103 = _tmp19 + Scalar(110.0);
  const Scalar _tmp104 = _tmp30 + Scalar(-125.0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp103 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp109 = _tmp69 + _tmp71 * _tmp90;
  const Scalar _tmp110 = 0;
  const Scalar _tmp111 = _tmp110 * _tmp92;
  const Scalar _tmp112 = _tmp102 * _tmp88;
  const Scalar _tmp113 = Scalar(1.0) * _tmp95;
  const Scalar _tmp114 = _tmp104 * _tmp105;
  const Scalar _tmp115 = fh1 * (_tmp106 * _tmp29 - _tmp114 * _tmp18);
  const Scalar _tmp116 = _tmp45 * _tmp66 + _tmp45 * _tmp75;
  const Scalar _tmp117 = -_tmp116 * _tmp90 + _tmp45 * _tmp68 - _tmp66;
  const Scalar _tmp118 = _tmp96 * (-_tmp117 * _tmp94 + _tmp45 * _tmp62 - _tmp61);
  const Scalar _tmp119 = _tmp117 + _tmp118;
  const Scalar _tmp120 = -_tmp100 * _tmp119 - _tmp45;
  const Scalar _tmp121 = _tmp114 * fh1;
  const Scalar _tmp122 = -_tmp107 * _tmp60 * (_tmp101 * _tmp102 + _tmp98 * _tmp99) -
                         _tmp108 * _tmp60 * (-_tmp111 * _tmp112 + _tmp111 * _tmp85) -
                         _tmp115 * _tmp60 * (-_tmp112 * _tmp113 + _tmp113 * _tmp85) -
                         _tmp121 * _tmp60 * (_tmp102 * _tmp120 + _tmp119 * _tmp99 + Scalar(1.0));
  const Scalar _tmp123 = Scalar(1.0) / (_tmp122);
  const Scalar _tmp124 = _tmp89 * _tmp92;
  const Scalar _tmp125 = _tmp72 + _tmp81;
  const Scalar _tmp126 = _tmp125 * _tmp90;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 + _tmp69 - _tmp78);
  const Scalar _tmp128 = _tmp125 * _tmp127;
  const Scalar _tmp129 = -_tmp124 * _tmp98 + _tmp128 * _tmp97 - Scalar(1.0) * _tmp75;
  const Scalar _tmp130 = Scalar(1.0) * _tmp127;
  const Scalar _tmp131 = Scalar(1.0) * fh1;
  const Scalar _tmp132 = _tmp73 * (_tmp126 * _tmp130 + Scalar(1.0));
  const Scalar _tmp133 = _tmp130 * _tmp90;
  const Scalar _tmp134 = _tmp36 * fh1;
  const Scalar _tmp135 = -_tmp106 * _tmp134 - Scalar(40.024799999999999) * _tmp15 - _tmp18 * fv1;
  const Scalar _tmp136 = _tmp125 * _tmp130;
  const Scalar _tmp137 = _tmp114 * _tmp134 + Scalar(40.024799999999999) * _tmp24 + _tmp29 * fv1;
  const Scalar _tmp138 = _tmp116 + _tmp118 * _tmp128 - _tmp119 * _tmp124;
  const Scalar _tmp139 = -_tmp113 * _tmp89 + _tmp136 * _tmp96;
  const Scalar _tmp140 = _tmp130 * _tmp96;
  const Scalar _tmp141 = _tmp109 * _tmp127;
  const Scalar _tmp142 = _tmp73 * (-_tmp110 * _tmp124 - _tmp125 * _tmp141 + _tmp72);
  const Scalar _tmp143 =
      std::asinh(_tmp123 * (_tmp106 * _tmp131 * (-_tmp129 * _tmp74 + _tmp130 * _tmp97) +
                            Scalar(1.0) * _tmp108 *
                                (-_tmp109 * _tmp130 - Scalar(1.0) * _tmp142 + Scalar(1.0)) +
                            _tmp114 * _tmp131 * (_tmp118 * _tmp130 - _tmp138 * _tmp74) +
                            Scalar(1.0) * _tmp115 * (-_tmp139 * _tmp74 + _tmp140) +
                            Scalar(1.0) * _tmp135 * (-Scalar(1.0) * _tmp132 + _tmp133) +
                            Scalar(1.0) * _tmp137 * (-_tmp130 + _tmp136 * _tmp73)));
  const Scalar _tmp144 = Scalar(1.4083112389913199) * _tmp122;
  const Scalar _tmp145 = _tmp130 * _tmp137;
  const Scalar _tmp146 = _tmp113 * _tmp115;
  const Scalar _tmp147 = _tmp57 * _tmp88;
  const Scalar _tmp148 = _tmp108 * _tmp111;
  const Scalar _tmp149 = _tmp101 * _tmp107 * _tmp57 + _tmp120 * _tmp121 * _tmp57 -
                         _tmp146 * _tmp147 - _tmp147 * _tmp148;
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 = std::asinh(
      _tmp150 * (_tmp107 * _tmp129 * _tmp73 + _tmp108 * _tmp142 + _tmp115 * _tmp139 * _tmp73 +
                 _tmp121 * _tmp138 * _tmp73 - _tmp125 * _tmp145 * _tmp73 + _tmp132 * _tmp135));
  const Scalar _tmp152 = Scalar(1.4083112389913199) * _tmp149;
  const Scalar _tmp153 = _tmp92 * fh1;
  const Scalar _tmp154 =
      _tmp106 * _tmp153 * _tmp98 + _tmp114 * _tmp119 * _tmp153 + _tmp146 + _tmp148;
  const Scalar _tmp155 = Scalar(1.0) / (_tmp154);
  const Scalar _tmp156 =
      std::asinh(_tmp155 * (-_tmp107 * _tmp127 * _tmp97 + _tmp108 * _tmp141 - _tmp115 * _tmp140 -
                            _tmp118 * _tmp121 * _tmp127 - _tmp133 * _tmp135 + _tmp145));
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp154;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp31 *
          (Scalar(34.083374946563197) * _tmp0 + std::cosh(Scalar(1.0) * _tmp1) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp0 *
               (-_tmp1 * _tmp31 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp30), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp19 - 1),
                                     Scalar(2))))))) +
      _tmp36 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp144 *
          (Scalar(34.083374946563197) * _tmp123 + std::cosh(Scalar(1.0) * _tmp143) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp123 *
               (-_tmp143 * _tmp144 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp39),
                                                 Scalar(2)) +
                                    std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp42),
                                             Scalar(2))))))) +
      _tmp66 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp152 *
          (Scalar(34.083374946563197) * _tmp150 + std::cosh(Scalar(1.0) * _tmp151) -
           std::cosh(Scalar(0.71007031138673404) * _tmp150 *
                     (-_tmp151 * _tmp152 -
                      Scalar(125.0) *
                          std::sqrt(Scalar(
                              Scalar(0.77439999999999998) *
                                  std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp48 - 1),
                                           Scalar(2)) +
                              std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp52 - 1),
                                       Scalar(2))))))) +
      _tmp64 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp157 *
          (Scalar(34.083374946563197) * _tmp155 + std::cosh(Scalar(1.0) * _tmp156) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp155 *
               (-_tmp156 * _tmp157 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp82),
                                                 Scalar(2)) +
                                    std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp79 - 1),
                                             Scalar(2))))))) +
      _tmp77 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
