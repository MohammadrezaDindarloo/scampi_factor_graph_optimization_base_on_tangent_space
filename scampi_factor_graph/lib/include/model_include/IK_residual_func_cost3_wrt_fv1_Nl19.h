// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_fv1_Nl19
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtFv1Nl19(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot, const Scalar p_init0,
    const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x, const Scalar rot_init_y,
    const Scalar rot_init_z, const Scalar rot_init_w, const Scalar epsilon) {
  // Total ops: 292

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (106)
  const Scalar _tmp0 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp1 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp8 = 2 * _tmp3;
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                        2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 =
      Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp13 = 2 * _tmp1 * _tmp7;
  const Scalar _tmp14 = _tmp10 * _tmp3;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 - _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp6;
  const Scalar _tmp18 = _tmp17 + p_init1 + Scalar(8.3196563700000006);
  const Scalar _tmp19 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = _tmp1 * _tmp8;
  const Scalar _tmp23 = _tmp10 * _tmp7;
  const Scalar _tmp24 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = _tmp21 + _tmp26;
  const Scalar _tmp28 = _tmp27 + p_init0 + Scalar(1.9874742000000001);
  const Scalar _tmp29 = Scalar(1.0) / (_tmp28);
  const Scalar _tmp30 = _tmp18 * _tmp29;
  const Scalar _tmp31 = _tmp24 + _tmp25;
  const Scalar _tmp32 = _tmp20 + _tmp31;
  const Scalar _tmp33 = _tmp32 + p_init0 + Scalar(-2.71799795);
  const Scalar _tmp34 = _tmp12 + _tmp15;
  const Scalar _tmp35 = _tmp34 + _tmp5;
  const Scalar _tmp36 = _tmp35 + p_init1 + Scalar(-4.7752063900000001);
  const Scalar _tmp37 = std::pow(Scalar(std::pow(_tmp33, Scalar(2)) + std::pow(_tmp36, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp38 = _tmp33 * _tmp37;
  const Scalar _tmp39 = _tmp36 * _tmp37;
  const Scalar _tmp40 = Scalar(1.0) / (_tmp30 * _tmp38 - _tmp39);
  const Scalar _tmp41 = _tmp38 * _tmp40;
  const Scalar _tmp42 = Scalar(1.0) * _tmp17;
  const Scalar _tmp43 = Scalar(1.0) * _tmp27;
  const Scalar _tmp44 = (-_tmp32 + _tmp43) / (_tmp35 - _tmp42);
  const Scalar _tmp45 = _tmp42 * _tmp44 + _tmp43;
  const Scalar _tmp46 = 0;
  const Scalar _tmp47 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp48 = -_tmp47;
  const Scalar _tmp49 = -Scalar(0.010999999999999999) * _tmp19 -
                        Scalar(0.010999999999999999) * _tmp2 + Scalar(-0.010999999999999999);
  const Scalar _tmp50 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp51 = _tmp49 + _tmp50;
  const Scalar _tmp52 = _tmp48 + _tmp51;
  const Scalar _tmp53 = _tmp20 + _tmp26;
  const Scalar _tmp54 = _tmp53 + p_init0 + Scalar(-2.5202214700000001);
  const Scalar _tmp55 = _tmp34 + _tmp6;
  const Scalar _tmp56 = _tmp55 + p_init1 + Scalar(8.3888750099999996);
  const Scalar _tmp57 = std::pow(Scalar(std::pow(_tmp54, Scalar(2)) + std::pow(_tmp56, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp58 = _tmp54 * _tmp57;
  const Scalar _tmp59 = _tmp48 + _tmp49 - _tmp50;
  const Scalar _tmp60 = _tmp38 * _tmp59;
  const Scalar _tmp61 = _tmp47 + _tmp51;
  const Scalar _tmp62 = -_tmp38 * _tmp61 + _tmp60;
  const Scalar _tmp63 = _tmp56 * _tmp57;
  const Scalar _tmp64 = _tmp30 * _tmp58 - _tmp63;
  const Scalar _tmp65 = _tmp40 * _tmp64;
  const Scalar _tmp66 = -_tmp30 * _tmp60 + _tmp39 * _tmp61;
  const Scalar _tmp67 = _tmp58 * _tmp59;
  const Scalar _tmp68 = -_tmp44 * (-_tmp30 * _tmp67 + _tmp52 * _tmp63 - _tmp65 * _tmp66) -
                        _tmp52 * _tmp58 - _tmp62 * _tmp65 + _tmp67;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp68);
  const Scalar _tmp70 = _tmp64 * _tmp69;
  const Scalar _tmp71 = _tmp46 * _tmp70;
  const Scalar _tmp72 = _tmp46 * _tmp69;
  const Scalar _tmp73 =
      std::sqrt(Scalar(std::pow(_tmp18, Scalar(2)) + std::pow(_tmp28, Scalar(2))));
  const Scalar _tmp74 = _tmp29 * _tmp73;
  const Scalar _tmp75 = _tmp74 * (-_tmp41 * _tmp71 + _tmp58 * _tmp72);
  const Scalar _tmp76 = Scalar(1.0) * _tmp40;
  const Scalar _tmp77 = _tmp44 * _tmp66 * _tmp76 - _tmp62 * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) / (_tmp73);
  const Scalar _tmp79 = _tmp74 * (-_tmp17 * _tmp28 * _tmp78 + _tmp18 * _tmp27 * _tmp78);
  const Scalar _tmp80 = -_tmp32 * _tmp39 + _tmp35 * _tmp38 + _tmp38 * _tmp79;
  const Scalar _tmp81 = -_tmp53 * _tmp63 + _tmp55 * _tmp58 + _tmp58 * _tmp79 - _tmp65 * _tmp80;
  const Scalar _tmp82 = _tmp69 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp81);
  const Scalar _tmp84 = _tmp68 * _tmp83;
  const Scalar _tmp85 = _tmp77 + _tmp84 * (-_tmp76 * _tmp80 - _tmp77 * _tmp82);
  const Scalar _tmp86 = _tmp58 * _tmp69;
  const Scalar _tmp87 = -_tmp70 * _tmp85 + Scalar(1.0);
  const Scalar _tmp88 = _tmp16 + _tmp5;
  const Scalar _tmp89 = _tmp88 + p_init1 + Scalar(-4.8333311099999996);
  const Scalar _tmp90 = _tmp21 + _tmp31;
  const Scalar _tmp91 = _tmp90 + p_init0 + Scalar(1.79662371);
  const Scalar _tmp92 = std::pow(Scalar(std::pow(_tmp89, Scalar(2)) + std::pow(_tmp91, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp93 = _tmp89 * _tmp92;
  const Scalar _tmp94 = _tmp74 * fh1;
  const Scalar _tmp95 = _tmp30 * _tmp40;
  const Scalar _tmp96 = -_tmp44 * (_tmp30 * _tmp59 + _tmp66 * _tmp95) - _tmp59 + _tmp62 * _tmp95;
  const Scalar _tmp97 = _tmp84 * (-_tmp79 + _tmp80 * _tmp95 - _tmp82 * _tmp96) + _tmp96;
  const Scalar _tmp98 = -_tmp30 - _tmp70 * _tmp97;
  const Scalar _tmp99 = _tmp91 * _tmp92;
  const Scalar _tmp100 = _tmp64 * _tmp76 * _tmp83;
  const Scalar _tmp101 = Scalar(1.0) * _tmp83;
  const Scalar _tmp102 = fh1 * (-_tmp88 * _tmp99 + _tmp90 * _tmp93);
  const Scalar _tmp103 = _tmp40 * _tmp71;
  const Scalar _tmp104 = _tmp40 * fh1;
  const Scalar _tmp105 = _tmp69 * fh1;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp75 *
               std::exp(_tmp0 * _tmp75 + _tmp102 * _tmp74 * (-_tmp100 * _tmp38 + _tmp101 * _tmp58) +
                        _tmp93 * _tmp94 * (_tmp41 * _tmp87 + _tmp85 * _tmp86) +
                        _tmp94 * _tmp99 * (_tmp41 * _tmp98 + _tmp86 * _tmp97 + Scalar(1.0)));
  _res(2, 0) = -_tmp103 * std::exp(_tmp0 * _tmp103 + _tmp100 * _tmp102 - _tmp104 * _tmp87 * _tmp93 -
                                   _tmp104 * _tmp98 * _tmp99);
  _res(3, 0) = _tmp72 * std::exp(-_tmp0 * _tmp72 - _tmp101 * _tmp102 - _tmp105 * _tmp85 * _tmp93 -
                                 _tmp105 * _tmp97 * _tmp99);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
