// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl3
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl3(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 532

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (161)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp9 = 2 * _tmp8;
  const Scalar _tmp10 = _tmp2 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp4;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp4 * _tmp9;
  const Scalar _tmp15 = _tmp11 * _tmp2;
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = -Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp13 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp7;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp25 = 2 * _tmp2 * _tmp4;
  const Scalar _tmp26 = _tmp11 * _tmp8;
  const Scalar _tmp27 = _tmp25 + _tmp26;
  const Scalar _tmp28 = -Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = -_tmp24 + _tmp28;
  const Scalar _tmp30 = _tmp22 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp20 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp31 - 1), Scalar(2));
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp25 - Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 = -Scalar(0.010999999999999999) * _tmp23 -
                        Scalar(0.010999999999999999) * _tmp3 + Scalar(-0.010999999999999999);
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp36 + _tmp37;
  const Scalar _tmp41 = _tmp34 + _tmp40;
  const Scalar _tmp42 = _tmp24 + _tmp28;
  const Scalar _tmp43 = _tmp21 + _tmp42;
  const Scalar _tmp44 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp45 = _tmp13 + _tmp17;
  const Scalar _tmp46 = _tmp45 + _tmp6;
  const Scalar _tmp47 = _tmp46 + position_vector(1, 0);
  const Scalar _tmp48 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp44), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp47), Scalar(2));
  const Scalar _tmp49 = _tmp47 + Scalar(-110.0);
  const Scalar _tmp50 = _tmp44 + Scalar(-125.0);
  const Scalar _tmp51 =
      std::sqrt(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp50, Scalar(2))));
  const Scalar _tmp52 = Scalar(1.0) / (_tmp51);
  const Scalar _tmp53 = Scalar(1.0) / (_tmp50);
  const Scalar _tmp54 = _tmp51 * _tmp53;
  const Scalar _tmp55 = _tmp54 * (_tmp43 * _tmp49 * _tmp52 - _tmp46 * _tmp50 * _tmp52);
  const Scalar _tmp56 = _tmp35 + _tmp40;
  const Scalar _tmp57 = _tmp21 + _tmp29;
  const Scalar _tmp58 = _tmp57 + position_vector(0, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(125.0);
  const Scalar _tmp60 = _tmp18 + _tmp6;
  const Scalar _tmp61 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(-110.0);
  const Scalar _tmp63 = std::pow(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp62, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp64 = _tmp59 * _tmp63;
  const Scalar _tmp65 = _tmp41 * _tmp64;
  const Scalar _tmp66 = -_tmp56 * _tmp64 + _tmp65;
  const Scalar _tmp67 = _tmp62 * _tmp63;
  const Scalar _tmp68 = _tmp49 * _tmp53;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp64 * _tmp68 - _tmp67);
  const Scalar _tmp70 = _tmp68 * _tmp69;
  const Scalar _tmp71 = _tmp56 * _tmp67 - _tmp65 * _tmp68;
  const Scalar _tmp72 = _tmp41 * _tmp68 + _tmp70 * _tmp71;
  const Scalar _tmp73 = Scalar(1.0) * _tmp46;
  const Scalar _tmp74 = -_tmp73;
  const Scalar _tmp75 = Scalar(1.0) / (_tmp60 + _tmp74);
  const Scalar _tmp76 = Scalar(1.0) * _tmp43;
  const Scalar _tmp77 = _tmp75 * (-_tmp57 + _tmp76);
  const Scalar _tmp78 = -_tmp41 + _tmp66 * _tmp70 - _tmp72 * _tmp77;
  const Scalar _tmp79 = _tmp45 + _tmp7;
  const Scalar _tmp80 = _tmp79 + position_vector(1, 0);
  const Scalar _tmp81 = _tmp80 + Scalar(110.0);
  const Scalar _tmp82 = _tmp22 + _tmp42;
  const Scalar _tmp83 = _tmp82 + position_vector(0, 0);
  const Scalar _tmp84 = _tmp83 + Scalar(-125.0);
  const Scalar _tmp85 = std::pow(Scalar(std::pow(_tmp81, Scalar(2)) + std::pow(_tmp84, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp86 = _tmp81 * _tmp85;
  const Scalar _tmp87 = _tmp84 * _tmp85;
  const Scalar _tmp88 = _tmp68 * _tmp87 - _tmp86;
  const Scalar _tmp89 = _tmp69 * _tmp88;
  const Scalar _tmp90 = _tmp34 + _tmp38;
  const Scalar _tmp91 = _tmp41 * _tmp87;
  const Scalar _tmp92 = -_tmp68 * _tmp91 - _tmp71 * _tmp89 + _tmp86 * _tmp90;
  const Scalar _tmp93 = -_tmp66 * _tmp89 - _tmp77 * _tmp92 - _tmp87 * _tmp90 + _tmp91;
  const Scalar _tmp94 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp95 = _tmp55 * _tmp64 - _tmp57 * _tmp67 + _tmp60 * _tmp64;
  const Scalar _tmp96 = _tmp55 * _tmp87 + _tmp79 * _tmp87 - _tmp82 * _tmp86 - _tmp89 * _tmp95;
  const Scalar _tmp97 = _tmp94 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp93 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (-_tmp55 + _tmp70 * _tmp95 - _tmp78 * _tmp97);
  const Scalar _tmp101 = _tmp100 + _tmp78;
  const Scalar _tmp102 = _tmp87 * _tmp94;
  const Scalar _tmp103 = _tmp88 * _tmp94;
  const Scalar _tmp104 = -_tmp101 * _tmp103 - _tmp68;
  const Scalar _tmp105 = _tmp64 * _tmp69;
  const Scalar _tmp106 = _tmp31 + Scalar(125.0);
  const Scalar _tmp107 = _tmp20 + Scalar(110.0);
  const Scalar _tmp108 =
      std::pow(Scalar(std::pow(_tmp106, Scalar(2)) + std::pow(_tmp107, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp109 = _tmp106 * _tmp108;
  const Scalar _tmp110 = _tmp109 * fh1;
  const Scalar _tmp111 = Scalar(1.0) * _tmp98;
  const Scalar _tmp112 = Scalar(1.0) * _tmp69;
  const Scalar _tmp113 = _tmp112 * _tmp88 * _tmp98;
  const Scalar _tmp114 = _tmp107 * _tmp108;
  const Scalar _tmp115 = fh1 * (-_tmp109 * _tmp19 + _tmp114 * _tmp30);
  const Scalar _tmp116 = _tmp112 * _tmp71;
  const Scalar _tmp117 = -_tmp112 * _tmp66 + _tmp116 * _tmp77;
  const Scalar _tmp118 = _tmp99 * (-_tmp112 * _tmp95 - _tmp117 * _tmp97);
  const Scalar _tmp119 = _tmp117 + _tmp118;
  const Scalar _tmp120 = -_tmp103 * _tmp119 + Scalar(1.0);
  const Scalar _tmp121 = _tmp114 * fh1;
  const Scalar _tmp122 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp123 = _tmp73 * _tmp77 + _tmp76;
  const Scalar _tmp124 = 0;
  const Scalar _tmp125 = _tmp124 * _tmp94;
  const Scalar _tmp126 = -_tmp110 * _tmp54 * (_tmp101 * _tmp102 + _tmp104 * _tmp105 + Scalar(1.0)) -
                         _tmp115 * _tmp54 * (_tmp111 * _tmp87 - _tmp113 * _tmp64) -
                         _tmp121 * _tmp54 * (_tmp102 * _tmp119 + _tmp105 * _tmp120) -
                         _tmp122 * _tmp54 * (-_tmp125 * _tmp64 * _tmp89 + _tmp125 * _tmp87);
  const Scalar _tmp127 = Scalar(1.0) / (_tmp126);
  const Scalar _tmp128 = _tmp74 + _tmp79;
  const Scalar _tmp129 = _tmp128 * _tmp77;
  const Scalar _tmp130 = Scalar(1.0) / (-_tmp129 + _tmp76 - _tmp82);
  const Scalar _tmp131 = Scalar(1.0) * _tmp130;
  const Scalar _tmp132 = _tmp131 * _tmp99;
  const Scalar _tmp133 = -_tmp111 * _tmp92 + _tmp128 * _tmp132;
  const Scalar _tmp134 = Scalar(1.0) * _tmp75;
  const Scalar _tmp135 = _tmp92 * _tmp94;
  const Scalar _tmp136 = _tmp128 * _tmp130;
  const Scalar _tmp137 = _tmp100 * _tmp136 - _tmp101 * _tmp135 + _tmp72;
  const Scalar _tmp138 = _tmp128 * _tmp75;
  const Scalar _tmp139 = _tmp39 * fh1;
  const Scalar _tmp140 = _tmp109 * _tmp139 + Scalar(40.024799999999999) * _tmp27 + _tmp30 * fv1;
  const Scalar _tmp141 = -_tmp116 + _tmp118 * _tmp136 - _tmp119 * _tmp135;
  const Scalar _tmp142 = _tmp123 * _tmp130;
  const Scalar _tmp143 = _tmp75 * (-_tmp124 * _tmp135 - _tmp128 * _tmp142 + _tmp74);
  const Scalar _tmp144 = _tmp131 * _tmp77;
  const Scalar _tmp145 = _tmp75 * (_tmp129 * _tmp131 + Scalar(1.0));
  const Scalar _tmp146 = -_tmp114 * _tmp139 - Scalar(40.024799999999999) * _tmp16 - _tmp19 * fv1;
  const Scalar _tmp147 =
      std::asinh(_tmp127 * (Scalar(1.0) * _tmp110 * (_tmp100 * _tmp131 - _tmp134 * _tmp137) +
                            Scalar(1.0) * _tmp115 * (_tmp132 - _tmp133 * _tmp134) +
                            Scalar(1.0) * _tmp121 * (_tmp118 * _tmp131 - _tmp134 * _tmp141) +
                            Scalar(1.0) * _tmp122 *
                                (-_tmp123 * _tmp131 - Scalar(1.0) * _tmp143 + Scalar(1.0)) +
                            Scalar(1.0) * _tmp140 * (_tmp131 * _tmp138 - _tmp131) +
                            Scalar(1.0) * _tmp146 * (_tmp144 - Scalar(1.0) * _tmp145)));
  const Scalar _tmp148 = Scalar(1.4083112389913199) * _tmp126;
  const Scalar _tmp149 = _tmp122 * _tmp125;
  const Scalar _tmp150 = _tmp104 * _tmp110 * _tmp69 - _tmp113 * _tmp115 +
                         _tmp120 * _tmp121 * _tmp69 - _tmp149 * _tmp89;
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 = _tmp131 * _tmp140;
  const Scalar _tmp153 =
      std::asinh(_tmp151 * (_tmp110 * _tmp137 * _tmp75 + _tmp115 * _tmp133 * _tmp75 +
                            _tmp121 * _tmp141 * _tmp75 + _tmp122 * _tmp143 - _tmp138 * _tmp152 +
                            _tmp145 * _tmp146));
  const Scalar _tmp154 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp61), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp58 - 1), Scalar(2));
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp150;
  const Scalar _tmp156 =
      _tmp101 * _tmp110 * _tmp94 + _tmp111 * _tmp115 + _tmp119 * _tmp121 * _tmp94 + _tmp149;
  const Scalar _tmp157 = Scalar(1.0) / (_tmp156);
  const Scalar _tmp158 = std::asinh(_tmp157 * (-_tmp100 * _tmp110 * _tmp130 - _tmp115 * _tmp132 -
                                               _tmp118 * _tmp121 * _tmp130 + _tmp122 * _tmp142 -
                                               _tmp144 * _tmp146 + _tmp152));
  const Scalar _tmp159 = Scalar(1.4083112389913199) * _tmp156;
  const Scalar _tmp160 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp83), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp80 - 1), Scalar(2));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
          (-std::sinh(Scalar(1.0) * _tmp1) -
           std::sinh(Scalar(0.71007031138673404) * _tmp0 * (-_tmp1 * _tmp33 - std::sqrt(_tmp32)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp32 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp39 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp148 * (-std::sinh(Scalar(1.0) * _tmp147) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp127 *
                           (-_tmp147 * _tmp148 - std::sqrt(_tmp48)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp48 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp41 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp155 * (-std::sinh(Scalar(1.0) * _tmp153) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp151 *
                           (-_tmp153 * _tmp155 - std::sqrt(_tmp154)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp154 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp56 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp159 * (-std::sinh(Scalar(1.0) * _tmp158) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp157 *
                           (-_tmp158 * _tmp159 - std::sqrt(_tmp160)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp160 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp90 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
