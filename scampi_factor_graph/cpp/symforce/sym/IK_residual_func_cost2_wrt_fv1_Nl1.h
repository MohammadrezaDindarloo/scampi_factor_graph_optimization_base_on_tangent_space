// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot, const Scalar p_init0,
    const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x, const Scalar rot_init_y,
    const Scalar rot_init_z, const Scalar rot_init_w, const Scalar epsilon) {
  // Total ops: 593

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (188)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp10 = 2 * _tmp3 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                        2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp12 = _tmp11 * _tmp5;
  const Scalar _tmp13 = _tmp10 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = 2 * _tmp5;
  const Scalar _tmp16 = _tmp15 * _tmp9;
  const Scalar _tmp17 = _tmp11 * _tmp3;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp14 - _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp8;
  const Scalar _tmp21 = _tmp20 + p_init0;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = -2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp4 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp26 = _tmp15 * _tmp3;
  const Scalar _tmp27 = _tmp11 * _tmp9;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = -_tmp29;
  const Scalar _tmp31 = -_tmp25 + _tmp30;
  const Scalar _tmp32 = _tmp23 + _tmp31;
  const Scalar _tmp33 = _tmp32 + p_init1;
  const Scalar _tmp34 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp35 = _tmp19 + _tmp7;
  const Scalar _tmp36 = _tmp35 + p_init0;
  const Scalar _tmp37 = _tmp22 + _tmp31;
  const Scalar _tmp38 = _tmp37 + p_init1;
  const Scalar _tmp39 = Scalar(1.0) * _tmp35;
  const Scalar _tmp40 = _tmp14 + _tmp18;
  const Scalar _tmp41 = _tmp40 + _tmp7;
  const Scalar _tmp42 = Scalar(1.0) * _tmp37;
  const Scalar _tmp43 = -_tmp42;
  const Scalar _tmp44 = _tmp22 + _tmp25;
  const Scalar _tmp45 = _tmp30 + _tmp44;
  const Scalar _tmp46 = _tmp43 + _tmp45;
  const Scalar _tmp47 = _tmp23 + _tmp25 + _tmp30;
  const Scalar _tmp48 = Scalar(1.0) / (_tmp43 + _tmp47);
  const Scalar _tmp49 = _tmp40 + _tmp8;
  const Scalar _tmp50 = _tmp48 * (_tmp39 - _tmp49);
  const Scalar _tmp51 = _tmp46 * _tmp50;
  const Scalar _tmp52 = Scalar(1.0) / (_tmp39 - _tmp41 - _tmp51);
  const Scalar _tmp53 = Scalar(1.0) * _tmp52;
  const Scalar _tmp54 = _tmp47 + p_init1;
  const Scalar _tmp55 = _tmp54 + Scalar(-4.8333311099999996);
  const Scalar _tmp56 = _tmp49 + p_init0;
  const Scalar _tmp57 = _tmp56 + Scalar(1.79662371);
  const Scalar _tmp58 = std::pow(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp57, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp59 = _tmp55 * _tmp58;
  const Scalar _tmp60 = _tmp57 * _tmp58;
  const Scalar _tmp61 = _tmp36 + Scalar(-2.5202214700000001);
  const Scalar _tmp62 = _tmp38 + Scalar(8.3888750099999996);
  const Scalar _tmp63 =
      std::sqrt(Scalar(std::pow(_tmp61, Scalar(2)) + std::pow(_tmp62, Scalar(2))));
  const Scalar _tmp64 = Scalar(1.0) / (_tmp63);
  const Scalar _tmp65 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp66 = _tmp63 * _tmp65;
  const Scalar _tmp67 = _tmp66 * (_tmp35 * _tmp62 * _tmp64 - _tmp37 * _tmp61 * _tmp64);
  const Scalar _tmp68 = _tmp47 * _tmp60 - _tmp49 * _tmp59 + _tmp60 * _tmp67;
  const Scalar _tmp69 = _tmp62 * _tmp65;
  const Scalar _tmp70 = Scalar(1.0) / (-_tmp59 + _tmp60 * _tmp69);
  const Scalar _tmp71 = _tmp69 * _tmp70;
  const Scalar _tmp72 = Scalar(0.20999999999999999) * _tmp26 + Scalar(0.20999999999999999) * _tmp27;
  const Scalar _tmp73 = -_tmp72;
  const Scalar _tmp74 =
      -Scalar(0.010999999999999999) * _tmp24 - Scalar(0.010999999999999999) * _tmp6;
  const Scalar _tmp75 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp76 = _tmp74 + _tmp75;
  const Scalar _tmp77 = _tmp73 + _tmp76;
  const Scalar _tmp78 = _tmp69 * _tmp77;
  const Scalar _tmp79 = _tmp74 - _tmp75;
  const Scalar _tmp80 = _tmp72 + _tmp79;
  const Scalar _tmp81 = _tmp59 * _tmp80 - _tmp60 * _tmp78;
  const Scalar _tmp82 = _tmp71 * _tmp81 + _tmp78;
  const Scalar _tmp83 = _tmp60 * _tmp77 - _tmp60 * _tmp80;
  const Scalar _tmp84 = -_tmp50 * _tmp82 + _tmp71 * _tmp83 - _tmp77;
  const Scalar _tmp85 = _tmp41 + p_init0;
  const Scalar _tmp86 = _tmp85 + Scalar(-2.71799795);
  const Scalar _tmp87 = _tmp45 + p_init1;
  const Scalar _tmp88 = _tmp87 + Scalar(-4.7752063900000001);
  const Scalar _tmp89 = std::pow(Scalar(std::pow(_tmp86, Scalar(2)) + std::pow(_tmp88, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp90 = _tmp86 * _tmp89;
  const Scalar _tmp91 = _tmp88 * _tmp89;
  const Scalar _tmp92 = _tmp69 * _tmp90 - _tmp91;
  const Scalar _tmp93 = _tmp70 * _tmp92;
  const Scalar _tmp94 = -_tmp41 * _tmp91 + _tmp45 * _tmp90 + _tmp67 * _tmp90 - _tmp68 * _tmp93;
  const Scalar _tmp95 = _tmp72 + _tmp76;
  const Scalar _tmp96 = -_tmp78 * _tmp90 - _tmp81 * _tmp93 + _tmp91 * _tmp95;
  const Scalar _tmp97 = -_tmp50 * _tmp96 + _tmp77 * _tmp90 - _tmp83 * _tmp93 - _tmp90 * _tmp95;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp99 = _tmp94 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp101 = _tmp100 * _tmp97;
  const Scalar _tmp102 = _tmp101 * (-_tmp67 + _tmp68 * _tmp71 - _tmp84 * _tmp99);
  const Scalar _tmp103 = _tmp98 * (_tmp102 + _tmp84);
  const Scalar _tmp104 = _tmp46 * _tmp52;
  const Scalar _tmp105 = _tmp102 * _tmp104 - _tmp103 * _tmp96 + _tmp82;
  const Scalar _tmp106 = Scalar(1.0) * _tmp48;
  const Scalar _tmp107 = _tmp33 + Scalar(8.3196563700000006);
  const Scalar _tmp108 = _tmp21 + Scalar(1.9874742000000001);
  const Scalar _tmp109 =
      std::pow(Scalar(std::pow(_tmp107, Scalar(2)) + std::pow(_tmp108, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp110 = _tmp108 * _tmp109;
  const Scalar _tmp111 = _tmp110 * fh1;
  const Scalar _tmp112 = fh1 * (_tmp73 + _tmp79);
  const Scalar _tmp113 = _tmp110 * _tmp112 + Scalar(3.29616) * _tmp13 + _tmp20 * fv1;
  const Scalar _tmp114 = _tmp46 * _tmp53;
  const Scalar _tmp115 = Scalar(1.0) * _tmp114 * _tmp48 - Scalar(1.0) * _tmp53;
  const Scalar _tmp116 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp117 = _tmp39 + _tmp42 * _tmp50;
  const Scalar _tmp118 = _tmp117 * _tmp52;
  const Scalar _tmp119 = 0;
  const Scalar _tmp120 = _tmp48 * (-_tmp118 * _tmp46 - _tmp119 * _tmp96 + _tmp43);
  const Scalar _tmp121 = -Scalar(1.0) * _tmp118 - Scalar(1.0) * _tmp120 + Scalar(1.0);
  const Scalar _tmp122 = _tmp107 * _tmp109;
  const Scalar _tmp123 = -_tmp112 * _tmp122 - Scalar(3.29616) * _tmp28 - _tmp32 * fv1;
  const Scalar _tmp124 = _tmp48 * (_tmp51 * _tmp53 + Scalar(1.0));
  const Scalar _tmp125 = _tmp50 * _tmp53;
  const Scalar _tmp126 = -Scalar(1.0) * _tmp124 + Scalar(1.0) * _tmp125;
  const Scalar _tmp127 = Scalar(1.0) * _tmp70;
  const Scalar _tmp128 = _tmp127 * _tmp81;
  const Scalar _tmp129 = -_tmp127 * _tmp83 + _tmp128 * _tmp50;
  const Scalar _tmp130 = _tmp101 * (-_tmp127 * _tmp68 - _tmp129 * _tmp99);
  const Scalar _tmp131 = _tmp98 * (_tmp129 + _tmp130);
  const Scalar _tmp132 = _tmp104 * _tmp130 - _tmp128 - _tmp131 * _tmp96;
  const Scalar _tmp133 = _tmp122 * fh1;
  const Scalar _tmp134 = _tmp101 * _tmp53;
  const Scalar _tmp135 = Scalar(1.0) * _tmp100;
  const Scalar _tmp136 = _tmp101 * _tmp114 - _tmp135 * _tmp96;
  const Scalar _tmp137 = fh1 * (-_tmp110 * _tmp32 + _tmp122 * _tmp20);
  const Scalar _tmp138 = Scalar(1.0) * _tmp111 * (_tmp102 * _tmp53 - _tmp105 * _tmp106) +
                         _tmp113 * _tmp115 + _tmp116 * _tmp121 + _tmp123 * _tmp126 +
                         Scalar(1.0) * _tmp133 * (-_tmp106 * _tmp132 + _tmp130 * _tmp53) +
                         Scalar(1.0) * _tmp137 * (-_tmp106 * _tmp136 + _tmp134);
  const Scalar _tmp139 = -_tmp131 * _tmp92 + Scalar(1.0);
  const Scalar _tmp140 = _tmp60 * _tmp70;
  const Scalar _tmp141 = _tmp119 * _tmp93;
  const Scalar _tmp142 = _tmp66 * (_tmp119 * _tmp90 - _tmp141 * _tmp60);
  const Scalar _tmp143 = -_tmp103 * _tmp92 - _tmp69;
  const Scalar _tmp144 = -_tmp111 * _tmp66 * (_tmp103 * _tmp90 + _tmp140 * _tmp143 + Scalar(1.0)) -
                         _tmp116 * _tmp142 -
                         _tmp133 * _tmp66 * (_tmp131 * _tmp90 + _tmp139 * _tmp140) -
                         _tmp137 * _tmp66 * (-_tmp135 * _tmp60 * _tmp93 + _tmp135 * _tmp90);
  const Scalar _tmp145 = Scalar(1.0) / (_tmp144);
  const Scalar _tmp146 = std::asinh(_tmp138 * _tmp145);
  const Scalar _tmp147 = Scalar(9.6622558468725703) * _tmp144;
  const Scalar _tmp148 =
      -_tmp146 * _tmp147 -
      Scalar(8.3888750099999996) *
          std::sqrt(
              Scalar(Scalar(0.090254729040973036) *
                         std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp36), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp38 - 1), Scalar(2))));
  const Scalar _tmp149 = Scalar(0.1034955) * _tmp145;
  const Scalar _tmp150 = _tmp148 * _tmp149;
  const Scalar _tmp151 = std::pow(_tmp144, Scalar(-2));
  const Scalar _tmp152 = _tmp142 * _tmp151;
  const Scalar _tmp153 = _tmp29 + _tmp44;
  const Scalar _tmp154 =
      (-_tmp138 * _tmp152 + _tmp145 * (_tmp115 * _tmp20 - _tmp121 + _tmp126 * _tmp153)) /
      std::sqrt(Scalar(std::pow(_tmp138, Scalar(2)) * _tmp151 + 1));
  const Scalar _tmp155 = Scalar(9.6622558468725703) * _tmp142;
  const Scalar _tmp156 = Scalar(1.0) * _tmp146;
  const Scalar _tmp157 = _tmp135 * _tmp137;
  const Scalar _tmp158 = _tmp116 * _tmp119;
  const Scalar _tmp159 =
      _tmp111 * _tmp143 * _tmp70 + _tmp133 * _tmp139 * _tmp70 - _tmp157 * _tmp93 - _tmp158 * _tmp93;
  const Scalar _tmp160 = Scalar(1.0) / (_tmp159);
  const Scalar _tmp161 = _tmp113 * _tmp53;
  const Scalar _tmp162 = _tmp46 * _tmp48;
  const Scalar _tmp163 = _tmp105 * _tmp111 * _tmp48 + _tmp116 * _tmp120 + _tmp123 * _tmp124 +
                         _tmp132 * _tmp133 * _tmp48 + _tmp136 * _tmp137 * _tmp48 -
                         _tmp161 * _tmp162;
  const Scalar _tmp164 = std::asinh(_tmp160 * _tmp163);
  const Scalar _tmp165 = Scalar(9.6622558468725703) * _tmp159;
  const Scalar _tmp166 =
      -_tmp164 * _tmp165 -
      Scalar(4.8333311099999996) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp54), Scalar(2)) +
                     Scalar(0.13817235445745474) *
                         std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp56 - 1), Scalar(2))));
  const Scalar _tmp167 = Scalar(0.1034955) * _tmp160;
  const Scalar _tmp168 = _tmp166 * _tmp167;
  const Scalar _tmp169 = Scalar(1.0) * _tmp164;
  const Scalar _tmp170 = Scalar(9.6622558468725703) * _tmp119;
  const Scalar _tmp171 = _tmp170 * _tmp93;
  const Scalar _tmp172 = std::pow(_tmp159, Scalar(-2));
  const Scalar _tmp173 = _tmp141 * _tmp172;
  const Scalar _tmp174 = _tmp20 * _tmp53;
  const Scalar _tmp175 =
      (_tmp160 * (-_tmp120 + _tmp124 * _tmp153 - _tmp162 * _tmp174) - _tmp163 * _tmp173) /
      std::sqrt(Scalar(std::pow(_tmp163, Scalar(2)) * _tmp172 + 1));
  const Scalar _tmp176 = _tmp103 * _tmp111 + _tmp131 * _tmp133 + _tmp157 + _tmp158;
  const Scalar _tmp177 = Scalar(1.0) / (_tmp176);
  const Scalar _tmp178 = -_tmp102 * _tmp111 * _tmp52 + _tmp116 * _tmp118 - _tmp123 * _tmp125 -
                         _tmp130 * _tmp133 * _tmp52 - _tmp134 * _tmp137 + _tmp161;
  const Scalar _tmp179 = std::asinh(_tmp177 * _tmp178);
  const Scalar _tmp180 = Scalar(1.0) * _tmp179;
  const Scalar _tmp181 = Scalar(9.6622558468725703) * _tmp176;
  const Scalar _tmp182 =
      -_tmp179 * _tmp181 -
      Scalar(4.7752063900000001) *
          std::sqrt(
              Scalar(Scalar(0.32397683292140877) *
                         std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp85), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp87), Scalar(2))));
  const Scalar _tmp183 = Scalar(0.1034955) * _tmp177;
  const Scalar _tmp184 = _tmp182 * _tmp183;
  const Scalar _tmp185 = std::pow(_tmp176, Scalar(-2));
  const Scalar _tmp186 = _tmp119 * _tmp185;
  const Scalar _tmp187 = (_tmp177 * (-_tmp118 - _tmp125 * _tmp153 + _tmp174) + _tmp178 * _tmp186) /
                         std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp185 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp34 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 *
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp1 * _tmp34 -
                Scalar(8.3196563700000006) *
                    std::sqrt(Scalar(
                        Scalar(0.057067943376852184) *
                            std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp21 - 1), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp33 - 1), Scalar(2)))))));
  _res(1, 0) = _tmp147 * (-Scalar(1.0) * _tmp154 * std::cosh(_tmp156) -
                          (-Scalar(0.1034955) * _tmp148 * _tmp152 +
                           _tmp149 * (-_tmp146 * _tmp155 - _tmp147 * _tmp154)) *
                              std::cosh(_tmp150)) +
               _tmp155 * (-std::sinh(_tmp150) - std::sinh(_tmp156));
  _res(2, 0) = _tmp165 * (-Scalar(1.0) * _tmp175 * std::cosh(_tmp169) -
                          (-Scalar(0.1034955) * _tmp166 * _tmp173 +
                           _tmp167 * (-_tmp164 * _tmp171 - _tmp165 * _tmp175)) *
                              std::cosh(_tmp168)) +
               _tmp171 * (-std::sinh(_tmp168) - std::sinh(_tmp169));
  _res(3, 0) = -_tmp170 * (-std::sinh(_tmp180) - std::sinh(_tmp184)) +
               _tmp181 * (-Scalar(1.0) * _tmp187 * std::cosh(_tmp180) -
                          (Scalar(0.1034955) * _tmp182 * _tmp186 +
                           _tmp183 * (_tmp170 * _tmp179 - _tmp181 * _tmp187)) *
                              std::cosh(_tmp184));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
