// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fh1_Nl22
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFh1Nl22(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 648

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (213)
  const Scalar _tmp0 = std::pow(fh1, Scalar(-2));
  const Scalar _tmp1 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp8 = 2 * _tmp7;
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = 2 * _tmp3;
  const Scalar _tmp12 = _tmp10 * _tmp11;
  const Scalar _tmp13 = _tmp12 + _tmp9;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp3 * _tmp8;
  const Scalar _tmp16 = 2 * _tmp1 * _tmp10;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp6;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp21 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp24 = _tmp1 * _tmp11;
  const Scalar _tmp25 = _tmp10 * _tmp8;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp23 + _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(1, 0);
  const Scalar _tmp31 = Scalar(1.0) / (fh1);
  const Scalar _tmp32 = _tmp31 * fv1;
  const Scalar _tmp33 = std::asinh(_tmp32);
  const Scalar _tmp34 = Scalar(1.4083112389913199) * _tmp33;
  const Scalar _tmp35 =
      -_tmp34 * fh1 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp30), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp20 - 1), Scalar(2))));
  const Scalar _tmp36 = Scalar(0.71007031138673404) * _tmp31;
  const Scalar _tmp37 = _tmp35 * _tmp36;
  const Scalar _tmp38 =
      std::pow(Scalar(_tmp0 * std::pow(fv1, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp39 = Scalar(1.0) * _tmp33;
  const Scalar _tmp40 = _tmp18 + _tmp5;
  const Scalar _tmp41 = _tmp40 + position_vector(0, 0);
  const Scalar _tmp42 = _tmp23 + _tmp27;
  const Scalar _tmp43 = _tmp22 + _tmp42;
  const Scalar _tmp44 = _tmp43 + position_vector(1, 0);
  const Scalar _tmp45 = _tmp30 + Scalar(-110.0);
  const Scalar _tmp46 = _tmp20 + Scalar(125.0);
  const Scalar _tmp47 = std::pow(Scalar(std::pow(_tmp45, Scalar(2)) + std::pow(_tmp46, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp48 = _tmp45 * _tmp47;
  const Scalar _tmp49 = _tmp46 * _tmp47;
  const Scalar _tmp50 = _tmp19 * _tmp48 - _tmp29 * _tmp49;
  const Scalar _tmp51 = -_tmp22;
  const Scalar _tmp52 = _tmp42 + _tmp51;
  const Scalar _tmp53 = _tmp52 + position_vector(1, 0);
  const Scalar _tmp54 = _tmp53 + Scalar(110.0);
  const Scalar _tmp55 = _tmp14 - _tmp17;
  const Scalar _tmp56 = _tmp5 + _tmp55;
  const Scalar _tmp57 = _tmp56 + position_vector(0, 0);
  const Scalar _tmp58 = _tmp57 + Scalar(-125.0);
  const Scalar _tmp59 = std::pow(Scalar(std::pow(_tmp54, Scalar(2)) + std::pow(_tmp58, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp60 = _tmp58 * _tmp59;
  const Scalar _tmp61 = _tmp44 + Scalar(-110.0);
  const Scalar _tmp62 = _tmp41 + Scalar(-125.0);
  const Scalar _tmp63 =
      std::sqrt(Scalar(std::pow(_tmp61, Scalar(2)) + std::pow(_tmp62, Scalar(2))));
  const Scalar _tmp64 = Scalar(1.0) / (_tmp63);
  const Scalar _tmp65 = Scalar(1.0) / (_tmp62);
  const Scalar _tmp66 = _tmp63 * _tmp65;
  const Scalar _tmp67 = _tmp66 * (_tmp40 * _tmp61 * _tmp64 - _tmp43 * _tmp62 * _tmp64);
  const Scalar _tmp68 = _tmp28 + _tmp51;
  const Scalar _tmp69 = _tmp68 + position_vector(1, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(110.0);
  const Scalar _tmp71 = _tmp55 + _tmp6;
  const Scalar _tmp72 = _tmp71 + position_vector(0, 0);
  const Scalar _tmp73 = _tmp72 + Scalar(125.0);
  const Scalar _tmp74 = std::pow(Scalar(std::pow(_tmp70, Scalar(2)) + std::pow(_tmp73, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp75 = _tmp73 * _tmp74;
  const Scalar _tmp76 = _tmp70 * _tmp74;
  const Scalar _tmp77 = _tmp67 * _tmp75 + _tmp68 * _tmp75 - _tmp71 * _tmp76;
  const Scalar _tmp78 = _tmp61 * _tmp65;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp75 * _tmp78 - _tmp76);
  const Scalar _tmp80 = _tmp54 * _tmp59;
  const Scalar _tmp81 = _tmp60 * _tmp78 - _tmp80;
  const Scalar _tmp82 = _tmp79 * _tmp81;
  const Scalar _tmp83 = _tmp52 * _tmp60 - _tmp56 * _tmp80 + _tmp60 * _tmp67 - _tmp77 * _tmp82;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp85 = Scalar(1.0) * _tmp84;
  const Scalar _tmp86 = _tmp75 * _tmp82;
  const Scalar _tmp87 = _tmp50 * _tmp66 * (_tmp60 * _tmp85 - _tmp85 * _tmp86);
  const Scalar _tmp88 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp89 = -Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp90 =
      -Scalar(0.010999999999999999) * _tmp21 - Scalar(0.010999999999999999) * _tmp4;
  const Scalar _tmp91 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp92 = _tmp90 - _tmp91;
  const Scalar _tmp93 = _tmp89 + _tmp92;
  const Scalar _tmp94 = -_tmp89;
  const Scalar _tmp95 = _tmp92 + _tmp94;
  const Scalar _tmp96 = _tmp90 + _tmp91;
  const Scalar _tmp97 = _tmp89 + _tmp96;
  const Scalar _tmp98 = _tmp75 * _tmp97;
  const Scalar _tmp99 = _tmp76 * _tmp95 - _tmp78 * _tmp98;
  const Scalar _tmp100 = _tmp60 * _tmp97;
  const Scalar _tmp101 = -_tmp100 * _tmp78 + _tmp80 * _tmp93 - _tmp82 * _tmp99;
  const Scalar _tmp102 = Scalar(1.0) * _tmp43;
  const Scalar _tmp103 = -_tmp102;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103 + _tmp68);
  const Scalar _tmp105 = Scalar(1.0) * _tmp40;
  const Scalar _tmp106 = _tmp104 * (_tmp105 - _tmp71);
  const Scalar _tmp107 = -_tmp75 * _tmp95 + _tmp98;
  const Scalar _tmp108 = _tmp100 - _tmp101 * _tmp106 - _tmp107 * _tmp82 - _tmp60 * _tmp93;
  const Scalar _tmp109 = Scalar(1.0) / (_tmp108);
  const Scalar _tmp110 = _tmp102 * _tmp106 + _tmp105;
  const Scalar _tmp111 = 0;
  const Scalar _tmp112 = _tmp78 * _tmp79;
  const Scalar _tmp113 = _tmp112 * _tmp99 + _tmp78 * _tmp97;
  const Scalar _tmp114 = -_tmp106 * _tmp113 + _tmp107 * _tmp112 - _tmp97;
  const Scalar _tmp115 = _tmp109 * _tmp83;
  const Scalar _tmp116 = _tmp108 * _tmp84;
  const Scalar _tmp117 = _tmp116 * (_tmp112 * _tmp77 - _tmp114 * _tmp115 - _tmp67);
  const Scalar _tmp118 = _tmp109 * (_tmp114 + _tmp117);
  const Scalar _tmp119 = _tmp79 * (-_tmp118 * _tmp81 - _tmp78);
  const Scalar _tmp120 = _tmp49 * _tmp66 * (_tmp118 * _tmp60 + _tmp119 * _tmp75 + Scalar(1.0));
  const Scalar _tmp121 = Scalar(1.0) * _tmp79;
  const Scalar _tmp122 = _tmp121 * _tmp99;
  const Scalar _tmp123 = _tmp106 * _tmp122 - _tmp107 * _tmp121;
  const Scalar _tmp124 = _tmp116 * (-_tmp115 * _tmp123 - _tmp121 * _tmp77);
  const Scalar _tmp125 = _tmp109 * (_tmp123 + _tmp124);
  const Scalar _tmp126 = _tmp79 * (-_tmp125 * _tmp81 + Scalar(1.0));
  const Scalar _tmp127 = _tmp48 * _tmp66 * (_tmp125 * _tmp60 + _tmp126 * _tmp75);
  const Scalar _tmp128 = -_tmp120 * fh1 - _tmp127 * fh1 -
                         _tmp66 * _tmp88 * (_tmp111 * _tmp60 - _tmp111 * _tmp86) - _tmp87 * fh1;
  const Scalar _tmp129 = _tmp103 + _tmp52;
  const Scalar _tmp130 = _tmp106 * _tmp129;
  const Scalar _tmp131 = Scalar(1.0) / (_tmp105 - _tmp130 - _tmp56);
  const Scalar _tmp132 = Scalar(1.0) * _tmp131;
  const Scalar _tmp133 = _tmp116 * _tmp132;
  const Scalar _tmp134 = _tmp104 * (-_tmp101 * _tmp85 + _tmp129 * _tmp133);
  const Scalar _tmp135 = Scalar(1.0) * _tmp50;
  const Scalar _tmp136 = _tmp135 * (_tmp133 - Scalar(1.0) * _tmp134);
  const Scalar _tmp137 = _tmp94 + _tmp96;
  const Scalar _tmp138 = _tmp137 * fh1;
  const Scalar _tmp139 = -_tmp138 * _tmp48 - Scalar(40.024799999999999) * _tmp26 - _tmp29 * fv1;
  const Scalar _tmp140 = _tmp130 * _tmp132 + Scalar(1.0);
  const Scalar _tmp141 = Scalar(1.0) * _tmp104;
  const Scalar _tmp142 = _tmp106 * _tmp132;
  const Scalar _tmp143 = -Scalar(1.0) * _tmp140 * _tmp141 + Scalar(1.0) * _tmp142;
  const Scalar _tmp144 = Scalar(40.024799999999999) * _tmp13 + _tmp138 * _tmp49 + _tmp19 * fv1;
  const Scalar _tmp145 = _tmp104 * _tmp129;
  const Scalar _tmp146 = _tmp132 * _tmp145;
  const Scalar _tmp147 = -Scalar(1.0) * _tmp132 + Scalar(1.0) * _tmp146;
  const Scalar _tmp148 = _tmp110 * _tmp131;
  const Scalar _tmp149 = -_tmp101 * _tmp111 + _tmp103 - _tmp129 * _tmp148;
  const Scalar _tmp150 = _tmp129 * _tmp131;
  const Scalar _tmp151 = -_tmp101 * _tmp125 - _tmp122 + _tmp124 * _tmp150;
  const Scalar _tmp152 = Scalar(1.0) * _tmp48 * (_tmp124 * _tmp132 - _tmp141 * _tmp151);
  const Scalar _tmp153 = -_tmp101 * _tmp118 + _tmp113 + _tmp117 * _tmp150;
  const Scalar _tmp154 = Scalar(1.0) * _tmp49 * (_tmp117 * _tmp132 - _tmp141 * _tmp153);
  const Scalar _tmp155 =
      _tmp136 * fh1 + _tmp139 * _tmp143 + _tmp144 * _tmp147 + _tmp152 * fh1 + _tmp154 * fh1 +
      Scalar(1.0) * _tmp88 * (-_tmp110 * _tmp132 - _tmp141 * _tmp149 + Scalar(1.0));
  const Scalar _tmp156 = Scalar(1.0) / (_tmp128);
  const Scalar _tmp157 = std::asinh(_tmp155 * _tmp156);
  const Scalar _tmp158 = Scalar(1.4083112389913199) * _tmp157;
  const Scalar _tmp159 =
      -_tmp128 * _tmp158 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp41), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp44), Scalar(2))));
  const Scalar _tmp160 = std::pow(_tmp128, Scalar(-2));
  const Scalar _tmp161 = -_tmp120 - _tmp127 - _tmp87;
  const Scalar _tmp162 = _tmp160 * _tmp161;
  const Scalar _tmp163 = Scalar(1.4083112389913199) * _tmp128;
  const Scalar _tmp164 = _tmp137 * _tmp49;
  const Scalar _tmp165 = _tmp137 * _tmp48;
  const Scalar _tmp166 = (-_tmp155 * _tmp162 + _tmp156 * (_tmp136 - _tmp143 * _tmp165 +
                                                          _tmp147 * _tmp164 + _tmp152 + _tmp154)) /
                         std::sqrt(Scalar(std::pow(_tmp155, Scalar(2)) * _tmp160 + 1));
  const Scalar _tmp167 = Scalar(0.71007031138673404) * _tmp156;
  const Scalar _tmp168 = _tmp159 * _tmp167;
  const Scalar _tmp169 = Scalar(1.0) * _tmp157;
  const Scalar _tmp170 = _tmp111 * _tmp88;
  const Scalar _tmp171 = _tmp135 * _tmp84;
  const Scalar _tmp172 = _tmp171 * fh1;
  const Scalar _tmp173 = _tmp126 * _tmp48;
  const Scalar _tmp174 = _tmp119 * _tmp49;
  const Scalar _tmp175 = -_tmp170 * _tmp82 - _tmp172 * _tmp82 + _tmp173 * fh1 + _tmp174 * fh1;
  const Scalar _tmp176 = Scalar(1.0) / (_tmp175);
  const Scalar _tmp177 = _tmp104 * _tmp151 * _tmp48;
  const Scalar _tmp178 = _tmp104 * _tmp153 * _tmp49;
  const Scalar _tmp179 = _tmp104 * _tmp140;
  const Scalar _tmp180 = _tmp134 * _tmp50;
  const Scalar _tmp181 = _tmp132 * _tmp144;
  const Scalar _tmp182 = _tmp104 * _tmp149 * _tmp88 + _tmp139 * _tmp179 - _tmp145 * _tmp181 +
                         _tmp177 * fh1 + _tmp178 * fh1 + _tmp180 * fh1;
  const Scalar _tmp183 = std::asinh(_tmp176 * _tmp182);
  const Scalar _tmp184 = Scalar(1.4083112389913199) * _tmp175;
  const Scalar _tmp185 =
      -_tmp183 * _tmp184 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp69 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp72 - 1), Scalar(2))));
  const Scalar _tmp186 = Scalar(0.71007031138673404) * _tmp176;
  const Scalar _tmp187 = _tmp185 * _tmp186;
  const Scalar _tmp188 = Scalar(1.0) * _tmp183;
  const Scalar _tmp189 = -_tmp171 * _tmp82 + _tmp173 + _tmp174;
  const Scalar _tmp190 = Scalar(1.4083112389913199) * _tmp189;
  const Scalar _tmp191 = std::pow(_tmp175, Scalar(-2));
  const Scalar _tmp192 = _tmp189 * _tmp191;
  const Scalar _tmp193 =
      (_tmp176 * (-_tmp146 * _tmp164 - _tmp165 * _tmp179 + _tmp177 + _tmp178 + _tmp180) -
       _tmp182 * _tmp192) /
      std::sqrt(Scalar(std::pow(_tmp182, Scalar(2)) * _tmp191 + 1));
  const Scalar _tmp194 = _tmp118 * _tmp49;
  const Scalar _tmp195 = _tmp125 * _tmp48;
  const Scalar _tmp196 = _tmp170 + _tmp172 + _tmp194 * fh1 + _tmp195 * fh1;
  const Scalar _tmp197 = Scalar(1.0) / (_tmp196);
  const Scalar _tmp198 = _tmp124 * _tmp131 * _tmp48;
  const Scalar _tmp199 = _tmp133 * _tmp50;
  const Scalar _tmp200 = _tmp117 * _tmp131 * _tmp49;
  const Scalar _tmp201 = -_tmp139 * _tmp142 + _tmp148 * _tmp88 + _tmp181 - _tmp198 * fh1 -
                         _tmp199 * fh1 - _tmp200 * fh1;
  const Scalar _tmp202 = std::asinh(_tmp197 * _tmp201);
  const Scalar _tmp203 = Scalar(1.0) * _tmp202;
  const Scalar _tmp204 = Scalar(1.4083112389913199) * _tmp196;
  const Scalar _tmp205 =
      -_tmp202 * _tmp204 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp57), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp53 - 1), Scalar(2))));
  const Scalar _tmp206 = Scalar(0.71007031138673404) * _tmp197;
  const Scalar _tmp207 = _tmp205 * _tmp206;
  const Scalar _tmp208 = _tmp171 + _tmp194 + _tmp195;
  const Scalar _tmp209 = Scalar(1.4083112389913199) * _tmp208;
  const Scalar _tmp210 = std::pow(_tmp196, Scalar(-2));
  const Scalar _tmp211 = _tmp208 * _tmp210;
  const Scalar _tmp212 =
      (_tmp197 * (_tmp132 * _tmp164 + _tmp142 * _tmp165 - _tmp198 - _tmp199 - _tmp200) -
       _tmp201 * _tmp211) /
      std::sqrt(Scalar(std::pow(_tmp201, Scalar(2)) * _tmp210 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = -Scalar(48.000000000000128) * _tmp31 -
               Scalar(1.4083112389913199) * fh1 *
                   (-Scalar(1.0) * _tmp0 * _tmp38 * fv1 * std::sinh(_tmp39) -
                    Scalar(34.083374946563197) * _tmp0 -
                    (-Scalar(0.71007031138673404) * _tmp0 * _tmp35 +
                     _tmp36 * (Scalar(1.4083112389913199) * _tmp32 * _tmp38 - _tmp34)) *
                        std::sinh(_tmp37)) +
               Scalar(1.4083112389913199) * std::cosh(_tmp37) -
               Scalar(1.4083112389913199) * std::cosh(_tmp39);
  _res(1, 0) =
      -Scalar(1.4083112389913199) * _tmp161 *
          (Scalar(34.083374946563197) * _tmp156 - std::cosh(_tmp168) + std::cosh(_tmp169)) -
      _tmp163 *
          (-Scalar(34.083374946563197) * _tmp162 + Scalar(1.0) * _tmp166 * std::sinh(_tmp169) -
           (-Scalar(0.71007031138673404) * _tmp159 * _tmp162 +
            _tmp167 * (-_tmp158 * _tmp161 - _tmp163 * _tmp166)) *
               std::sinh(_tmp168));
  _res(2, 0) =
      -_tmp184 *
          (-Scalar(34.083374946563197) * _tmp192 + Scalar(1.0) * _tmp193 * std::sinh(_tmp188) -
           (-Scalar(0.71007031138673404) * _tmp185 * _tmp192 +
            _tmp186 * (-_tmp183 * _tmp190 - _tmp184 * _tmp193)) *
               std::sinh(_tmp187)) -
      _tmp190 * (Scalar(34.083374946563197) * _tmp176 - std::cosh(_tmp187) + std::cosh(_tmp188));
  _res(3, 0) =
      -_tmp204 *
          (-Scalar(34.083374946563197) * _tmp211 + Scalar(1.0) * _tmp212 * std::sinh(_tmp203) -
           (-Scalar(0.71007031138673404) * _tmp205 * _tmp211 +
            _tmp206 * (-_tmp202 * _tmp209 - _tmp204 * _tmp212)) *
               std::sinh(_tmp207)) -
      _tmp209 * (Scalar(34.083374946563197) * _tmp197 + std::cosh(_tmp203) - std::cosh(_tmp207));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
