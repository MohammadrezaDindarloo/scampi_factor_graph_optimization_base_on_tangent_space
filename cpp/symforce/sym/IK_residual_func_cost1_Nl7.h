// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl7
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl7(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 498

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (155)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp5 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp9 = 2 * _tmp8;
  const Scalar _tmp10 = _tmp4 * _tmp9;
  const Scalar _tmp11 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = 2 * _tmp11;
  const Scalar _tmp13 = _tmp12 * _tmp2;
  const Scalar _tmp14 = _tmp10 - _tmp13;
  const Scalar _tmp15 = -Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp2 * _tmp9;
  const Scalar _tmp17 = _tmp12 * _tmp4;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp15 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp7;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = 1 - 2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp24 = 2 * _tmp2 * _tmp4;
  const Scalar _tmp25 = _tmp11 * _tmp9;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp29 = _tmp27 - _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp34 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp36 = _tmp34 - _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = _tmp19 + _tmp6;
  const Scalar _tmp39 = _tmp38 + position_vector(1, 0);
  const Scalar _tmp40 = _tmp39 + Scalar(-110.0);
  const Scalar _tmp41 = _tmp27 + _tmp28;
  const Scalar _tmp42 = _tmp23 + _tmp41;
  const Scalar _tmp43 = _tmp42 + position_vector(0, 0);
  const Scalar _tmp44 = _tmp43 + Scalar(-125.0);
  const Scalar _tmp45 = std::pow(Scalar(std::pow(_tmp40, Scalar(2)) + std::pow(_tmp44, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp46 = _tmp44 * _tmp45;
  const Scalar _tmp47 = -_tmp33;
  const Scalar _tmp48 = _tmp36 + _tmp47;
  const Scalar _tmp49 = _tmp34 + _tmp35;
  const Scalar _tmp50 = _tmp33 + _tmp49;
  const Scalar _tmp51 = _tmp15 - _tmp18;
  const Scalar _tmp52 = _tmp51 + _tmp7;
  const Scalar _tmp53 = _tmp52 + position_vector(1, 0);
  const Scalar _tmp54 = _tmp53 + Scalar(110.0);
  const Scalar _tmp55 = -_tmp23;
  const Scalar _tmp56 = _tmp29 + _tmp55;
  const Scalar _tmp57 = _tmp56 + position_vector(0, 0);
  const Scalar _tmp58 = _tmp57 + Scalar(125.0);
  const Scalar _tmp59 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp60 = _tmp54 * _tmp59;
  const Scalar _tmp61 = _tmp40 * _tmp45;
  const Scalar _tmp62 = _tmp46 * _tmp60 - _tmp61;
  const Scalar _tmp63 = _tmp51 + _tmp6;
  const Scalar _tmp64 = _tmp63 + position_vector(1, 0);
  const Scalar _tmp65 = _tmp64 + Scalar(-110.0);
  const Scalar _tmp66 = _tmp41 + _tmp55;
  const Scalar _tmp67 = _tmp66 + position_vector(0, 0);
  const Scalar _tmp68 = _tmp67 + Scalar(125.0);
  const Scalar _tmp69 = std::pow(Scalar(std::pow(_tmp65, Scalar(2)) + std::pow(_tmp68, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp70 = _tmp65 * _tmp69;
  const Scalar _tmp71 = _tmp68 * _tmp69;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp60 * _tmp71 - _tmp70);
  const Scalar _tmp73 = _tmp47 + _tmp49;
  const Scalar _tmp74 = _tmp72 * (_tmp48 * _tmp71 - _tmp71 * _tmp73);
  const Scalar _tmp75 = _tmp48 * _tmp60;
  const Scalar _tmp76 = _tmp72 * (_tmp70 * _tmp73 - _tmp71 * _tmp75);
  const Scalar _tmp77 = -_tmp46 * _tmp75 + _tmp50 * _tmp61 - _tmp62 * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) * _tmp52;
  const Scalar _tmp79 = -_tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp63 + _tmp79);
  const Scalar _tmp81 = Scalar(1.0) * _tmp56;
  const Scalar _tmp82 = _tmp80 * (-_tmp66 + _tmp81);
  const Scalar _tmp83 = _tmp46 * _tmp48 - _tmp46 * _tmp50 - _tmp62 * _tmp74 - _tmp77 * _tmp82;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp85 = Scalar(1.0) * _tmp76;
  const Scalar _tmp86 = -Scalar(1.0) * _tmp74 + _tmp82 * _tmp85;
  const Scalar _tmp87 =
      std::sqrt(Scalar(std::pow(_tmp54, Scalar(2)) + std::pow(_tmp58, Scalar(2))));
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 = _tmp59 * _tmp87;
  const Scalar _tmp90 = _tmp89 * (-_tmp52 * _tmp58 * _tmp88 + _tmp54 * _tmp56 * _tmp88);
  const Scalar _tmp91 = _tmp72 * (_tmp63 * _tmp71 - _tmp66 * _tmp70 + _tmp71 * _tmp90);
  const Scalar _tmp92 = _tmp38 * _tmp46 - _tmp42 * _tmp61 + _tmp46 * _tmp90 - _tmp62 * _tmp91;
  const Scalar _tmp93 = _tmp84 * _tmp92;
  const Scalar _tmp94 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp95 = _tmp83 * _tmp94;
  const Scalar _tmp96 = _tmp95 * (-_tmp86 * _tmp93 - Scalar(1.0) * _tmp91);
  const Scalar _tmp97 = _tmp86 + _tmp96;
  const Scalar _tmp98 = _tmp84 * _tmp97;
  const Scalar _tmp99 = -_tmp62 * _tmp98 + Scalar(1.0);
  const Scalar _tmp100 = _tmp71 * _tmp72;
  const Scalar _tmp101 = _tmp21 + Scalar(110.0);
  const Scalar _tmp102 = _tmp31 + Scalar(-125.0);
  const Scalar _tmp103 =
      std::pow(Scalar(std::pow(_tmp101, Scalar(2)) + std::pow(_tmp102, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp104 = _tmp101 * _tmp103;
  const Scalar _tmp105 = _tmp104 * fh1;
  const Scalar _tmp106 = Scalar(1.0) * _tmp94;
  const Scalar _tmp107 = _tmp100 * _tmp62;
  const Scalar _tmp108 = _tmp102 * _tmp103;
  const Scalar _tmp109 = fh1 * (_tmp104 * _tmp30 - _tmp108 * _tmp20);
  const Scalar _tmp110 = _tmp60 * _tmp76 + _tmp75;
  const Scalar _tmp111 = -_tmp110 * _tmp82 - _tmp48 + _tmp60 * _tmp74;
  const Scalar _tmp112 = _tmp95 * (-_tmp111 * _tmp93 + _tmp60 * _tmp91 - _tmp90);
  const Scalar _tmp113 = _tmp84 * (_tmp111 + _tmp112);
  const Scalar _tmp114 = -_tmp113 * _tmp62 - _tmp60;
  const Scalar _tmp115 = _tmp108 * fh1;
  const Scalar _tmp116 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp117 = _tmp78 * _tmp82 + _tmp81;
  const Scalar _tmp118 = 0;
  const Scalar _tmp119 = _tmp118 * _tmp84;
  const Scalar _tmp120 = -_tmp105 * _tmp89 * (_tmp100 * _tmp99 + _tmp46 * _tmp98) -
                         _tmp109 * _tmp89 * (-_tmp106 * _tmp107 + _tmp106 * _tmp46) -
                         _tmp115 * _tmp89 * (_tmp100 * _tmp114 + _tmp113 * _tmp46 + Scalar(1.0)) -
                         _tmp116 * _tmp89 * (-_tmp107 * _tmp119 + _tmp119 * _tmp46);
  const Scalar _tmp121 = Scalar(1.0) / (_tmp120);
  const Scalar _tmp122 = _tmp38 + _tmp79;
  const Scalar _tmp123 = _tmp122 * _tmp82;
  const Scalar _tmp124 = Scalar(1.0) / (-_tmp123 - _tmp42 + _tmp81);
  const Scalar _tmp125 = _tmp117 * _tmp124;
  const Scalar _tmp126 = _tmp77 * _tmp84;
  const Scalar _tmp127 = -_tmp118 * _tmp126 - _tmp122 * _tmp125 + _tmp79;
  const Scalar _tmp128 = Scalar(1.0) * _tmp80;
  const Scalar _tmp129 = Scalar(1.0) * _tmp124;
  const Scalar _tmp130 = _tmp122 * _tmp124;
  const Scalar _tmp131 = -_tmp126 * _tmp97 + _tmp130 * _tmp96 - _tmp85;
  const Scalar _tmp132 = _tmp37 * fh1;
  const Scalar _tmp133 = -_tmp104 * _tmp132 - Scalar(40.024799999999999) * _tmp14 - _tmp20 * fv1;
  const Scalar _tmp134 = _tmp123 * _tmp129 + Scalar(1.0);
  const Scalar _tmp135 = _tmp129 * _tmp82;
  const Scalar _tmp136 = _tmp122 * _tmp80;
  const Scalar _tmp137 = _tmp108 * _tmp132 + Scalar(40.024799999999999) * _tmp26 + _tmp30 * fv1;
  const Scalar _tmp138 = _tmp129 * _tmp95;
  const Scalar _tmp139 = -_tmp106 * _tmp77 + _tmp122 * _tmp138;
  const Scalar _tmp140 = _tmp110 + _tmp112 * _tmp130 - _tmp113 * _tmp77;
  const Scalar _tmp141 = std::asinh(
      _tmp121 * (Scalar(1.0) * _tmp105 * (-_tmp128 * _tmp131 + _tmp129 * _tmp96) +
                 Scalar(1.0) * _tmp109 * (-_tmp128 * _tmp139 + _tmp138) +
                 Scalar(1.0) * _tmp115 * (_tmp112 * _tmp129 - _tmp128 * _tmp140) +
                 Scalar(1.0) * _tmp116 * (-_tmp117 * _tmp129 - _tmp127 * _tmp128 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp133 * (-_tmp128 * _tmp134 + _tmp135) +
                 Scalar(1.0) * _tmp137 * (_tmp129 * _tmp136 - _tmp129)));
  const Scalar _tmp142 = Scalar(1.4083112389913199) * _tmp120;
  const Scalar _tmp143 = _tmp129 * _tmp137;
  const Scalar _tmp144 = _tmp116 * _tmp119;
  const Scalar _tmp145 = _tmp62 * _tmp72;
  const Scalar _tmp146 = _tmp106 * _tmp109;
  const Scalar _tmp147 = _tmp105 * _tmp72 * _tmp99 + _tmp114 * _tmp115 * _tmp72 -
                         _tmp144 * _tmp145 - _tmp145 * _tmp146;
  const Scalar _tmp148 = Scalar(1.0) / (_tmp147);
  const Scalar _tmp149 =
      std::asinh(_tmp148 * (_tmp105 * _tmp131 * _tmp80 + _tmp109 * _tmp139 * _tmp80 +
                            _tmp115 * _tmp140 * _tmp80 + _tmp116 * _tmp127 * _tmp80 +
                            _tmp133 * _tmp134 * _tmp80 - _tmp136 * _tmp143));
  const Scalar _tmp150 = Scalar(1.4083112389913199) * _tmp147;
  const Scalar _tmp151 = _tmp105 * _tmp98 + _tmp113 * _tmp115 + _tmp144 + _tmp146;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 = std::asinh(_tmp152 * (-_tmp105 * _tmp124 * _tmp96 - _tmp109 * _tmp138 -
                                               _tmp112 * _tmp115 * _tmp124 + _tmp116 * _tmp125 -
                                               _tmp133 * _tmp135 + _tmp143));
  const Scalar _tmp154 = Scalar(1.4083112389913199) * _tmp151;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 *
          (Scalar(34.083374946563197) * _tmp0 + std::cosh(Scalar(1.0) * _tmp1) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp0 *
               (-_tmp1 * _tmp32 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp31), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp21 - 1),
                                     Scalar(2))))))) +
      _tmp37 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp142 *
          (Scalar(34.083374946563197) * _tmp121 + std::cosh(Scalar(1.0) * _tmp141) -
           std::cosh(Scalar(0.71007031138673404) * _tmp121 *
                     (-_tmp141 * _tmp142 -
                      Scalar(125.0) *
                          std::sqrt(Scalar(
                              Scalar(0.77439999999999998) *
                                  std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp53 - 1),
                                           Scalar(2)) +
                              std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp57 - 1),
                                       Scalar(2))))))) +
      _tmp48 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp150 *
          (Scalar(34.083374946563197) * _tmp148 + std::cosh(Scalar(1.0) * _tmp149) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp148 *
               (-_tmp149 * _tmp150 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp64),
                                                 Scalar(2)) +
                                    std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp67 - 1),
                                             Scalar(2))))))) +
      _tmp73 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp154 *
          (Scalar(34.083374946563197) * _tmp152 + std::cosh(Scalar(1.0) * _tmp153) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp152 *
               (-_tmp153 * _tmp154 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp39),
                                                 Scalar(2)) +
                                    std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp43),
                                             Scalar(2))))))) +
      _tmp50 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
