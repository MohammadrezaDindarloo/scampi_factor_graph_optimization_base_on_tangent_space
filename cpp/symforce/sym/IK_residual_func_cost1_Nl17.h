// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl17
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl17(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 505

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (155)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 2 * _tmp2;
  const Scalar _tmp4 = _tmp1 * _tmp3;
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp7 = 2 * _tmp5 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp4 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp10 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp12 = 2 * _tmp1;
  const Scalar _tmp13 = _tmp12 * _tmp5;
  const Scalar _tmp14 = _tmp3 * _tmp6;
  const Scalar _tmp15 = _tmp13 + _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp11 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp8;
  const Scalar _tmp19 = _tmp18 + position_vector(0, 0);
  const Scalar _tmp20 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp22 = _tmp3 * _tmp5;
  const Scalar _tmp23 = _tmp12 * _tmp6;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp27 = _tmp25 + _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(1, 0);
  const Scalar _tmp30 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp31 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp33 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp20;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp35 = _tmp33 + _tmp34;
  const Scalar _tmp36 = _tmp32 + _tmp35;
  const Scalar _tmp37 = -_tmp11 + _tmp16;
  const Scalar _tmp38 = _tmp37 + _tmp8;
  const Scalar _tmp39 = _tmp38 + position_vector(0, 0);
  const Scalar _tmp40 = _tmp25 - _tmp26;
  const Scalar _tmp41 = _tmp21 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp43 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp44 = Scalar(1.0) * _tmp41;
  const Scalar _tmp45 = -_tmp44;
  const Scalar _tmp46 = Scalar(1.0) * _tmp38;
  const Scalar _tmp47 = -_tmp21;
  const Scalar _tmp48 = _tmp27 + _tmp47;
  const Scalar _tmp49 = Scalar(1.0) / (_tmp45 + _tmp48);
  const Scalar _tmp50 = -_tmp8;
  const Scalar _tmp51 = _tmp17 + _tmp50;
  const Scalar _tmp52 = _tmp46 - _tmp51;
  const Scalar _tmp53 = _tmp49 * _tmp52;
  const Scalar _tmp54 = _tmp44 * _tmp53 + _tmp46;
  const Scalar _tmp55 = 0;
  const Scalar _tmp56 = _tmp33 - _tmp34;
  const Scalar _tmp57 = _tmp32 + _tmp56;
  const Scalar _tmp58 = _tmp40 + _tmp47;
  const Scalar _tmp59 = _tmp58 + position_vector(1, 0);
  const Scalar _tmp60 = _tmp59 + Scalar(110.0);
  const Scalar _tmp61 = _tmp37 + _tmp50;
  const Scalar _tmp62 = _tmp61 + position_vector(0, 0);
  const Scalar _tmp63 = _tmp62 + Scalar(125.0);
  const Scalar _tmp64 = std::pow(Scalar(std::pow(_tmp60, Scalar(2)) + std::pow(_tmp63, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp65 = _tmp63 * _tmp64;
  const Scalar _tmp66 = _tmp42 + Scalar(-110.0);
  const Scalar _tmp67 = _tmp39 + Scalar(125.0);
  const Scalar _tmp68 = Scalar(1.0) / (_tmp67);
  const Scalar _tmp69 = _tmp66 * _tmp68;
  const Scalar _tmp70 = _tmp60 * _tmp64;
  const Scalar _tmp71 = _tmp65 * _tmp69 - _tmp70;
  const Scalar _tmp72 = _tmp48 + position_vector(1, 0);
  const Scalar _tmp73 = _tmp72 + Scalar(110.0);
  const Scalar _tmp74 = _tmp51 + position_vector(0, 0);
  const Scalar _tmp75 = _tmp74 + Scalar(-125.0);
  const Scalar _tmp76 = std::pow(Scalar(std::pow(_tmp73, Scalar(2)) + std::pow(_tmp75, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp77 = _tmp73 * _tmp76;
  const Scalar _tmp78 = _tmp75 * _tmp76;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp69 * _tmp78 - _tmp77);
  const Scalar _tmp80 = _tmp57 * _tmp78;
  const Scalar _tmp81 = -_tmp32;
  const Scalar _tmp82 = _tmp35 + _tmp81;
  const Scalar _tmp83 = _tmp79 * (-_tmp78 * _tmp82 + _tmp80);
  const Scalar _tmp84 = _tmp56 + _tmp81;
  const Scalar _tmp85 = _tmp79 * (-_tmp69 * _tmp80 + _tmp77 * _tmp82);
  const Scalar _tmp86 = _tmp57 * _tmp69;
  const Scalar _tmp87 = -_tmp65 * _tmp86 + _tmp70 * _tmp84 - _tmp71 * _tmp85;
  const Scalar _tmp88 = -_tmp53 * _tmp87 + _tmp57 * _tmp65 - _tmp65 * _tmp84 - _tmp71 * _tmp83;
  const Scalar _tmp89 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp90 = _tmp87 * _tmp89;
  const Scalar _tmp91 = _tmp45 + _tmp58;
  const Scalar _tmp92 = _tmp53 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp46 - _tmp61 - _tmp92);
  const Scalar _tmp94 = _tmp54 * _tmp93;
  const Scalar _tmp95 = _tmp45 - _tmp55 * _tmp90 - _tmp91 * _tmp94;
  const Scalar _tmp96 = Scalar(1.0) * _tmp49;
  const Scalar _tmp97 = Scalar(1.0) * _tmp93;
  const Scalar _tmp98 =
      std::sqrt(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp67, Scalar(2))));
  const Scalar _tmp99 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp100 = _tmp68 * _tmp98;
  const Scalar _tmp101 = _tmp100 * (_tmp38 * _tmp66 * _tmp99 - _tmp41 * _tmp67 * _tmp99);
  const Scalar _tmp102 = _tmp79 * (_tmp101 * _tmp78 + _tmp48 * _tmp78 - _tmp51 * _tmp77);
  const Scalar _tmp103 = _tmp101 * _tmp65 - _tmp102 * _tmp71 + _tmp58 * _tmp65 - _tmp61 * _tmp70;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = Scalar(1.0) * _tmp104;
  const Scalar _tmp106 = _tmp104 * _tmp88;
  const Scalar _tmp107 = _tmp91 * _tmp97;
  const Scalar _tmp108 = -_tmp105 * _tmp87 + _tmp106 * _tmp107;
  const Scalar _tmp109 = _tmp106 * _tmp97;
  const Scalar _tmp110 = _tmp29 + Scalar(-110.0);
  const Scalar _tmp111 = _tmp19 + Scalar(-125.0);
  const Scalar _tmp112 =
      std::pow(Scalar(std::pow(_tmp110, Scalar(2)) + std::pow(_tmp111, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp113 = _tmp111 * _tmp112;
  const Scalar _tmp114 = _tmp110 * _tmp112;
  const Scalar _tmp115 = fh1 * (-_tmp113 * _tmp28 + _tmp114 * _tmp18);
  const Scalar _tmp116 = _tmp69 * _tmp85 + _tmp86;
  const Scalar _tmp117 = -_tmp116 * _tmp53 - _tmp57 + _tmp69 * _tmp83;
  const Scalar _tmp118 = _tmp103 * _tmp89;
  const Scalar _tmp119 = _tmp106 * (-_tmp101 + _tmp102 * _tmp69 - _tmp117 * _tmp118);
  const Scalar _tmp120 = _tmp117 + _tmp119;
  const Scalar _tmp121 = _tmp91 * _tmp93;
  const Scalar _tmp122 = _tmp116 + _tmp119 * _tmp121 - _tmp120 * _tmp90;
  const Scalar _tmp123 = _tmp113 * fh1;
  const Scalar _tmp124 = _tmp92 * _tmp97 + Scalar(1.0);
  const Scalar _tmp125 = _tmp36 * fh1;
  const Scalar _tmp126 = -_tmp114 * _tmp125 - Scalar(40.024799999999999) * _tmp24 - _tmp28 * fv1;
  const Scalar _tmp127 = _tmp113 * _tmp125 + Scalar(40.024799999999999) * _tmp15 + _tmp18 * fv1;
  const Scalar _tmp128 = _tmp52 * _tmp85 * _tmp96 - Scalar(1.0) * _tmp83;
  const Scalar _tmp129 = _tmp106 * (-Scalar(1.0) * _tmp102 - _tmp118 * _tmp128);
  const Scalar _tmp130 = _tmp128 + _tmp129;
  const Scalar _tmp131 = _tmp121 * _tmp129 - _tmp130 * _tmp90 - Scalar(1.0) * _tmp85;
  const Scalar _tmp132 = _tmp114 * fh1;
  const Scalar _tmp133 = _tmp71 * _tmp89;
  const Scalar _tmp134 = -_tmp130 * _tmp133 + Scalar(1.0);
  const Scalar _tmp135 = _tmp78 * _tmp79;
  const Scalar _tmp136 = _tmp65 * _tmp89;
  const Scalar _tmp137 = -_tmp120 * _tmp133 - _tmp69;
  const Scalar _tmp138 = _tmp55 * _tmp89;
  const Scalar _tmp139 = _tmp133 * _tmp55;
  const Scalar _tmp140 = -_tmp100 * _tmp115 * (-_tmp105 * _tmp135 * _tmp71 + _tmp105 * _tmp65) -
                         _tmp100 * _tmp123 * (_tmp120 * _tmp136 + _tmp135 * _tmp137 + Scalar(1.0)) -
                         _tmp100 * _tmp132 * (_tmp130 * _tmp136 + _tmp134 * _tmp135) -
                         _tmp100 * _tmp43 * (-_tmp135 * _tmp139 + _tmp138 * _tmp65);
  const Scalar _tmp141 = Scalar(1.0) / (_tmp140);
  const Scalar _tmp142 = std::asinh(
      _tmp141 * (Scalar(1.0) * _tmp115 * (-_tmp108 * _tmp96 + _tmp109) +
                 Scalar(1.0) * _tmp123 * (_tmp119 * _tmp97 - _tmp122 * _tmp96) +
                 Scalar(1.0) * _tmp126 * (-_tmp124 * _tmp96 + _tmp53 * _tmp97) +
                 Scalar(1.0) * _tmp127 * (_tmp107 * _tmp49 - _tmp97) +
                 Scalar(1.0) * _tmp132 * (_tmp129 * _tmp97 - _tmp131 * _tmp96) +
                 Scalar(1.0) * _tmp43 * (-_tmp54 * _tmp97 - _tmp95 * _tmp96 + Scalar(1.0))));
  const Scalar _tmp143 = Scalar(1.4083112389913199) * _tmp140;
  const Scalar _tmp144 = _tmp105 * _tmp115;
  const Scalar _tmp145 = _tmp123 * _tmp137 * _tmp79 + _tmp132 * _tmp134 * _tmp79 -
                         _tmp139 * _tmp43 * _tmp79 - _tmp144 * _tmp71 * _tmp79;
  const Scalar _tmp146 = Scalar(1.0) / (_tmp145);
  const Scalar _tmp147 = _tmp126 * _tmp49;
  const Scalar _tmp148 = _tmp127 * _tmp97;
  const Scalar _tmp149 =
      std::asinh(_tmp146 * (_tmp108 * _tmp115 * _tmp49 + _tmp122 * _tmp123 * _tmp49 +
                            _tmp124 * _tmp147 + _tmp131 * _tmp132 * _tmp49 -
                            _tmp148 * _tmp49 * _tmp91 + _tmp43 * _tmp49 * _tmp95));
  const Scalar _tmp150 = Scalar(1.4083112389913199) * _tmp145;
  const Scalar _tmp151 =
      _tmp120 * _tmp123 * _tmp89 + _tmp130 * _tmp132 * _tmp89 + _tmp138 * _tmp43 + _tmp144;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 = std::asinh(
      _tmp152 * (-_tmp109 * _tmp115 - _tmp119 * _tmp123 * _tmp93 - _tmp129 * _tmp132 * _tmp93 -
                 _tmp147 * _tmp52 * _tmp97 + _tmp148 + _tmp43 * _tmp94));
  const Scalar _tmp154 = Scalar(1.4083112389913199) * _tmp151;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp31 *
          (Scalar(34.083374946563197) * _tmp0 + std::cosh(Scalar(1.0) * _tmp30) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp0 *
               (-_tmp30 * _tmp31 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp19), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp29),
                                     Scalar(2))))))) +
      _tmp36 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp143 *
          (Scalar(34.083374946563197) * _tmp141 + std::cosh(Scalar(1.0) * _tmp142) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp141 *
               (-_tmp142 * _tmp143 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp42),
                                                 Scalar(2)) +
                                    std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp39 - 1),
                                             Scalar(2))))))) +
      _tmp57 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp150 *
          (Scalar(34.083374946563197) * _tmp146 + std::cosh(Scalar(1.0) * _tmp149) -
           std::cosh(
               Scalar(0.71007031138673404) * _tmp146 *
               (-_tmp149 * _tmp150 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp74), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp72 - 1),
                                     Scalar(2))))))) +
      _tmp82 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp154 *
          (Scalar(34.083374946563197) * _tmp152 + std::cosh(Scalar(1.0) * _tmp153) -
           std::cosh(Scalar(0.71007031138673404) * _tmp152 *
                     (-_tmp153 * _tmp154 -
                      Scalar(125.0) *
                          std::sqrt(Scalar(
                              Scalar(0.77439999999999998) *
                                  std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp59 - 1),
                                           Scalar(2)) +
                              std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp62 - 1),
                                       Scalar(2))))))) +
      _tmp84 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
