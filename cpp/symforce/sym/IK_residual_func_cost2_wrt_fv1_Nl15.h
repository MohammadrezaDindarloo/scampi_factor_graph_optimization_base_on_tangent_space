// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl15
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl15(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 595

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (189)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp6 = 2 * _tmp5;
  const Scalar _tmp7 = _tmp4 * _tmp6;
  const Scalar _tmp8 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp9 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp10 = _tmp8 * _tmp9;
  const Scalar _tmp11 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp12 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp13 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = 2 * _tmp4 * _tmp8;
  const Scalar _tmp16 = _tmp5 * _tmp9;
  const Scalar _tmp17 = _tmp15 + _tmp16;
  const Scalar _tmp18 = -Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp14 + _tmp18;
  const Scalar _tmp20 = _tmp11 + _tmp19;
  const Scalar _tmp21 = _tmp20 + position_vector(0, 0);
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp23 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp12 +
                        Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999);
  const Scalar _tmp25 = _tmp6 * _tmp8;
  const Scalar _tmp26 = _tmp4 * _tmp9;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = _tmp24 + _tmp29;
  const Scalar _tmp31 = _tmp22 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(1, 0);
  const Scalar _tmp33 = -_tmp11;
  const Scalar _tmp34 = -_tmp14 + _tmp18;
  const Scalar _tmp35 = _tmp33 + _tmp34;
  const Scalar _tmp36 = _tmp35 + position_vector(0, 0);
  const Scalar _tmp37 = _tmp36 + Scalar(1.9874742000000001);
  const Scalar _tmp38 = -_tmp22;
  const Scalar _tmp39 = -_tmp24;
  const Scalar _tmp40 = _tmp29 + _tmp39;
  const Scalar _tmp41 = _tmp38 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(8.3196563700000006);
  const Scalar _tmp44 = std::pow(Scalar(std::pow(_tmp37, Scalar(2)) + std::pow(_tmp43, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp45 = _tmp37 * _tmp44;
  const Scalar _tmp46 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp47 =
      -Scalar(0.010999999999999999) * _tmp13 - Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp48 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp49 = _tmp47 - _tmp48;
  const Scalar _tmp50 = _tmp46 + _tmp49;
  const Scalar _tmp51 = -_tmp46;
  const Scalar _tmp52 = _tmp49 + _tmp51;
  const Scalar _tmp53 = _tmp43 * _tmp44;
  const Scalar _tmp54 = _tmp47 + _tmp48;
  const Scalar _tmp55 = _tmp51 + _tmp54;
  const Scalar _tmp56 = _tmp30 + _tmp38;
  const Scalar _tmp57 = _tmp56 + position_vector(1, 0);
  const Scalar _tmp58 = _tmp57 + Scalar(-4.8333311099999996);
  const Scalar _tmp59 = _tmp11 + _tmp34;
  const Scalar _tmp60 = _tmp59 + position_vector(0, 0);
  const Scalar _tmp61 = _tmp60 + Scalar(1.79662371);
  const Scalar _tmp62 = std::pow(Scalar(std::pow(_tmp58, Scalar(2)) + std::pow(_tmp61, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp63 = _tmp58 * _tmp62;
  const Scalar _tmp64 = _tmp61 * _tmp62;
  const Scalar _tmp65 = _tmp19 + _tmp33;
  const Scalar _tmp66 = _tmp65 + position_vector(0, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(-2.5202214700000001);
  const Scalar _tmp68 = Scalar(1.0) / (_tmp67);
  const Scalar _tmp69 = _tmp22 + _tmp40;
  const Scalar _tmp70 = _tmp69 + position_vector(1, 0);
  const Scalar _tmp71 = _tmp70 + Scalar(8.3888750099999996);
  const Scalar _tmp72 = _tmp68 * _tmp71;
  const Scalar _tmp73 = _tmp50 * _tmp72;
  const Scalar _tmp74 = _tmp55 * _tmp63 - _tmp64 * _tmp73;
  const Scalar _tmp75 = Scalar(1.0) / (-_tmp63 + _tmp64 * _tmp72);
  const Scalar _tmp76 = _tmp45 * _tmp72 - _tmp53;
  const Scalar _tmp77 = _tmp75 * _tmp76;
  const Scalar _tmp78 = -_tmp45 * _tmp73 + _tmp52 * _tmp53 - _tmp74 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) * _tmp69;
  const Scalar _tmp80 = -_tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp56 + _tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp65;
  const Scalar _tmp83 = _tmp81 * (-_tmp59 + _tmp82);
  const Scalar _tmp84 = _tmp50 * _tmp64 - _tmp55 * _tmp64;
  const Scalar _tmp85 = _tmp45 * _tmp50 - _tmp45 * _tmp52 - _tmp77 * _tmp84 - _tmp78 * _tmp83;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp87 = _tmp72 * _tmp75;
  const Scalar _tmp88 = _tmp73 + _tmp74 * _tmp87;
  const Scalar _tmp89 = -_tmp50 - _tmp83 * _tmp88 + _tmp84 * _tmp87;
  const Scalar _tmp90 =
      std::sqrt(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp71, Scalar(2))));
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 = _tmp68 * _tmp90;
  const Scalar _tmp93 = _tmp92 * (_tmp65 * _tmp71 * _tmp91 - _tmp67 * _tmp69 * _tmp91);
  const Scalar _tmp94 = _tmp56 * _tmp64 - _tmp59 * _tmp63 + _tmp64 * _tmp93;
  const Scalar _tmp95 = -_tmp35 * _tmp53 + _tmp41 * _tmp45 + _tmp45 * _tmp93 - _tmp77 * _tmp94;
  const Scalar _tmp96 = _tmp86 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp98 = _tmp85 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (_tmp87 * _tmp94 - _tmp89 * _tmp96 - _tmp93);
  const Scalar _tmp100 = _tmp86 * (_tmp89 + _tmp99);
  const Scalar _tmp101 = -_tmp100 * _tmp76 - _tmp72;
  const Scalar _tmp102 = _tmp64 * _tmp75;
  const Scalar _tmp103 = _tmp21 + Scalar(-2.71799795);
  const Scalar _tmp104 = _tmp32 + Scalar(-4.7752063900000001);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp103 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = Scalar(1.0) * _tmp75;
  const Scalar _tmp109 = _tmp108 * _tmp74;
  const Scalar _tmp110 = -_tmp108 * _tmp84 + _tmp109 * _tmp83;
  const Scalar _tmp111 = _tmp98 * (-_tmp108 * _tmp94 - _tmp110 * _tmp96);
  const Scalar _tmp112 = _tmp86 * (_tmp110 + _tmp111);
  const Scalar _tmp113 = -_tmp112 * _tmp76 + Scalar(1.0);
  const Scalar _tmp114 = _tmp104 * _tmp105;
  const Scalar _tmp115 = _tmp114 * fh1;
  const Scalar _tmp116 = Scalar(1.0) * _tmp97;
  const Scalar _tmp117 = _tmp64 * _tmp77;
  const Scalar _tmp118 = fh1 * (-_tmp106 * _tmp31 + _tmp114 * _tmp20);
  const Scalar _tmp119 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp120 = _tmp79 * _tmp83 + _tmp82;
  const Scalar _tmp121 = 0;
  const Scalar _tmp122 = _tmp92 * (-_tmp117 * _tmp121 + _tmp121 * _tmp45);
  const Scalar _tmp123 = -_tmp107 * _tmp92 * (_tmp100 * _tmp45 + _tmp101 * _tmp102 + Scalar(1.0)) -
                         _tmp115 * _tmp92 * (_tmp102 * _tmp113 + _tmp112 * _tmp45) -
                         _tmp118 * _tmp92 * (-_tmp116 * _tmp117 + _tmp116 * _tmp45) -
                         _tmp119 * _tmp122;
  const Scalar _tmp124 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp125 = _tmp41 + _tmp80;
  const Scalar _tmp126 = _tmp125 * _tmp83;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 - _tmp35 + _tmp82);
  const Scalar _tmp128 = Scalar(1.0) * _tmp127;
  const Scalar _tmp129 = _tmp120 * _tmp127;
  const Scalar _tmp130 = _tmp81 * (-_tmp121 * _tmp78 - _tmp125 * _tmp129 + _tmp80);
  const Scalar _tmp131 = -Scalar(1.0) * _tmp120 * _tmp128 - Scalar(1.0) * _tmp130 + Scalar(1.0);
  const Scalar _tmp132 = _tmp125 * _tmp128;
  const Scalar _tmp133 = -_tmp116 * _tmp78 + _tmp132 * _tmp98;
  const Scalar _tmp134 = Scalar(1.0) * _tmp81;
  const Scalar _tmp135 = _tmp128 * _tmp98;
  const Scalar _tmp136 = _tmp125 * _tmp127;
  const Scalar _tmp137 = -_tmp100 * _tmp78 + _tmp136 * _tmp99 + _tmp88;
  const Scalar _tmp138 = -_tmp109 + _tmp111 * _tmp136 - _tmp112 * _tmp78;
  const Scalar _tmp139 = fh1 * (_tmp46 + _tmp54);
  const Scalar _tmp140 = -_tmp114 * _tmp139 - Scalar(5.1796800000000003) * _tmp27 - _tmp31 * fv1;
  const Scalar _tmp141 = _tmp81 * (_tmp126 * _tmp128 + Scalar(1.0));
  const Scalar _tmp142 = _tmp128 * _tmp83;
  const Scalar _tmp143 = -Scalar(1.0) * _tmp141 + Scalar(1.0) * _tmp142;
  const Scalar _tmp144 = _tmp106 * _tmp139 + Scalar(5.1796800000000003) * _tmp17 + _tmp20 * fv1;
  const Scalar _tmp145 = -Scalar(1.0) * _tmp128 + Scalar(1.0) * _tmp132 * _tmp81;
  const Scalar _tmp146 = Scalar(1.0) * _tmp107 * (_tmp128 * _tmp99 - _tmp134 * _tmp137) +
                         Scalar(1.0) * _tmp115 * (_tmp111 * _tmp128 - _tmp134 * _tmp138) +
                         Scalar(1.0) * _tmp118 * (-_tmp133 * _tmp134 + _tmp135) +
                         _tmp119 * _tmp131 + _tmp140 * _tmp143 + _tmp144 * _tmp145;
  const Scalar _tmp147 = std::asinh(_tmp124 * _tmp146);
  const Scalar _tmp148 = Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = _tmp28 + _tmp38 + _tmp39;
  const Scalar _tmp150 = std::pow(_tmp123, Scalar(-2));
  const Scalar _tmp151 = _tmp122 * _tmp150;
  const Scalar _tmp152 =
      (_tmp124 * (-_tmp131 + _tmp143 * _tmp149 + _tmp145 * _tmp20) - _tmp146 * _tmp151) /
      std::sqrt(Scalar(std::pow(_tmp146, Scalar(2)) * _tmp150 + 1));
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp123;
  const Scalar _tmp154 =
      -_tmp147 * _tmp153 -
      Scalar(8.3888750099999996) *
          std::sqrt(
              Scalar(Scalar(0.090254729040973036) *
                         std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp66), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp70 - 1), Scalar(2))));
  const Scalar _tmp155 = Scalar(0.1034955) * _tmp124;
  const Scalar _tmp156 = _tmp154 * _tmp155;
  const Scalar _tmp157 = Scalar(9.6622558468725703) * _tmp122;
  const Scalar _tmp158 = _tmp128 * _tmp144;
  const Scalar _tmp159 = _tmp125 * _tmp81;
  const Scalar _tmp160 = _tmp107 * _tmp137 * _tmp81 + _tmp115 * _tmp138 * _tmp81 +
                         _tmp118 * _tmp133 * _tmp81 + _tmp119 * _tmp130 + _tmp140 * _tmp141 -
                         _tmp158 * _tmp159;
  const Scalar _tmp161 = _tmp119 * _tmp121;
  const Scalar _tmp162 = _tmp116 * _tmp118;
  const Scalar _tmp163 =
      _tmp101 * _tmp107 * _tmp75 + _tmp113 * _tmp115 * _tmp75 - _tmp161 * _tmp77 - _tmp162 * _tmp77;
  const Scalar _tmp164 = Scalar(1.0) / (_tmp163);
  const Scalar _tmp165 = std::asinh(_tmp160 * _tmp164);
  const Scalar _tmp166 = Scalar(1.0) * _tmp165;
  const Scalar _tmp167 = std::pow(_tmp163, Scalar(-2));
  const Scalar _tmp168 = _tmp128 * _tmp20;
  const Scalar _tmp169 = _tmp121 * _tmp167 * _tmp77;
  const Scalar _tmp170 =
      (-_tmp160 * _tmp169 + _tmp164 * (-_tmp130 + _tmp141 * _tmp149 - _tmp159 * _tmp168)) /
      std::sqrt(Scalar(std::pow(_tmp160, Scalar(2)) * _tmp167 + 1));
  const Scalar _tmp171 = Scalar(9.6622558468725703) * _tmp163;
  const Scalar _tmp172 = Scalar(9.6622558468725703) * _tmp121;
  const Scalar _tmp173 = _tmp172 * _tmp77;
  const Scalar _tmp174 = Scalar(0.1034955) * _tmp164;
  const Scalar _tmp175 =
      -_tmp165 * _tmp171 -
      Scalar(4.8333311099999996) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp57), Scalar(2)) +
                     Scalar(0.13817235445745474) *
                         std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp60 - 1), Scalar(2))));
  const Scalar _tmp176 = _tmp174 * _tmp175;
  const Scalar _tmp177 = -_tmp107 * _tmp127 * _tmp99 - _tmp111 * _tmp115 * _tmp127 -
                         _tmp118 * _tmp135 + _tmp119 * _tmp129 - _tmp140 * _tmp142 + _tmp158;
  const Scalar _tmp178 = _tmp100 * _tmp107 + _tmp112 * _tmp115 + _tmp161 + _tmp162;
  const Scalar _tmp179 = Scalar(1.0) / (_tmp178);
  const Scalar _tmp180 = std::asinh(_tmp177 * _tmp179);
  const Scalar _tmp181 = Scalar(9.6622558468725703) * _tmp178;
  const Scalar _tmp182 =
      -_tmp180 * _tmp181 -
      Scalar(8.3196563700000006) *
          std::sqrt(
              Scalar(Scalar(0.057067943376852184) *
                         std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp36 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp42 - 1), Scalar(2))));
  const Scalar _tmp183 = Scalar(0.1034955) * _tmp179;
  const Scalar _tmp184 = _tmp182 * _tmp183;
  const Scalar _tmp185 = std::pow(_tmp178, Scalar(-2));
  const Scalar _tmp186 = _tmp121 * _tmp185;
  const Scalar _tmp187 = (_tmp177 * _tmp186 + _tmp179 * (-_tmp129 - _tmp142 * _tmp149 + _tmp168)) /
                         std::sqrt(Scalar(std::pow(_tmp177, Scalar(2)) * _tmp185 + 1));
  const Scalar _tmp188 = Scalar(1.0) * _tmp180;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp3 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 *
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp1 * _tmp3 -
                Scalar(4.7752063900000001) *
                    std::sqrt(Scalar(
                        Scalar(0.32397683292140877) *
                            std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp21), Scalar(2)) +
                        std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp32), Scalar(2)))))));
  _res(1, 0) = _tmp153 * (-Scalar(1.0) * _tmp152 * std::cosh(_tmp148) -
                          (-Scalar(0.1034955) * _tmp151 * _tmp154 +
                           _tmp155 * (-_tmp147 * _tmp157 - _tmp152 * _tmp153)) *
                              std::cosh(_tmp156)) +
               _tmp157 * (-std::sinh(_tmp148) - std::sinh(_tmp156));
  _res(2, 0) = _tmp171 * (-Scalar(1.0) * _tmp170 * std::cosh(_tmp166) -
                          (-Scalar(0.1034955) * _tmp169 * _tmp175 +
                           _tmp174 * (-_tmp165 * _tmp173 - _tmp170 * _tmp171)) *
                              std::cosh(_tmp176)) +
               _tmp173 * (-std::sinh(_tmp166) - std::sinh(_tmp176));
  _res(3, 0) = -_tmp172 * (-std::sinh(_tmp184) - std::sinh(_tmp188)) +
               _tmp181 * (-Scalar(1.0) * _tmp187 * std::cosh(_tmp188) -
                          (Scalar(0.1034955) * _tmp182 * _tmp186 +
                           _tmp183 * (_tmp172 * _tmp180 - _tmp181 * _tmp187)) *
                              std::cosh(_tmp184));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
