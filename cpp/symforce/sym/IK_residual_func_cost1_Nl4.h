// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl4
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl4(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 504

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (156)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = 2 * _tmp3;
  const Scalar _tmp5 = _tmp2 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -_tmp9;
  const Scalar _tmp11 = _tmp4 * _tmp6;
  const Scalar _tmp12 = _tmp2 * _tmp7;
  const Scalar _tmp13 = _tmp11 - _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp16 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 +
                        Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999);
  const Scalar _tmp18 = _tmp14 - _tmp17;
  const Scalar _tmp19 = _tmp10 + _tmp18;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = 2 * _tmp2 * _tmp6;
  const Scalar _tmp24 = _tmp3 * _tmp7;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp27;
  const Scalar _tmp29 = _tmp26 - _tmp28;
  const Scalar _tmp30 = _tmp22 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp34 = -_tmp33;
  const Scalar _tmp35 =
      -Scalar(0.010999999999999999) * _tmp15 - Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp36 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp37 = _tmp35 - _tmp36;
  const Scalar _tmp38 = _tmp34 + _tmp37;
  const Scalar _tmp39 = _tmp21 + _tmp29;
  const Scalar _tmp40 = Scalar(1.0) * _tmp39;
  const Scalar _tmp41 = _tmp14 + _tmp17;
  const Scalar _tmp42 = _tmp10 + _tmp41;
  const Scalar _tmp43 = Scalar(1.0) * _tmp42;
  const Scalar _tmp44 = -_tmp43;
  const Scalar _tmp45 = _tmp41 + _tmp9;
  const Scalar _tmp46 = _tmp44 + _tmp45;
  const Scalar _tmp47 = _tmp18 + _tmp9;
  const Scalar _tmp48 = Scalar(1.0) / (_tmp44 + _tmp47);
  const Scalar _tmp49 = _tmp26 + _tmp28;
  const Scalar _tmp50 = _tmp22 + _tmp49;
  const Scalar _tmp51 = _tmp40 - _tmp50;
  const Scalar _tmp52 = _tmp48 * _tmp51;
  const Scalar _tmp53 = _tmp46 * _tmp52;
  const Scalar _tmp54 = _tmp21 + _tmp49;
  const Scalar _tmp55 = Scalar(1.0) / (_tmp40 - _tmp53 - _tmp54);
  const Scalar _tmp56 = Scalar(1.0) * _tmp55;
  const Scalar _tmp57 = Scalar(1.0) * _tmp48;
  const Scalar _tmp58 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(8.3888750099999996);
  const Scalar _tmp60 = _tmp50 + position_vector(0, 0);
  const Scalar _tmp61 = _tmp60 + Scalar(-2.5202214700000001);
  const Scalar _tmp62 = std::pow(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp61, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp63 = _tmp59 * _tmp62;
  const Scalar _tmp64 = _tmp42 + position_vector(1, 0);
  const Scalar _tmp65 = _tmp64 + Scalar(-4.8333311099999996);
  const Scalar _tmp66 = _tmp39 + position_vector(0, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(1.79662371);
  const Scalar _tmp68 = Scalar(1.0) / (_tmp67);
  const Scalar _tmp69 = _tmp65 * _tmp68;
  const Scalar _tmp70 = _tmp61 * _tmp62;
  const Scalar _tmp71 = Scalar(1.0) / (-_tmp63 + _tmp69 * _tmp70);
  const Scalar _tmp72 = _tmp33 + _tmp37;
  const Scalar _tmp73 = _tmp70 * _tmp72;
  const Scalar _tmp74 = _tmp35 + _tmp36;
  const Scalar _tmp75 = _tmp34 + _tmp74;
  const Scalar _tmp76 = _tmp71 * (_tmp63 * _tmp75 - _tmp69 * _tmp73);
  const Scalar _tmp77 = _tmp71 * (-_tmp70 * _tmp75 + _tmp73);
  const Scalar _tmp78 = _tmp51 * _tmp57 * _tmp76 - Scalar(1.0) * _tmp77;
  const Scalar _tmp79 = _tmp45 + position_vector(1, 0);
  const Scalar _tmp80 = _tmp79 + Scalar(-4.7752063900000001);
  const Scalar _tmp81 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp82 = _tmp81 + Scalar(-2.71799795);
  const Scalar _tmp83 = std::pow(Scalar(std::pow(_tmp80, Scalar(2)) + std::pow(_tmp82, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp84 = _tmp82 * _tmp83;
  const Scalar _tmp85 = _tmp80 * _tmp83;
  const Scalar _tmp86 = _tmp69 * _tmp84 - _tmp85;
  const Scalar _tmp87 = _tmp69 * _tmp72;
  const Scalar _tmp88 = _tmp33 + _tmp74;
  const Scalar _tmp89 = -_tmp76 * _tmp86 - _tmp84 * _tmp87 + _tmp85 * _tmp88;
  const Scalar _tmp90 = -_tmp52 * _tmp89 + _tmp72 * _tmp84 - _tmp77 * _tmp86 - _tmp84 * _tmp88;
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 =
      std::sqrt(Scalar(std::pow(_tmp65, Scalar(2)) + std::pow(_tmp67, Scalar(2))));
  const Scalar _tmp93 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp94 = _tmp68 * _tmp92;
  const Scalar _tmp95 = _tmp94 * (_tmp39 * _tmp65 * _tmp93 - _tmp42 * _tmp67 * _tmp93);
  const Scalar _tmp96 = _tmp71 * (_tmp47 * _tmp70 - _tmp50 * _tmp63 + _tmp70 * _tmp95);
  const Scalar _tmp97 = _tmp45 * _tmp84 - _tmp54 * _tmp85 + _tmp84 * _tmp95 - _tmp86 * _tmp96;
  const Scalar _tmp98 = _tmp91 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp100 = _tmp90 * _tmp99;
  const Scalar _tmp101 = _tmp100 * (-_tmp78 * _tmp98 - Scalar(1.0) * _tmp96);
  const Scalar _tmp102 = _tmp46 * _tmp55;
  const Scalar _tmp103 = _tmp101 + _tmp78;
  const Scalar _tmp104 = _tmp89 * _tmp91;
  const Scalar _tmp105 = _tmp101 * _tmp102 - _tmp103 * _tmp104 - Scalar(1.0) * _tmp76;
  const Scalar _tmp106 = _tmp31 + Scalar(1.9874742000000001);
  const Scalar _tmp107 = _tmp20 + Scalar(8.3196563700000006);
  const Scalar _tmp108 =
      std::pow(Scalar(std::pow(_tmp106, Scalar(2)) + std::pow(_tmp107, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp109 = _tmp107 * _tmp108;
  const Scalar _tmp110 = _tmp109 * fh1;
  const Scalar _tmp111 = _tmp53 * _tmp56 + Scalar(1.0);
  const Scalar _tmp112 = _tmp52 * _tmp56;
  const Scalar _tmp113 = _tmp38 * fh1;
  const Scalar _tmp114 = -_tmp109 * _tmp113 - Scalar(5.1796800000000003) * _tmp13 - _tmp19 * fv1;
  const Scalar _tmp115 = _tmp106 * _tmp108;
  const Scalar _tmp116 = _tmp113 * _tmp115 + Scalar(5.1796800000000003) * _tmp25 + _tmp30 * fv1;
  const Scalar _tmp117 = _tmp46 * _tmp48;
  const Scalar _tmp118 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp119 = _tmp40 + _tmp43 * _tmp52;
  const Scalar _tmp120 = 0;
  const Scalar _tmp121 = _tmp119 * _tmp55;
  const Scalar _tmp122 = -_tmp120 * _tmp89 - _tmp121 * _tmp46 + _tmp44;
  const Scalar _tmp123 = _tmp69 * _tmp76 + _tmp87;
  const Scalar _tmp124 = -_tmp123 * _tmp52 + _tmp69 * _tmp77 - _tmp72;
  const Scalar _tmp125 = _tmp100 * (-_tmp124 * _tmp98 + _tmp69 * _tmp96 - _tmp95);
  const Scalar _tmp126 = _tmp124 + _tmp125;
  const Scalar _tmp127 = _tmp102 * _tmp125 - _tmp104 * _tmp126 + _tmp123;
  const Scalar _tmp128 = _tmp115 * fh1;
  const Scalar _tmp129 = Scalar(1.0) * _tmp99;
  const Scalar _tmp130 = _tmp100 * _tmp56;
  const Scalar _tmp131 = -_tmp129 * _tmp89 + _tmp130 * _tmp46;
  const Scalar _tmp132 = fh1 * (_tmp109 * _tmp30 - _tmp115 * _tmp19);
  const Scalar _tmp133 = _tmp70 * _tmp71;
  const Scalar _tmp134 = _tmp133 * _tmp86;
  const Scalar _tmp135 = _tmp86 * _tmp91;
  const Scalar _tmp136 = -_tmp103 * _tmp135 + Scalar(1.0);
  const Scalar _tmp137 = _tmp84 * _tmp91;
  const Scalar _tmp138 = -_tmp126 * _tmp135 - _tmp69;
  const Scalar _tmp139 = -_tmp110 * _tmp94 * (_tmp103 * _tmp137 + _tmp133 * _tmp136) -
                         _tmp118 * _tmp94 * (-_tmp120 * _tmp134 + _tmp120 * _tmp84) -
                         _tmp128 * _tmp94 * (_tmp126 * _tmp137 + _tmp133 * _tmp138 + Scalar(1.0)) -
                         _tmp132 * _tmp94 * (-_tmp129 * _tmp134 + _tmp129 * _tmp84);
  const Scalar _tmp140 = Scalar(1.0) / (_tmp139);
  const Scalar _tmp141 = std::asinh(
      _tmp140 * (Scalar(1.0) * _tmp110 * (_tmp101 * _tmp56 - _tmp105 * _tmp57) +
                 Scalar(1.0) * _tmp114 * (-_tmp111 * _tmp57 + _tmp112) +
                 Scalar(1.0) * _tmp116 * (_tmp117 * _tmp56 - _tmp56) +
                 Scalar(1.0) * _tmp118 * (-_tmp119 * _tmp56 - _tmp122 * _tmp57 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp128 * (_tmp125 * _tmp56 - _tmp127 * _tmp57) +
                 Scalar(1.0) * _tmp132 * (_tmp130 - _tmp131 * _tmp57)));
  const Scalar _tmp142 = Scalar(9.6622558468725703) * _tmp139;
  const Scalar _tmp143 = _tmp129 * _tmp132;
  const Scalar _tmp144 = _tmp71 * _tmp86;
  const Scalar _tmp145 = _tmp118 * _tmp120;
  const Scalar _tmp146 = _tmp110 * _tmp136 * _tmp71 + _tmp128 * _tmp138 * _tmp71 -
                         _tmp143 * _tmp144 - _tmp144 * _tmp145;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 = _tmp48 * fh1;
  const Scalar _tmp149 = _tmp116 * _tmp56;
  const Scalar _tmp150 =
      std::asinh(_tmp147 * (_tmp105 * _tmp109 * _tmp148 + _tmp111 * _tmp114 * _tmp48 +
                            _tmp115 * _tmp127 * _tmp148 - _tmp117 * _tmp149 +
                            _tmp118 * _tmp122 * _tmp48 + _tmp131 * _tmp132 * _tmp48));
  const Scalar _tmp151 = Scalar(9.6622558468725703) * _tmp146;
  const Scalar _tmp152 =
      _tmp103 * _tmp110 * _tmp91 + _tmp126 * _tmp128 * _tmp91 + _tmp143 + _tmp145;
  const Scalar _tmp153 = Scalar(1.0) / (_tmp152);
  const Scalar _tmp154 =
      std::asinh(_tmp153 * (-_tmp101 * _tmp110 * _tmp55 - _tmp112 * _tmp114 + _tmp118 * _tmp121 -
                            _tmp125 * _tmp128 * _tmp55 - _tmp130 * _tmp132 + _tmp149));
  const Scalar _tmp155 = Scalar(9.6622558468725703) * _tmp152;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 *
          (Scalar(0.87679799772039002) * _tmp0 + std::cosh(Scalar(1.0) * _tmp1) -
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp1 * _tmp32 -
                Scalar(8.3196563700000006) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp20 - 1), Scalar(2)) +
                        Scalar(0.057067943376852184) *
                            std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp31 - 1),
                                     Scalar(2))))))) +
      _tmp38 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp142 *
          (Scalar(0.86625939559540499) * _tmp140 + std::cosh(Scalar(1.0) * _tmp141) -
           std::cosh(
               Scalar(0.1034955) * _tmp140 *
               (-_tmp141 * _tmp142 -
                Scalar(4.8333311099999996) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp64), Scalar(2)) +
                        Scalar(0.13817235445745474) *
                            std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp66 - 1),
                                     Scalar(2))))))) +
      _tmp72 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp151 *
          (Scalar(0.87653584775870996) * _tmp147 + std::cosh(Scalar(1.0) * _tmp150) -
           std::cosh(
               Scalar(0.1034955) * _tmp147 *
               (-_tmp150 * _tmp151 -
                Scalar(8.3888750099999996) *
                    std::sqrt(Scalar(
                        Scalar(0.090254729040973036) *
                            std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp60), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp58 - 1),
                                 Scalar(2))))))) +
      _tmp75 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp155 *
          (Scalar(0.86565325453551001) * _tmp153 + std::cosh(Scalar(1.0) * _tmp154) -
           std::cosh(
               Scalar(0.1034955) * _tmp153 *
               (-_tmp154 * _tmp155 -
                Scalar(4.7752063900000001) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp79), Scalar(2)) +
                        Scalar(0.32397683292140877) *
                            std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp81),
                                     Scalar(2))))))) +
      _tmp88 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
