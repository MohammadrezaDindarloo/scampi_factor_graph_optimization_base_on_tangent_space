// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost2
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     lc0: Scalar
 *     lc1: Scalar
 *     lc2: Scalar
 *     lc3: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost2(const Scalar fh1, const Scalar fv1,
                                                const sym::Rot3<Scalar>& DeltaRot,
                                                const Eigen::Matrix<Scalar, 3, 1>& position_vector,
                                                const sym::Rot3<Scalar>& Rot_init, const Scalar lc0,
                                                const Scalar lc1, const Scalar lc2,
                                                const Scalar lc3, const Scalar epsilon) {
  // Total ops: 492

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (156)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp9 = 2 * _tmp8;
  const Scalar _tmp10 = _tmp2 * _tmp9;
  const Scalar _tmp11 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = 2 * _tmp4;
  const Scalar _tmp13 = _tmp11 * _tmp12;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp4 * _tmp9;
  const Scalar _tmp16 = 2 * _tmp11 * _tmp2;
  const Scalar _tmp17 = _tmp15 - _tmp16;
  const Scalar _tmp18 = -Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = -_tmp14 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp7;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = _tmp12 * _tmp2;
  const Scalar _tmp26 = _tmp11 * _tmp9;
  const Scalar _tmp27 = _tmp25 + _tmp26;
  const Scalar _tmp28 = -Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp30 = _tmp28 - _tmp29;
  const Scalar _tmp31 = _tmp24 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(0, 0);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 = -Scalar(0.010999999999999999) * _tmp22 -
                        Scalar(0.010999999999999999) * _tmp3 + Scalar(-0.010999999999999999);
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp25 - Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp38 = _tmp36 + _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp23 + _tmp30;
  const Scalar _tmp41 = _tmp40 + position_vector(0, 0);
  const Scalar _tmp42 = _tmp41 + Scalar(-125.0);
  const Scalar _tmp43 = Scalar(1.0) / (_tmp42);
  const Scalar _tmp44 = _tmp14 + _tmp18;
  const Scalar _tmp45 = _tmp44 + _tmp7;
  const Scalar _tmp46 = _tmp45 + position_vector(1, 0);
  const Scalar _tmp47 = _tmp46 + Scalar(110.0);
  const Scalar _tmp48 = _tmp43 * _tmp47;
  const Scalar _tmp49 = _tmp44 + _tmp6;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(-110.0);
  const Scalar _tmp52 = _tmp28 + _tmp29;
  const Scalar _tmp53 = _tmp23 + _tmp52;
  const Scalar _tmp54 = _tmp53 + position_vector(0, 0);
  const Scalar _tmp55 = _tmp54 + Scalar(-125.0);
  const Scalar _tmp56 = std::pow(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp55, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp57 = _tmp55 * _tmp56;
  const Scalar _tmp58 = _tmp39 * _tmp57;
  const Scalar _tmp59 = _tmp34 + _tmp38;
  const Scalar _tmp60 = _tmp51 * _tmp56;
  const Scalar _tmp61 = Scalar(1.0) / (_tmp48 * _tmp57 - _tmp60);
  const Scalar _tmp62 = _tmp61 * (-_tmp48 * _tmp58 + _tmp59 * _tmp60);
  const Scalar _tmp63 = _tmp39 * _tmp48 + _tmp48 * _tmp62;
  const Scalar _tmp64 = Scalar(1.0) * _tmp45;
  const Scalar _tmp65 = -_tmp64;
  const Scalar _tmp66 = Scalar(1.0) / (_tmp49 + _tmp65);
  const Scalar _tmp67 = Scalar(1.0) * _tmp40;
  const Scalar _tmp68 = _tmp66 * (-_tmp53 + _tmp67);
  const Scalar _tmp69 = _tmp61 * (-_tmp57 * _tmp59 + _tmp58);
  const Scalar _tmp70 = -_tmp39 + _tmp48 * _tmp69 - _tmp63 * _tmp68;
  const Scalar _tmp71 = _tmp36 - _tmp37;
  const Scalar _tmp72 = _tmp34 + _tmp71;
  const Scalar _tmp73 = _tmp24 + _tmp52;
  const Scalar _tmp74 = _tmp73 + position_vector(0, 0);
  const Scalar _tmp75 = _tmp74 + Scalar(125.0);
  const Scalar _tmp76 = _tmp19 + _tmp6;
  const Scalar _tmp77 = _tmp76 + position_vector(1, 0);
  const Scalar _tmp78 = _tmp77 + Scalar(-110.0);
  const Scalar _tmp79 = std::pow(Scalar(std::pow(_tmp75, Scalar(2)) + std::pow(_tmp78, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp80 = _tmp75 * _tmp79;
  const Scalar _tmp81 = _tmp39 * _tmp80;
  const Scalar _tmp82 = _tmp78 * _tmp79;
  const Scalar _tmp83 = _tmp48 * _tmp80 - _tmp82;
  const Scalar _tmp84 = -_tmp48 * _tmp81 - _tmp62 * _tmp83 + _tmp72 * _tmp82;
  const Scalar _tmp85 = -_tmp68 * _tmp84 - _tmp69 * _tmp83 - _tmp72 * _tmp80 + _tmp81;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp87 =
      std::sqrt(Scalar(std::pow(_tmp42, Scalar(2)) + std::pow(_tmp47, Scalar(2))));
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 = _tmp43 * _tmp87;
  const Scalar _tmp90 = _tmp89 * (_tmp40 * _tmp47 * _tmp88 - _tmp42 * _tmp45 * _tmp88);
  const Scalar _tmp91 = _tmp61 * (_tmp49 * _tmp57 - _tmp53 * _tmp60 + _tmp57 * _tmp90);
  const Scalar _tmp92 = -_tmp73 * _tmp82 + _tmp76 * _tmp80 + _tmp80 * _tmp90 - _tmp83 * _tmp91;
  const Scalar _tmp93 = _tmp86 * _tmp92;
  const Scalar _tmp94 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp95 = _tmp85 * _tmp94;
  const Scalar _tmp96 = _tmp95 * (_tmp48 * _tmp91 - _tmp70 * _tmp93 - _tmp90);
  const Scalar _tmp97 = _tmp70 + _tmp96;
  const Scalar _tmp98 = _tmp80 * _tmp86;
  const Scalar _tmp99 = _tmp83 * _tmp86;
  const Scalar _tmp100 = -_tmp48 - _tmp97 * _tmp99;
  const Scalar _tmp101 = _tmp57 * _tmp61;
  const Scalar _tmp102 = _tmp32 + Scalar(125.0);
  const Scalar _tmp103 = _tmp21 + Scalar(110.0);
  const Scalar _tmp104 =
      std::pow(Scalar(std::pow(_tmp102, Scalar(2)) + std::pow(_tmp103, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = _tmp102 * _tmp104;
  const Scalar _tmp106 = _tmp105 * fh1;
  const Scalar _tmp107 = Scalar(1.0) * _tmp94;
  const Scalar _tmp108 = _tmp101 * _tmp83;
  const Scalar _tmp109 = _tmp103 * _tmp104;
  const Scalar _tmp110 = fh1 * (-_tmp105 * _tmp20 + _tmp109 * _tmp31);
  const Scalar _tmp111 = Scalar(1.0) * _tmp62;
  const Scalar _tmp112 = _tmp111 * _tmp68 - Scalar(1.0) * _tmp69;
  const Scalar _tmp113 = _tmp95 * (-_tmp112 * _tmp93 - Scalar(1.0) * _tmp91);
  const Scalar _tmp114 = _tmp112 + _tmp113;
  const Scalar _tmp115 = -_tmp114 * _tmp99 + Scalar(1.0);
  const Scalar _tmp116 = _tmp109 * fh1;
  const Scalar _tmp117 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp118 = _tmp64 * _tmp68 + _tmp67;
  const Scalar _tmp119 = 0;
  const Scalar _tmp120 = _tmp119 * _tmp86;
  const Scalar _tmp121 = -_tmp106 * _tmp89 * (_tmp100 * _tmp101 + _tmp97 * _tmp98 + Scalar(1.0)) -
                         _tmp110 * _tmp89 * (-_tmp107 * _tmp108 + _tmp107 * _tmp80) -
                         _tmp116 * _tmp89 * (_tmp101 * _tmp115 + _tmp114 * _tmp98) -
                         _tmp117 * _tmp89 * (-_tmp108 * _tmp120 + _tmp120 * _tmp80);
  const Scalar _tmp122 = Scalar(1.0) / (_tmp121);
  const Scalar _tmp123 = _tmp84 * _tmp86;
  const Scalar _tmp124 = _tmp65 + _tmp76;
  const Scalar _tmp125 = _tmp124 * _tmp68;
  const Scalar _tmp126 = Scalar(1.0) / (-_tmp125 + _tmp67 - _tmp73);
  const Scalar _tmp127 = _tmp118 * _tmp126;
  const Scalar _tmp128 = -_tmp119 * _tmp123 - _tmp124 * _tmp127 + _tmp65;
  const Scalar _tmp129 = Scalar(1.0) * _tmp66;
  const Scalar _tmp130 = Scalar(1.0) * _tmp126;
  const Scalar _tmp131 = _tmp130 * _tmp95;
  const Scalar _tmp132 = -_tmp107 * _tmp84 + _tmp124 * _tmp131;
  const Scalar _tmp133 = _tmp124 * _tmp126;
  const Scalar _tmp134 = -_tmp111 + _tmp113 * _tmp133 - _tmp114 * _tmp123;
  const Scalar _tmp135 = -_tmp123 * _tmp97 + _tmp133 * _tmp96 + _tmp63;
  const Scalar _tmp136 = _tmp125 * _tmp130 + Scalar(1.0);
  const Scalar _tmp137 = _tmp130 * _tmp68;
  const Scalar _tmp138 = fh1 * (_tmp35 + _tmp71);
  const Scalar _tmp139 = -_tmp109 * _tmp138 - Scalar(40.024799999999999) * _tmp17 - _tmp20 * fv1;
  const Scalar _tmp140 = _tmp105 * _tmp138 + Scalar(40.024799999999999) * _tmp27 + _tmp31 * fv1;
  const Scalar _tmp141 = _tmp124 * _tmp66;
  const Scalar _tmp142 = std::asinh(
      _tmp122 * (Scalar(1.0) * _tmp106 * (-_tmp129 * _tmp135 + _tmp130 * _tmp96) +
                 Scalar(1.0) * _tmp110 * (-_tmp129 * _tmp132 + _tmp131) +
                 Scalar(1.0) * _tmp116 * (_tmp113 * _tmp130 - _tmp129 * _tmp134) +
                 Scalar(1.0) * _tmp117 * (-_tmp118 * _tmp130 - _tmp128 * _tmp129 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp139 * (-_tmp129 * _tmp136 + _tmp137) +
                 Scalar(1.0) * _tmp140 * (_tmp130 * _tmp141 - _tmp130)));
  const Scalar _tmp143 = Scalar(1.4083112389913199) * _tmp121;
  const Scalar _tmp144 = _tmp107 * _tmp110;
  const Scalar _tmp145 = _tmp61 * _tmp83;
  const Scalar _tmp146 = _tmp117 * _tmp120;
  const Scalar _tmp147 = _tmp100 * _tmp106 * _tmp61 + _tmp115 * _tmp116 * _tmp61 -
                         _tmp144 * _tmp145 - _tmp145 * _tmp146;
  const Scalar _tmp148 = Scalar(1.0) / (_tmp147);
  const Scalar _tmp149 = _tmp130 * _tmp140;
  const Scalar _tmp150 =
      std::asinh(_tmp148 * (_tmp106 * _tmp135 * _tmp66 + _tmp110 * _tmp132 * _tmp66 +
                            _tmp116 * _tmp134 * _tmp66 + _tmp117 * _tmp128 * _tmp66 +
                            _tmp136 * _tmp139 * _tmp66 - _tmp141 * _tmp149));
  const Scalar _tmp151 = Scalar(1.4083112389913199) * _tmp147;
  const Scalar _tmp152 = _tmp106 * _tmp86 * _tmp97 + _tmp114 * _tmp116 * _tmp86 + _tmp144 + _tmp146;
  const Scalar _tmp153 = Scalar(1.0) / (_tmp152);
  const Scalar _tmp154 = std::asinh(_tmp153 * (-_tmp106 * _tmp126 * _tmp96 - _tmp110 * _tmp131 -
                                               _tmp113 * _tmp116 * _tmp126 + _tmp117 * _tmp127 -
                                               _tmp137 * _tmp139 + _tmp149));
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp152;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 * (-std::sinh(Scalar(1.0) * _tmp1) -
                std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                          (-_tmp1 * _tmp33 -
                           Scalar(125.0) *
                               std::sqrt(Scalar(
                                   Scalar(0.77439999999999998) *
                                       std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp21 - 1),
                                                Scalar(2)) +
                                   std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp32 - 1),
                                            Scalar(2))))))) -
      lc0;
  _res(1, 0) =
      _tmp143 *
          (-std::sinh(Scalar(1.0) * _tmp142) -
           std::sinh(
               Scalar(0.71007031138673404) * _tmp122 *
               (-_tmp142 * _tmp143 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp41), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp46 - 1),
                                     Scalar(2))))))) -
      lc1;
  _res(2, 0) =
      _tmp151 * (-std::sinh(Scalar(1.0) * _tmp150) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp148 *
                           (-_tmp150 * _tmp151 -
                            Scalar(125.0) *
                                std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp50),
                                                 Scalar(2)) +
                                    std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp54),
                                             Scalar(2))))))) -
      lc2;
  _res(3, 0) =
      _tmp155 * (-std::sinh(Scalar(1.0) * _tmp154) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp153 *
                           (-_tmp154 * _tmp155 -
                            Scalar(125.0) *
                                std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp77),
                                                 Scalar(2)) +
                                    std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp74 - 1),
                                             Scalar(2))))))) -
      lc3;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
