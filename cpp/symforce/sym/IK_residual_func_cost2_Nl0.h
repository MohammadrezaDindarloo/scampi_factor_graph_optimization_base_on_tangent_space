// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl0
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl0(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 528

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (161)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = 2 * _tmp3;
  const Scalar _tmp5 = _tmp2 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp7 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp8 = 2 * _tmp7;
  const Scalar _tmp9 = _tmp6 * _tmp8;
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = -_tmp10;
  const Scalar _tmp12 = _tmp4 * _tmp7;
  const Scalar _tmp13 = 2 * _tmp2 * _tmp6;
  const Scalar _tmp14 = _tmp12 - _tmp13;
  const Scalar _tmp15 = -Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp17 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 +
                        Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999);
  const Scalar _tmp19 = _tmp15 - _tmp18;
  const Scalar _tmp20 = _tmp11 + _tmp19;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = _tmp2 * _tmp8;
  const Scalar _tmp25 = _tmp4 * _tmp6;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp28;
  const Scalar _tmp30 = _tmp27 - _tmp29;
  const Scalar _tmp31 = _tmp23 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(0, 0);
  const Scalar _tmp33 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp21 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp32 - 1), Scalar(2));
  const Scalar _tmp34 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp36 = -_tmp35;
  const Scalar _tmp37 =
      -Scalar(0.010999999999999999) * _tmp16 - Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp39 = _tmp37 - _tmp38;
  const Scalar _tmp40 = _tmp36 + _tmp39;
  const Scalar _tmp41 = _tmp35 + _tmp39;
  const Scalar _tmp42 = _tmp27 + _tmp29;
  const Scalar _tmp43 = _tmp23 + _tmp42;
  const Scalar _tmp44 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp45 = _tmp44 + Scalar(-125.0);
  const Scalar _tmp46 = Scalar(1.0) / (_tmp45);
  const Scalar _tmp47 = _tmp10 + _tmp19;
  const Scalar _tmp48 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp49 = _tmp48 + Scalar(110.0);
  const Scalar _tmp50 = _tmp46 * _tmp49;
  const Scalar _tmp51 = _tmp15 + _tmp18;
  const Scalar _tmp52 = _tmp10 + _tmp51;
  const Scalar _tmp53 = _tmp52 + position_vector(1, 0);
  const Scalar _tmp54 = _tmp53 + Scalar(-110.0);
  const Scalar _tmp55 = _tmp22 + _tmp42;
  const Scalar _tmp56 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp57 = _tmp56 + Scalar(-125.0);
  const Scalar _tmp58 = std::pow(Scalar(std::pow(_tmp54, Scalar(2)) + std::pow(_tmp57, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp59 = _tmp57 * _tmp58;
  const Scalar _tmp60 = _tmp41 * _tmp59;
  const Scalar _tmp61 = _tmp37 + _tmp38;
  const Scalar _tmp62 = _tmp35 + _tmp61;
  const Scalar _tmp63 = _tmp54 * _tmp58;
  const Scalar _tmp64 = Scalar(1.0) / (_tmp50 * _tmp59 - _tmp63);
  const Scalar _tmp65 = _tmp64 * (-_tmp50 * _tmp60 + _tmp62 * _tmp63);
  const Scalar _tmp66 = _tmp41 * _tmp50 + _tmp50 * _tmp65;
  const Scalar _tmp67 = Scalar(1.0) * _tmp47;
  const Scalar _tmp68 = -_tmp67;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp52 + _tmp68);
  const Scalar _tmp70 = Scalar(1.0) * _tmp43;
  const Scalar _tmp71 = _tmp69 * (-_tmp55 + _tmp70);
  const Scalar _tmp72 = _tmp64 * (-_tmp59 * _tmp62 + _tmp60);
  const Scalar _tmp73 = -_tmp41 + _tmp50 * _tmp72 - _tmp66 * _tmp71;
  const Scalar _tmp74 = _tmp36 + _tmp61;
  const Scalar _tmp75 = _tmp22 + _tmp30;
  const Scalar _tmp76 = _tmp75 + position_vector(0, 0);
  const Scalar _tmp77 = _tmp76 + Scalar(125.0);
  const Scalar _tmp78 = _tmp11 + _tmp51;
  const Scalar _tmp79 = _tmp78 + position_vector(1, 0);
  const Scalar _tmp80 = _tmp79 + Scalar(-110.0);
  const Scalar _tmp81 = std::pow(Scalar(std::pow(_tmp77, Scalar(2)) + std::pow(_tmp80, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp82 = _tmp77 * _tmp81;
  const Scalar _tmp83 = _tmp41 * _tmp82;
  const Scalar _tmp84 = _tmp80 * _tmp81;
  const Scalar _tmp85 = _tmp50 * _tmp82 - _tmp84;
  const Scalar _tmp86 = -_tmp50 * _tmp83 - _tmp65 * _tmp85 + _tmp74 * _tmp84;
  const Scalar _tmp87 = -_tmp71 * _tmp86 - _tmp72 * _tmp85 - _tmp74 * _tmp82 + _tmp83;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 =
      std::sqrt(Scalar(std::pow(_tmp45, Scalar(2)) + std::pow(_tmp49, Scalar(2))));
  const Scalar _tmp90 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp91 = _tmp46 * _tmp89;
  const Scalar _tmp92 = _tmp91 * (_tmp43 * _tmp49 * _tmp90 - _tmp45 * _tmp47 * _tmp90);
  const Scalar _tmp93 = _tmp64 * (_tmp52 * _tmp59 - _tmp55 * _tmp63 + _tmp59 * _tmp92);
  const Scalar _tmp94 = -_tmp75 * _tmp84 + _tmp78 * _tmp82 + _tmp82 * _tmp92 - _tmp85 * _tmp93;
  const Scalar _tmp95 = _tmp88 * _tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp97 = _tmp87 * _tmp96;
  const Scalar _tmp98 = _tmp97 * (_tmp50 * _tmp93 - _tmp73 * _tmp95 - _tmp92);
  const Scalar _tmp99 = _tmp73 + _tmp98;
  const Scalar _tmp100 = _tmp82 * _tmp88;
  const Scalar _tmp101 = _tmp85 * _tmp88;
  const Scalar _tmp102 = -_tmp101 * _tmp99 - _tmp50;
  const Scalar _tmp103 = _tmp59 * _tmp64;
  const Scalar _tmp104 = _tmp32 + Scalar(125.0);
  const Scalar _tmp105 = _tmp21 + Scalar(110.0);
  const Scalar _tmp106 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp105, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp107 = _tmp104 * _tmp106;
  const Scalar _tmp108 = _tmp107 * fh1;
  const Scalar _tmp109 = Scalar(1.0) * _tmp96;
  const Scalar _tmp110 = _tmp103 * _tmp85;
  const Scalar _tmp111 = _tmp105 * _tmp106;
  const Scalar _tmp112 = fh1 * (-_tmp107 * _tmp20 + _tmp111 * _tmp31);
  const Scalar _tmp113 = Scalar(1.0) * _tmp65;
  const Scalar _tmp114 = _tmp113 * _tmp71 - Scalar(1.0) * _tmp72;
  const Scalar _tmp115 = _tmp97 * (-_tmp114 * _tmp95 - Scalar(1.0) * _tmp93);
  const Scalar _tmp116 = _tmp114 + _tmp115;
  const Scalar _tmp117 = -_tmp101 * _tmp116 + Scalar(1.0);
  const Scalar _tmp118 = _tmp111 * fh1;
  const Scalar _tmp119 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp120 = _tmp67 * _tmp71 + _tmp70;
  const Scalar _tmp121 = 0;
  const Scalar _tmp122 = _tmp121 * _tmp88;
  const Scalar _tmp123 = -_tmp108 * _tmp91 * (_tmp100 * _tmp99 + _tmp102 * _tmp103 + Scalar(1.0)) -
                         _tmp112 * _tmp91 * (-_tmp109 * _tmp110 + _tmp109 * _tmp82) -
                         _tmp118 * _tmp91 * (_tmp100 * _tmp116 + _tmp103 * _tmp117) -
                         _tmp119 * _tmp91 * (-_tmp110 * _tmp122 + _tmp122 * _tmp82);
  const Scalar _tmp124 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp125 = _tmp86 * _tmp88;
  const Scalar _tmp126 = _tmp68 + _tmp78;
  const Scalar _tmp127 = _tmp126 * _tmp71;
  const Scalar _tmp128 = Scalar(1.0) / (-_tmp127 + _tmp70 - _tmp75);
  const Scalar _tmp129 = _tmp120 * _tmp128;
  const Scalar _tmp130 = -_tmp121 * _tmp125 - _tmp126 * _tmp129 + _tmp68;
  const Scalar _tmp131 = Scalar(1.0) * _tmp69;
  const Scalar _tmp132 = Scalar(1.0) * _tmp128;
  const Scalar _tmp133 = _tmp132 * _tmp97;
  const Scalar _tmp134 = -_tmp109 * _tmp86 + _tmp126 * _tmp133;
  const Scalar _tmp135 = _tmp126 * _tmp128;
  const Scalar _tmp136 = -_tmp113 + _tmp115 * _tmp135 - _tmp116 * _tmp125;
  const Scalar _tmp137 = -_tmp125 * _tmp99 + _tmp135 * _tmp98 + _tmp66;
  const Scalar _tmp138 = _tmp127 * _tmp132 + Scalar(1.0);
  const Scalar _tmp139 = _tmp132 * _tmp71;
  const Scalar _tmp140 = _tmp40 * fh1;
  const Scalar _tmp141 = -_tmp111 * _tmp140 - Scalar(40.024799999999999) * _tmp14 - _tmp20 * fv1;
  const Scalar _tmp142 = _tmp107 * _tmp140 + Scalar(40.024799999999999) * _tmp26 + _tmp31 * fv1;
  const Scalar _tmp143 = _tmp126 * _tmp69;
  const Scalar _tmp144 = std::asinh(
      _tmp124 * (Scalar(1.0) * _tmp108 * (-_tmp131 * _tmp137 + _tmp132 * _tmp98) +
                 Scalar(1.0) * _tmp112 * (-_tmp131 * _tmp134 + _tmp133) +
                 Scalar(1.0) * _tmp118 * (_tmp115 * _tmp132 - _tmp131 * _tmp136) +
                 Scalar(1.0) * _tmp119 * (-_tmp120 * _tmp132 - _tmp130 * _tmp131 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp141 * (-_tmp131 * _tmp138 + _tmp139) +
                 Scalar(1.0) * _tmp142 * (_tmp132 * _tmp143 - _tmp132)));
  const Scalar _tmp145 = Scalar(1.4083112389913199) * _tmp123;
  const Scalar _tmp146 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp44), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp48 - 1), Scalar(2));
  const Scalar _tmp147 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp53), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp56), Scalar(2));
  const Scalar _tmp148 = _tmp109 * _tmp112;
  const Scalar _tmp149 = _tmp64 * _tmp85;
  const Scalar _tmp150 = _tmp119 * _tmp122;
  const Scalar _tmp151 = _tmp102 * _tmp108 * _tmp64 + _tmp117 * _tmp118 * _tmp64 -
                         _tmp148 * _tmp149 - _tmp149 * _tmp150;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 = _tmp132 * _tmp142;
  const Scalar _tmp154 =
      std::asinh(_tmp152 * (_tmp108 * _tmp137 * _tmp69 + _tmp112 * _tmp134 * _tmp69 +
                            _tmp118 * _tmp136 * _tmp69 + _tmp119 * _tmp130 * _tmp69 +
                            _tmp138 * _tmp141 * _tmp69 - _tmp143 * _tmp153));
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp151;
  const Scalar _tmp156 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp79), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp76 - 1), Scalar(2));
  const Scalar _tmp157 = _tmp108 * _tmp88 * _tmp99 + _tmp116 * _tmp118 * _tmp88 + _tmp148 + _tmp150;
  const Scalar _tmp158 = Scalar(1.0) / (_tmp157);
  const Scalar _tmp159 = std::asinh(_tmp158 * (-_tmp108 * _tmp128 * _tmp98 - _tmp112 * _tmp133 -
                                               _tmp115 * _tmp118 * _tmp128 + _tmp119 * _tmp129 -
                                               _tmp139 * _tmp141 + _tmp153));
  const Scalar _tmp160 = Scalar(1.4083112389913199) * _tmp157;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp34 *
          (-std::sinh(Scalar(1.0) * _tmp1) -
           std::sinh(Scalar(0.71007031138673404) * _tmp0 * (-_tmp1 * _tmp34 - std::sqrt(_tmp33)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp33 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp40 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp145 * (-std::sinh(Scalar(1.0) * _tmp144) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp124 *
                           (-_tmp144 * _tmp145 - std::sqrt(_tmp146)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp146 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp41 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp155 * (-std::sinh(Scalar(1.0) * _tmp154) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp152 *
                           (-std::sqrt(_tmp147) - _tmp154 * _tmp155))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp147 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp62 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp160 * (-std::sinh(Scalar(1.0) * _tmp159) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp158 *
                           (-std::sqrt(_tmp156) - _tmp159 * _tmp160))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp156 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp74 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
