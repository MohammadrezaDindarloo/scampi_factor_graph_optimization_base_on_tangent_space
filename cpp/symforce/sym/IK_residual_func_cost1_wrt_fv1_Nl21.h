// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl21
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl21(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 607

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (193)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp10 = 2 * _tmp5 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp3;
  const Scalar _tmp13 = _tmp10 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = 2 * _tmp3;
  const Scalar _tmp16 = _tmp15 * _tmp9;
  const Scalar _tmp17 = _tmp11 * _tmp5;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp14 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp8;
  const Scalar _tmp21 = _tmp20 + position_vector(0, 0);
  const Scalar _tmp22 = -2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp25 = _tmp15 * _tmp5;
  const Scalar _tmp26 = _tmp11 * _tmp9;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = -_tmp24 + _tmp29;
  const Scalar _tmp31 = _tmp23 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(1, 0);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = _tmp14 - _tmp18;
  const Scalar _tmp35 = _tmp34 + _tmp8;
  const Scalar _tmp36 = _tmp35 + position_vector(0, 0);
  const Scalar _tmp37 = _tmp36 + Scalar(1.9874742000000001);
  const Scalar _tmp38 = -_tmp23;
  const Scalar _tmp39 = _tmp30 + _tmp38;
  const Scalar _tmp40 = _tmp39 + position_vector(1, 0);
  const Scalar _tmp41 = _tmp40 + Scalar(8.3196563700000006);
  const Scalar _tmp42 = std::pow(Scalar(std::pow(_tmp37, Scalar(2)) + std::pow(_tmp41, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp43 = _tmp37 * _tmp42;
  const Scalar _tmp44 = _tmp41 * _tmp42;
  const Scalar _tmp45 = _tmp34 + _tmp7;
  const Scalar _tmp46 = _tmp24 + _tmp38;
  const Scalar _tmp47 = _tmp29 + _tmp46;
  const Scalar _tmp48 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp49 = _tmp48 + Scalar(8.3888750099999996);
  const Scalar _tmp50 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(-2.5202214700000001);
  const Scalar _tmp52 =
      std::sqrt(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp51, Scalar(2))));
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = Scalar(1.0) / (_tmp51);
  const Scalar _tmp55 = _tmp52 * _tmp54;
  const Scalar _tmp56 = _tmp55 * (_tmp45 * _tmp49 * _tmp53 - _tmp47 * _tmp51 * _tmp53);
  const Scalar _tmp57 = _tmp23 + _tmp24 + _tmp29;
  const Scalar _tmp58 = _tmp57 + position_vector(1, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(-4.7752063900000001);
  const Scalar _tmp60 = _tmp19 + _tmp7;
  const Scalar _tmp61 = _tmp60 + position_vector(0, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(-2.71799795);
  const Scalar _tmp63 = std::pow(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp62, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp64 = _tmp62 * _tmp63;
  const Scalar _tmp65 = _tmp59 * _tmp63;
  const Scalar _tmp66 = _tmp56 * _tmp64 + _tmp57 * _tmp64 - _tmp60 * _tmp65;
  const Scalar _tmp67 = _tmp49 * _tmp54;
  const Scalar _tmp68 = _tmp43 * _tmp67 - _tmp44;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp64 * _tmp67 - _tmp65);
  const Scalar _tmp70 = _tmp68 * _tmp69;
  const Scalar _tmp71 = -_tmp35 * _tmp44 + _tmp39 * _tmp43 + _tmp43 * _tmp56 - _tmp66 * _tmp70;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp73 = Scalar(1.0) * _tmp72;
  const Scalar _tmp74 = _tmp64 * _tmp70;
  const Scalar _tmp75 = _tmp32 + Scalar(-4.8333311099999996);
  const Scalar _tmp76 = _tmp21 + Scalar(1.79662371);
  const Scalar _tmp77 = std::pow(Scalar(std::pow(_tmp75, Scalar(2)) + std::pow(_tmp76, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp78 = _tmp75 * _tmp77;
  const Scalar _tmp79 = _tmp76 * _tmp77;
  const Scalar _tmp80 = fh1 * (_tmp20 * _tmp78 - _tmp31 * _tmp79);
  const Scalar _tmp81 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp82 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp83 = -_tmp82;
  const Scalar _tmp84 = -Scalar(0.010999999999999999) * _tmp22 -
                        Scalar(0.010999999999999999) * _tmp4 + Scalar(-0.010999999999999999);
  const Scalar _tmp85 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp86 = _tmp84 - _tmp85;
  const Scalar _tmp87 = _tmp83 + _tmp86;
  const Scalar _tmp88 = _tmp84 + _tmp85;
  const Scalar _tmp89 = _tmp82 + _tmp88;
  const Scalar _tmp90 = _tmp82 + _tmp86;
  const Scalar _tmp91 = _tmp64 * _tmp90;
  const Scalar _tmp92 = _tmp65 * _tmp89 - _tmp67 * _tmp91;
  const Scalar _tmp93 = _tmp67 * _tmp90;
  const Scalar _tmp94 = -_tmp43 * _tmp93 + _tmp44 * _tmp87 - _tmp70 * _tmp92;
  const Scalar _tmp95 = Scalar(1.0) * _tmp47;
  const Scalar _tmp96 = -_tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp57 + _tmp96);
  const Scalar _tmp98 = Scalar(1.0) * _tmp45;
  const Scalar _tmp99 = _tmp97 * (-_tmp60 + _tmp98);
  const Scalar _tmp100 = -_tmp64 * _tmp89 + _tmp91;
  const Scalar _tmp101 = -_tmp100 * _tmp70 - _tmp43 * _tmp87 + _tmp43 * _tmp90 - _tmp94 * _tmp99;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp103 = _tmp95 * _tmp99 + _tmp98;
  const Scalar _tmp104 = 0;
  const Scalar _tmp105 = _tmp102 * _tmp104;
  const Scalar _tmp106 = _tmp55 * (_tmp105 * _tmp43 - _tmp105 * _tmp74);
  const Scalar _tmp107 = Scalar(1.0) * _tmp69;
  const Scalar _tmp108 = _tmp107 * _tmp92;
  const Scalar _tmp109 = -_tmp100 * _tmp107 + _tmp108 * _tmp99;
  const Scalar _tmp110 = _tmp102 * _tmp71;
  const Scalar _tmp111 = _tmp101 * _tmp72;
  const Scalar _tmp112 = _tmp111 * (-_tmp107 * _tmp66 - _tmp109 * _tmp110);
  const Scalar _tmp113 = _tmp109 + _tmp112;
  const Scalar _tmp114 = _tmp102 * _tmp68;
  const Scalar _tmp115 = -_tmp113 * _tmp114 + Scalar(1.0);
  const Scalar _tmp116 = _tmp64 * _tmp69;
  const Scalar _tmp117 = _tmp102 * _tmp43;
  const Scalar _tmp118 = _tmp78 * fh1;
  const Scalar _tmp119 = _tmp67 * _tmp69;
  const Scalar _tmp120 = _tmp119 * _tmp92 + _tmp93;
  const Scalar _tmp121 = _tmp100 * _tmp119 - _tmp120 * _tmp99 - _tmp90;
  const Scalar _tmp122 = _tmp111 * (-_tmp110 * _tmp121 + _tmp119 * _tmp66 - _tmp56);
  const Scalar _tmp123 = _tmp121 + _tmp122;
  const Scalar _tmp124 = -_tmp114 * _tmp123 - _tmp67;
  const Scalar _tmp125 = _tmp79 * fh1;
  const Scalar _tmp126 = -_tmp106 * _tmp81 -
                         _tmp118 * _tmp55 * (_tmp113 * _tmp117 + _tmp115 * _tmp116) -
                         _tmp125 * _tmp55 * (_tmp116 * _tmp124 + _tmp117 * _tmp123 + Scalar(1.0)) -
                         _tmp55 * _tmp80 * (_tmp43 * _tmp73 - _tmp73 * _tmp74);
  const Scalar _tmp127 = Scalar(1.0) / (_tmp126);
  const Scalar _tmp128 = _tmp39 + _tmp96;
  const Scalar _tmp129 = _tmp128 * _tmp99;
  const Scalar _tmp130 = Scalar(1.0) / (-_tmp129 - _tmp35 + _tmp98);
  const Scalar _tmp131 = Scalar(1.0) * _tmp130;
  const Scalar _tmp132 = _tmp102 * _tmp94;
  const Scalar _tmp133 = _tmp128 * _tmp130;
  const Scalar _tmp134 = _tmp120 + _tmp122 * _tmp133 - _tmp123 * _tmp132;
  const Scalar _tmp135 = Scalar(1.0) * _tmp97;
  const Scalar _tmp136 = -_tmp108 + _tmp112 * _tmp133 - _tmp113 * _tmp132;
  const Scalar _tmp137 = _tmp111 * _tmp131;
  const Scalar _tmp138 = _tmp128 * _tmp137 - _tmp73 * _tmp94;
  const Scalar _tmp139 = fh1 * (_tmp83 + _tmp88);
  const Scalar _tmp140 = Scalar(5.1796800000000003) * _tmp13 + _tmp139 * _tmp79 + _tmp20 * fv1;
  const Scalar _tmp141 = _tmp128 * _tmp97;
  const Scalar _tmp142 = Scalar(1.0) * _tmp131 * _tmp141 - Scalar(1.0) * _tmp131;
  const Scalar _tmp143 = -_tmp139 * _tmp78 - Scalar(5.1796800000000003) * _tmp27 - _tmp31 * fv1;
  const Scalar _tmp144 = _tmp131 * _tmp99;
  const Scalar _tmp145 = _tmp129 * _tmp131 + Scalar(1.0);
  const Scalar _tmp146 = -Scalar(1.0) * _tmp135 * _tmp145 + Scalar(1.0) * _tmp144;
  const Scalar _tmp147 = _tmp103 * _tmp130;
  const Scalar _tmp148 = _tmp97 * (-_tmp104 * _tmp132 - _tmp128 * _tmp147 + _tmp96);
  const Scalar _tmp149 = -Scalar(1.0) * _tmp103 * _tmp131 - Scalar(1.0) * _tmp148 + Scalar(1.0);
  const Scalar _tmp150 = Scalar(1.0) * _tmp118 * (_tmp112 * _tmp131 - _tmp135 * _tmp136) +
                         Scalar(1.0) * _tmp125 * (_tmp122 * _tmp131 - _tmp134 * _tmp135) +
                         _tmp140 * _tmp142 + _tmp143 * _tmp146 + _tmp149 * _tmp81 +
                         Scalar(1.0) * _tmp80 * (-_tmp135 * _tmp138 + _tmp137);
  const Scalar _tmp151 = std::asinh(_tmp127 * _tmp150);
  const Scalar _tmp152 = Scalar(1.0) * _tmp151;
  const Scalar _tmp153 = std::pow(_tmp126, Scalar(-2));
  const Scalar _tmp154 = _tmp28 + _tmp46;
  const Scalar _tmp155 = _tmp106 * _tmp153;
  const Scalar _tmp156 =
      (_tmp127 * (_tmp142 * _tmp20 + _tmp146 * _tmp154 - _tmp149) - _tmp150 * _tmp155) /
      std::sqrt(Scalar(std::pow(_tmp150, Scalar(2)) * _tmp153 + 1));
  const Scalar _tmp157 = Scalar(9.6622558468725703) * _tmp126;
  const Scalar _tmp158 =
      -_tmp151 * _tmp157 -
      Scalar(8.3888750099999996) *
          std::sqrt(
              Scalar(Scalar(0.090254729040973036) *
                         std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp50), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp48 - 1), Scalar(2))));
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp106;
  const Scalar _tmp160 = Scalar(0.1034955) * _tmp127;
  const Scalar _tmp161 = _tmp158 * _tmp160;
  const Scalar _tmp162 = _tmp131 * _tmp140;
  const Scalar _tmp163 = _tmp145 * _tmp97;
  const Scalar _tmp164 = _tmp118 * _tmp136 * _tmp97 + _tmp125 * _tmp134 * _tmp97 +
                         _tmp138 * _tmp80 * _tmp97 - _tmp141 * _tmp162 + _tmp143 * _tmp163 +
                         _tmp148 * _tmp81;
  const Scalar _tmp165 = _tmp105 * _tmp81;
  const Scalar _tmp166 = _tmp73 * _tmp80;
  const Scalar _tmp167 =
      _tmp115 * _tmp118 * _tmp69 + _tmp124 * _tmp125 * _tmp69 - _tmp165 * _tmp70 - _tmp166 * _tmp70;
  const Scalar _tmp168 = Scalar(1.0) / (_tmp167);
  const Scalar _tmp169 = std::asinh(_tmp164 * _tmp168);
  const Scalar _tmp170 = Scalar(1.0) * _tmp169;
  const Scalar _tmp171 = std::pow(_tmp167, Scalar(-2));
  const Scalar _tmp172 = _tmp105 * _tmp171 * _tmp70;
  const Scalar _tmp173 = _tmp131 * _tmp20;
  const Scalar _tmp174 =
      (-_tmp164 * _tmp172 + _tmp168 * (-_tmp141 * _tmp173 - _tmp148 + _tmp154 * _tmp163)) /
      std::sqrt(Scalar(std::pow(_tmp164, Scalar(2)) * _tmp171 + 1));
  const Scalar _tmp175 = Scalar(9.6622558468725703) * _tmp105;
  const Scalar _tmp176 = _tmp175 * _tmp70;
  const Scalar _tmp177 = Scalar(9.6622558468725703) * _tmp167;
  const Scalar _tmp178 = Scalar(0.1034955) * _tmp168;
  const Scalar _tmp179 =
      -_tmp169 * _tmp177 -
      Scalar(4.7752063900000001) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp58), Scalar(2)) +
                     Scalar(0.32397683292140877) *
                         std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp61), Scalar(2))));
  const Scalar _tmp180 = _tmp178 * _tmp179;
  const Scalar _tmp181 =
      _tmp102 * _tmp113 * _tmp118 + _tmp102 * _tmp123 * _tmp125 + _tmp165 + _tmp166;
  const Scalar _tmp182 = std::pow(_tmp181, Scalar(-2));
  const Scalar _tmp183 = _tmp105 * _tmp182;
  const Scalar _tmp184 = Scalar(1.0) / (_tmp181);
  const Scalar _tmp185 = -_tmp112 * _tmp118 * _tmp130 - _tmp122 * _tmp125 * _tmp130 -
                         _tmp137 * _tmp80 - _tmp143 * _tmp144 + _tmp147 * _tmp81 + _tmp162;
  const Scalar _tmp186 = std::asinh(_tmp184 * _tmp185);
  const Scalar _tmp187 = Scalar(1.0) * _tmp186;
  const Scalar _tmp188 = (_tmp183 * _tmp185 + _tmp184 * (-_tmp144 * _tmp154 - _tmp147 + _tmp173)) /
                         std::sqrt(Scalar(_tmp182 * std::pow(_tmp185, Scalar(2)) + 1));
  const Scalar _tmp189 = Scalar(9.6622558468725703) * _tmp181;
  const Scalar _tmp190 =
      -_tmp186 * _tmp189 -
      Scalar(8.3196563700000006) *
          std::sqrt(
              Scalar(Scalar(0.057067943376852184) *
                         std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp36 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp40 - 1), Scalar(2))));
  const Scalar _tmp191 = Scalar(0.1034955) * _tmp184;
  const Scalar _tmp192 = _tmp190 * _tmp191;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp33 *
      (_tmp2 * std::sinh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::sinh(
                   Scalar(0.1034955) * _tmp0 *
                   (-_tmp1 * _tmp33 -
                    Scalar(4.8333311099999996) *
                        std::sqrt(Scalar(
                            std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp32), Scalar(2)) +
                            Scalar(0.13817235445745474) *
                                std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp21 - 1),
                                         Scalar(2)))))));
  _res(1, 0) =
      -_tmp157 *
          (-Scalar(0.87653584775870996) * _tmp155 + Scalar(1.0) * _tmp156 * std::sinh(_tmp152) -
           (-Scalar(0.1034955) * _tmp155 * _tmp158 +
            _tmp160 * (-_tmp151 * _tmp159 - _tmp156 * _tmp157)) *
               std::sinh(_tmp161)) -
      _tmp159 * (Scalar(0.87653584775870996) * _tmp127 + std::cosh(_tmp152) - std::cosh(_tmp161));
  _res(2, 0) =
      -_tmp176 * (Scalar(0.86565325453551001) * _tmp168 + std::cosh(_tmp170) - std::cosh(_tmp180)) -
      _tmp177 *
          (-Scalar(0.86565325453551001) * _tmp172 + Scalar(1.0) * _tmp174 * std::sinh(_tmp170) -
           (-Scalar(0.1034955) * _tmp172 * _tmp179 +
            _tmp178 * (-_tmp169 * _tmp176 - _tmp174 * _tmp177)) *
               std::sinh(_tmp180));
  _res(3, 0) =
      _tmp175 * (Scalar(0.87679799772039002) * _tmp184 + std::cosh(_tmp187) - std::cosh(_tmp192)) -
      _tmp189 *
          (Scalar(0.87679799772039002) * _tmp183 + Scalar(1.0) * _tmp188 * std::sinh(_tmp187) -
           (Scalar(0.1034955) * _tmp183 * _tmp190 +
            _tmp191 * (_tmp175 * _tmp186 - _tmp188 * _tmp189)) *
               std::sinh(_tmp192));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
