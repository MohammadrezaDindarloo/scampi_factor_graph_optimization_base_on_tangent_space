// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl5
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl5(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 601

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (190)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp10 = 2 * _tmp3;
  const Scalar _tmp11 = _tmp10 * _tmp9;
  const Scalar _tmp12 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp13 = 2 * _tmp5;
  const Scalar _tmp14 = _tmp12 * _tmp13;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp13 * _tmp9;
  const Scalar _tmp17 = _tmp10 * _tmp12;
  const Scalar _tmp18 = _tmp16 - _tmp17;
  const Scalar _tmp19 = Scalar(0.010999999999999999) * _tmp18;
  const Scalar _tmp20 = -_tmp19;
  const Scalar _tmp21 = -_tmp15 + _tmp20;
  const Scalar _tmp22 = _tmp21 + _tmp8;
  const Scalar _tmp23 = _tmp22 + position_vector(1, 0);
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp25 = -_tmp24;
  const Scalar _tmp26 = _tmp13 * _tmp3;
  const Scalar _tmp27 = 2 * _tmp12 * _tmp9;
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = 1 - 2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp31 = Scalar(0.20999999999999999) * _tmp30 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp32 = _tmp29 - _tmp31;
  const Scalar _tmp33 = _tmp25 + _tmp32;
  const Scalar _tmp34 = _tmp33 + position_vector(0, 0);
  const Scalar _tmp35 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp36 = _tmp24 + _tmp32;
  const Scalar _tmp37 = _tmp36 + position_vector(0, 0);
  const Scalar _tmp38 = _tmp21 + _tmp7;
  const Scalar _tmp39 = _tmp38 + position_vector(1, 0);
  const Scalar _tmp40 = _tmp15 + _tmp20 + _tmp8;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp42 = _tmp41 + Scalar(110.0);
  const Scalar _tmp43 = _tmp29 + _tmp31;
  const Scalar _tmp44 = _tmp25 + _tmp43;
  const Scalar _tmp45 = _tmp44 + position_vector(0, 0);
  const Scalar _tmp46 = _tmp45 + Scalar(-125.0);
  const Scalar _tmp47 = std::pow(Scalar(std::pow(_tmp42, Scalar(2)) + std::pow(_tmp46, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp48 = _tmp46 * _tmp47;
  const Scalar _tmp49 = _tmp39 + Scalar(-110.0);
  const Scalar _tmp50 = _tmp37 + Scalar(125.0);
  const Scalar _tmp51 =
      std::sqrt(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp50, Scalar(2))));
  const Scalar _tmp52 = Scalar(1.0) / (_tmp51);
  const Scalar _tmp53 = Scalar(1.0) / (_tmp50);
  const Scalar _tmp54 = _tmp51 * _tmp53;
  const Scalar _tmp55 = _tmp54 * (_tmp36 * _tmp49 * _tmp52 - _tmp38 * _tmp50 * _tmp52);
  const Scalar _tmp56 = _tmp42 * _tmp47;
  const Scalar _tmp57 = _tmp15 + _tmp7;
  const Scalar _tmp58 = _tmp20 + _tmp57;
  const Scalar _tmp59 = _tmp58 + position_vector(1, 0);
  const Scalar _tmp60 = _tmp59 + Scalar(-110.0);
  const Scalar _tmp61 = _tmp24 + _tmp43;
  const Scalar _tmp62 = _tmp61 + position_vector(0, 0);
  const Scalar _tmp63 = _tmp62 + Scalar(-125.0);
  const Scalar _tmp64 = std::pow(Scalar(std::pow(_tmp60, Scalar(2)) + std::pow(_tmp63, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp65 = _tmp63 * _tmp64;
  const Scalar _tmp66 = _tmp60 * _tmp64;
  const Scalar _tmp67 = _tmp55 * _tmp65 + _tmp58 * _tmp65 - _tmp61 * _tmp66;
  const Scalar _tmp68 = _tmp49 * _tmp53;
  const Scalar _tmp69 = _tmp48 * _tmp68 - _tmp56;
  const Scalar _tmp70 = Scalar(1.0) / (_tmp65 * _tmp68 - _tmp66);
  const Scalar _tmp71 = _tmp69 * _tmp70;
  const Scalar _tmp72 = _tmp40 * _tmp48 - _tmp44 * _tmp56 + _tmp48 * _tmp55 - _tmp67 * _tmp71;
  const Scalar _tmp73 = Scalar(1.0) / (_tmp72);
  const Scalar _tmp74 = Scalar(1.0) * _tmp73;
  const Scalar _tmp75 = _tmp23 + Scalar(110.0);
  const Scalar _tmp76 = _tmp34 + Scalar(125.0);
  const Scalar _tmp77 = std::pow(Scalar(std::pow(_tmp75, Scalar(2)) + std::pow(_tmp76, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp78 = _tmp75 * _tmp77;
  const Scalar _tmp79 = _tmp76 * _tmp77;
  const Scalar _tmp80 = fh1 * (-_tmp22 * _tmp79 + _tmp33 * _tmp78);
  const Scalar _tmp81 = Scalar(0.20999999999999999) * _tmp26 - Scalar(0.20999999999999999) * _tmp27;
  const Scalar _tmp82 =
      -Scalar(0.010999999999999999) * _tmp30 - Scalar(0.010999999999999999) * _tmp4;
  const Scalar _tmp83 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp84 = _tmp82 - _tmp83;
  const Scalar _tmp85 = _tmp81 + _tmp84;
  const Scalar _tmp86 = -_tmp81;
  const Scalar _tmp87 = _tmp82 + _tmp83;
  const Scalar _tmp88 = _tmp86 + _tmp87;
  const Scalar _tmp89 = _tmp48 * _tmp88;
  const Scalar _tmp90 = _tmp65 * _tmp88;
  const Scalar _tmp91 = _tmp81 + _tmp87;
  const Scalar _tmp92 = _tmp66 * _tmp91 - _tmp68 * _tmp90;
  const Scalar _tmp93 = _tmp56 * _tmp85 - _tmp68 * _tmp89 - _tmp71 * _tmp92;
  const Scalar _tmp94 = Scalar(1.0) * _tmp38;
  const Scalar _tmp95 = -_tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp58 + _tmp95);
  const Scalar _tmp97 = Scalar(1.0) * _tmp36;
  const Scalar _tmp98 = -_tmp61 + _tmp97;
  const Scalar _tmp99 = _tmp96 * _tmp98;
  const Scalar _tmp100 = -_tmp65 * _tmp91 + _tmp90;
  const Scalar _tmp101 = -_tmp100 * _tmp71 - _tmp48 * _tmp85 + _tmp89 - _tmp93 * _tmp99;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp103 = _tmp68 * _tmp70;
  const Scalar _tmp104 = _tmp103 * _tmp92 + _tmp68 * _tmp88;
  const Scalar _tmp105 = _tmp100 * _tmp103 - _tmp104 * _tmp99 - _tmp88;
  const Scalar _tmp106 = _tmp102 * _tmp72;
  const Scalar _tmp107 = _tmp101 * _tmp73;
  const Scalar _tmp108 = _tmp107 * (_tmp103 * _tmp67 - _tmp105 * _tmp106 - _tmp55);
  const Scalar _tmp109 = _tmp102 * (_tmp105 + _tmp108);
  const Scalar _tmp110 = -_tmp109 * _tmp69 - _tmp68;
  const Scalar _tmp111 = _tmp65 * _tmp70;
  const Scalar _tmp112 = _tmp79 * fh1;
  const Scalar _tmp113 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp114 = _tmp94 * _tmp99 + _tmp97;
  const Scalar _tmp115 = 0;
  const Scalar _tmp116 = _tmp115 * _tmp71;
  const Scalar _tmp117 = _tmp54 * (_tmp115 * _tmp48 - _tmp116 * _tmp65);
  const Scalar _tmp118 = Scalar(1.0) * _tmp70;
  const Scalar _tmp119 = Scalar(1.0) * _tmp96;
  const Scalar _tmp120 = -_tmp100 * _tmp118 + _tmp119 * _tmp70 * _tmp92 * _tmp98;
  const Scalar _tmp121 = _tmp107 * (-_tmp106 * _tmp120 - _tmp118 * _tmp67);
  const Scalar _tmp122 = _tmp102 * (_tmp120 + _tmp121);
  const Scalar _tmp123 = -_tmp122 * _tmp69 + Scalar(1.0);
  const Scalar _tmp124 = _tmp78 * fh1;
  const Scalar _tmp125 = -_tmp112 * _tmp54 * (_tmp109 * _tmp48 + _tmp110 * _tmp111 + Scalar(1.0)) -
                         _tmp113 * _tmp117 -
                         _tmp124 * _tmp54 * (_tmp111 * _tmp123 + _tmp122 * _tmp48) -
                         _tmp54 * _tmp80 * (_tmp48 * _tmp74 - _tmp65 * _tmp71 * _tmp74);
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp40 + _tmp95;
  const Scalar _tmp128 = _tmp127 * _tmp99;
  const Scalar _tmp129 = Scalar(1.0) / (-_tmp128 - _tmp44 + _tmp97);
  const Scalar _tmp130 = _tmp127 * _tmp129;
  const Scalar _tmp131 = -_tmp118 * _tmp92 + _tmp121 * _tmp130 - _tmp122 * _tmp93;
  const Scalar _tmp132 = Scalar(1.0) * _tmp129;
  const Scalar _tmp133 = _tmp107 * _tmp132;
  const Scalar _tmp134 = _tmp127 * _tmp133 - _tmp74 * _tmp93;
  const Scalar _tmp135 = _tmp114 * _tmp129;
  const Scalar _tmp136 = _tmp96 * (-_tmp115 * _tmp93 - _tmp127 * _tmp135 + _tmp95);
  const Scalar _tmp137 = -Scalar(1.0) * _tmp135 - Scalar(1.0) * _tmp136 + Scalar(1.0);
  const Scalar _tmp138 = _tmp104 + _tmp108 * _tmp130 - _tmp109 * _tmp93;
  const Scalar _tmp139 = fh1 * (_tmp84 + _tmp86);
  const Scalar _tmp140 = -_tmp139 * _tmp78 - Scalar(40.024799999999999) * _tmp18 - _tmp22 * fv1;
  const Scalar _tmp141 = _tmp128 * _tmp132 + Scalar(1.0);
  const Scalar _tmp142 = _tmp132 * _tmp99;
  const Scalar _tmp143 = -Scalar(1.0) * _tmp119 * _tmp141 + Scalar(1.0) * _tmp142;
  const Scalar _tmp144 = _tmp139 * _tmp79 + Scalar(40.024799999999999) * _tmp28 + _tmp33 * fv1;
  const Scalar _tmp145 = _tmp127 * _tmp96;
  const Scalar _tmp146 = Scalar(1.0) * _tmp132 * _tmp145 - Scalar(1.0) * _tmp132;
  const Scalar _tmp147 =
      Scalar(1.0) * _tmp112 * (_tmp108 * _tmp132 - _tmp119 * _tmp138) + _tmp113 * _tmp137 +
      Scalar(1.0) * _tmp124 * (-_tmp119 * _tmp131 + _tmp121 * _tmp132) + _tmp140 * _tmp143 +
      _tmp144 * _tmp146 + Scalar(1.0) * _tmp80 * (-_tmp119 * _tmp134 + _tmp133);
  const Scalar _tmp148 = std::asinh(_tmp126 * _tmp147);
  const Scalar _tmp149 = Scalar(1.4083112389913199) * _tmp125;
  const Scalar _tmp150 =
      -_tmp148 * _tmp149 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp39), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp37 - 1), Scalar(2))));
  const Scalar _tmp151 = Scalar(0.71007031138673404) * _tmp126;
  const Scalar _tmp152 = _tmp150 * _tmp151;
  const Scalar _tmp153 = Scalar(1.0) * _tmp148;
  const Scalar _tmp154 = Scalar(1.4083112389913199) * _tmp117;
  const Scalar _tmp155 = std::pow(_tmp125, Scalar(-2));
  const Scalar _tmp156 = _tmp117 * _tmp155;
  const Scalar _tmp157 = _tmp19 + _tmp57;
  const Scalar _tmp158 =
      (_tmp126 * (-_tmp137 + _tmp143 * _tmp157 + _tmp146 * _tmp33) - _tmp147 * _tmp156) /
      std::sqrt(Scalar(std::pow(_tmp147, Scalar(2)) * _tmp155 + 1));
  const Scalar _tmp159 = _tmp74 * _tmp80;
  const Scalar _tmp160 = _tmp113 * _tmp115;
  const Scalar _tmp161 =
      _tmp110 * _tmp112 * _tmp70 + _tmp123 * _tmp124 * _tmp70 - _tmp159 * _tmp71 - _tmp160 * _tmp71;
  const Scalar _tmp162 = Scalar(1.0) / (_tmp161);
  const Scalar _tmp163 = _tmp132 * _tmp144;
  const Scalar _tmp164 = _tmp141 * _tmp96;
  const Scalar _tmp165 = _tmp112 * _tmp138 * _tmp96 + _tmp113 * _tmp136 +
                         _tmp124 * _tmp131 * _tmp96 + _tmp134 * _tmp80 * _tmp96 +
                         _tmp140 * _tmp164 - _tmp145 * _tmp163;
  const Scalar _tmp166 = std::asinh(_tmp162 * _tmp165);
  const Scalar _tmp167 = Scalar(1.4083112389913199) * _tmp161;
  const Scalar _tmp168 =
      -_tmp166 * _tmp167 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp59), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp62), Scalar(2))));
  const Scalar _tmp169 = Scalar(0.71007031138673404) * _tmp162;
  const Scalar _tmp170 = _tmp168 * _tmp169;
  const Scalar _tmp171 = Scalar(1.0) * _tmp166;
  const Scalar _tmp172 = Scalar(1.4083112389913199) * _tmp115;
  const Scalar _tmp173 = _tmp172 * _tmp71;
  const Scalar _tmp174 = std::pow(_tmp161, Scalar(-2));
  const Scalar _tmp175 = _tmp116 * _tmp174;
  const Scalar _tmp176 = _tmp132 * _tmp33;
  const Scalar _tmp177 =
      (_tmp162 * (-_tmp136 - _tmp145 * _tmp176 + _tmp157 * _tmp164) - _tmp165 * _tmp175) /
      std::sqrt(Scalar(std::pow(_tmp165, Scalar(2)) * _tmp174 + 1));
  const Scalar _tmp178 = _tmp109 * _tmp112 + _tmp122 * _tmp124 + _tmp159 + _tmp160;
  const Scalar _tmp179 = Scalar(1.0) / (_tmp178);
  const Scalar _tmp180 = -_tmp108 * _tmp112 * _tmp129 + _tmp113 * _tmp135 -
                         _tmp121 * _tmp124 * _tmp129 - _tmp133 * _tmp80 - _tmp140 * _tmp142 +
                         _tmp163;
  const Scalar _tmp181 = std::asinh(_tmp179 * _tmp180);
  const Scalar _tmp182 = Scalar(1.4083112389913199) * _tmp178;
  const Scalar _tmp183 =
      -_tmp181 * _tmp182 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp45), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp41 - 1), Scalar(2))));
  const Scalar _tmp184 = Scalar(0.71007031138673404) * _tmp179;
  const Scalar _tmp185 = _tmp183 * _tmp184;
  const Scalar _tmp186 = Scalar(1.0) * _tmp181;
  const Scalar _tmp187 = std::pow(_tmp178, Scalar(-2));
  const Scalar _tmp188 = _tmp115 * _tmp187;
  const Scalar _tmp189 = (_tmp179 * (-_tmp135 - _tmp142 * _tmp157 + _tmp176) + _tmp180 * _tmp188) /
                         std::sqrt(Scalar(std::pow(_tmp180, Scalar(2)) * _tmp187 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp35 *
      (_tmp2 * std::sinh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                         (-_tmp1 * _tmp35 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp23 - 1),
                                               Scalar(2)) +
                                  std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp34 - 1),
                                           Scalar(2)))))));
  _res(1, 0) =
      -_tmp149 *
          (-Scalar(34.083374946563197) * _tmp156 + Scalar(1.0) * _tmp158 * std::sinh(_tmp153) -
           (-Scalar(0.71007031138673404) * _tmp150 * _tmp156 +
            _tmp151 * (-_tmp148 * _tmp154 - _tmp149 * _tmp158)) *
               std::sinh(_tmp152)) -
      _tmp154 * (Scalar(34.083374946563197) * _tmp126 - std::cosh(_tmp152) + std::cosh(_tmp153));
  _res(2, 0) =
      -_tmp167 *
          (-Scalar(34.083374946563197) * _tmp175 + Scalar(1.0) * _tmp177 * std::sinh(_tmp171) -
           (-Scalar(0.71007031138673404) * _tmp168 * _tmp175 +
            _tmp169 * (-_tmp166 * _tmp173 - _tmp167 * _tmp177)) *
               std::sinh(_tmp170)) -
      _tmp173 * (Scalar(34.083374946563197) * _tmp162 - std::cosh(_tmp170) + std::cosh(_tmp171));
  _res(3, 0) =
      _tmp172 * (Scalar(34.083374946563197) * _tmp179 - std::cosh(_tmp185) + std::cosh(_tmp186)) -
      _tmp182 * (Scalar(34.083374946563197) * _tmp188 + Scalar(1.0) * _tmp189 * std::sinh(_tmp186) -
                 (Scalar(0.71007031138673404) * _tmp183 * _tmp188 +
                  _tmp184 * (_tmp172 * _tmp181 - _tmp182 * _tmp189)) *
                     std::sinh(_tmp185));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
