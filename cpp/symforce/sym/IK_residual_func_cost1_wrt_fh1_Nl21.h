// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fh1_Nl21
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFh1Nl21(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 656

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (212)
  const Scalar _tmp0 = std::pow(fh1, Scalar(-2));
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp8 = 2 * _tmp3;
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = _tmp11 + _tmp9;
  const Scalar _tmp13 = -Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp1 * _tmp7;
  const Scalar _tmp15 = _tmp10 * _tmp3;
  const Scalar _tmp16 = Scalar(0.20999999999999999) * _tmp14 - Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp13 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp6;
  const Scalar _tmp19 = _tmp18 + position_vector(0, 0);
  const Scalar _tmp20 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp23 = _tmp1 * _tmp8;
  const Scalar _tmp24 = _tmp10 * _tmp7;
  const Scalar _tmp25 = _tmp23 - _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = -_tmp22 + _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(1, 0);
  const Scalar _tmp30 = Scalar(1.0) / (fh1);
  const Scalar _tmp31 = _tmp30 * fv1;
  const Scalar _tmp32 = std::asinh(_tmp31);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * _tmp32;
  const Scalar _tmp34 =
      -_tmp33 * fh1 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp29), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp19 - 1), Scalar(2))));
  const Scalar _tmp35 = Scalar(0.71007031138673404) * _tmp30;
  const Scalar _tmp36 = _tmp34 * _tmp35;
  const Scalar _tmp37 =
      std::pow(Scalar(_tmp0 * std::pow(fv1, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp38 = Scalar(1.0) * _tmp32;
  const Scalar _tmp39 = _tmp29 + Scalar(-110.0);
  const Scalar _tmp40 = _tmp19 + Scalar(125.0);
  const Scalar _tmp41 = std::pow(Scalar(std::pow(_tmp39, Scalar(2)) + std::pow(_tmp40, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp42 = _tmp39 * _tmp41;
  const Scalar _tmp43 = _tmp40 * _tmp41;
  const Scalar _tmp44 = _tmp18 * _tmp42 - _tmp28 * _tmp43;
  const Scalar _tmp45 = _tmp13 - _tmp16;
  const Scalar _tmp46 = _tmp45 + _tmp5;
  const Scalar _tmp47 = -_tmp21;
  const Scalar _tmp48 = _tmp22 + _tmp26;
  const Scalar _tmp49 = _tmp47 + _tmp48;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(110.0);
  const Scalar _tmp52 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp53 = _tmp52 + Scalar(-125.0);
  const Scalar _tmp54 =
      std::sqrt(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp53, Scalar(2))));
  const Scalar _tmp55 = Scalar(1.0) / (_tmp54);
  const Scalar _tmp56 = Scalar(1.0) / (_tmp53);
  const Scalar _tmp57 = _tmp54 * _tmp56;
  const Scalar _tmp58 = _tmp57 * (_tmp46 * _tmp51 * _tmp55 - _tmp49 * _tmp53 * _tmp55);
  const Scalar _tmp59 = _tmp27 + _tmp47;
  const Scalar _tmp60 = _tmp59 + position_vector(1, 0);
  const Scalar _tmp61 = _tmp60 + Scalar(110.0);
  const Scalar _tmp62 = _tmp45 + _tmp6;
  const Scalar _tmp63 = _tmp62 + position_vector(0, 0);
  const Scalar _tmp64 = _tmp63 + Scalar(125.0);
  const Scalar _tmp65 = std::pow(Scalar(std::pow(_tmp61, Scalar(2)) + std::pow(_tmp64, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp66 = _tmp64 * _tmp65;
  const Scalar _tmp67 = _tmp61 * _tmp65;
  const Scalar _tmp68 = _tmp21 + _tmp48;
  const Scalar _tmp69 = _tmp68 + position_vector(1, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(-110.0);
  const Scalar _tmp71 = _tmp17 + _tmp5;
  const Scalar _tmp72 = _tmp71 + position_vector(0, 0);
  const Scalar _tmp73 = _tmp72 + Scalar(-125.0);
  const Scalar _tmp74 = std::pow(Scalar(std::pow(_tmp70, Scalar(2)) + std::pow(_tmp73, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp75 = _tmp73 * _tmp74;
  const Scalar _tmp76 = _tmp70 * _tmp74;
  const Scalar _tmp77 = _tmp58 * _tmp75 + _tmp68 * _tmp75 - _tmp71 * _tmp76;
  const Scalar _tmp78 = _tmp51 * _tmp56;
  const Scalar _tmp79 = _tmp66 * _tmp78 - _tmp67;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp75 * _tmp78 - _tmp76);
  const Scalar _tmp81 = _tmp79 * _tmp80;
  const Scalar _tmp82 = _tmp58 * _tmp66 + _tmp59 * _tmp66 - _tmp62 * _tmp67 - _tmp77 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp84 = Scalar(1.0) * _tmp83;
  const Scalar _tmp85 = _tmp75 * _tmp81;
  const Scalar _tmp86 = _tmp44 * _tmp57 * (_tmp66 * _tmp84 - _tmp84 * _tmp85);
  const Scalar _tmp87 = -Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp88 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp89 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp90 = _tmp88 - _tmp89;
  const Scalar _tmp91 = _tmp87 + _tmp90;
  const Scalar _tmp92 = -_tmp87;
  const Scalar _tmp93 = _tmp90 + _tmp92;
  const Scalar _tmp94 = _tmp75 * _tmp91;
  const Scalar _tmp95 = _tmp88 + _tmp89;
  const Scalar _tmp96 = _tmp87 + _tmp95;
  const Scalar _tmp97 = _tmp76 * _tmp96 - _tmp78 * _tmp94;
  const Scalar _tmp98 = _tmp78 * _tmp91;
  const Scalar _tmp99 = -_tmp66 * _tmp98 + _tmp67 * _tmp93 - _tmp81 * _tmp97;
  const Scalar _tmp100 = Scalar(1.0) * _tmp49;
  const Scalar _tmp101 = -_tmp100;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp101 + _tmp68);
  const Scalar _tmp103 = Scalar(1.0) * _tmp46;
  const Scalar _tmp104 = _tmp103 - _tmp71;
  const Scalar _tmp105 = _tmp102 * _tmp104;
  const Scalar _tmp106 = -_tmp75 * _tmp96 + _tmp94;
  const Scalar _tmp107 = -_tmp105 * _tmp99 - _tmp106 * _tmp81 + _tmp66 * _tmp91 - _tmp66 * _tmp93;
  const Scalar _tmp108 = Scalar(1.0) / (_tmp107);
  const Scalar _tmp109 = _tmp78 * _tmp80;
  const Scalar _tmp110 = _tmp109 * _tmp97 + _tmp98;
  const Scalar _tmp111 = -_tmp105 * _tmp110 + _tmp106 * _tmp109 - _tmp91;
  const Scalar _tmp112 = _tmp108 * _tmp82;
  const Scalar _tmp113 = _tmp107 * _tmp83;
  const Scalar _tmp114 = _tmp113 * (_tmp109 * _tmp77 - _tmp111 * _tmp112 - _tmp58);
  const Scalar _tmp115 = _tmp108 * (_tmp111 + _tmp114);
  const Scalar _tmp116 = -_tmp115 * _tmp79 - _tmp78;
  const Scalar _tmp117 = _tmp75 * _tmp80;
  const Scalar _tmp118 = _tmp43 * _tmp57 * (_tmp115 * _tmp66 + _tmp116 * _tmp117 + Scalar(1.0));
  const Scalar _tmp119 = Scalar(1.0) * _tmp80;
  const Scalar _tmp120 = Scalar(1.0) * _tmp102;
  const Scalar _tmp121 = _tmp104 * _tmp120 * _tmp80 * _tmp97 - _tmp106 * _tmp119;
  const Scalar _tmp122 = _tmp113 * (-_tmp112 * _tmp121 - _tmp119 * _tmp77);
  const Scalar _tmp123 = _tmp108 * (_tmp121 + _tmp122);
  const Scalar _tmp124 = -_tmp123 * _tmp79 + Scalar(1.0);
  const Scalar _tmp125 = _tmp42 * _tmp57 * (_tmp117 * _tmp124 + _tmp123 * _tmp66);
  const Scalar _tmp126 = -_tmp118 - _tmp125 - _tmp86;
  const Scalar _tmp127 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp128 = _tmp100 * _tmp105 + _tmp103;
  const Scalar _tmp129 = 0;
  const Scalar _tmp130 = -_tmp118 * fh1 - _tmp125 * fh1 -
                         _tmp127 * _tmp57 * (_tmp129 * _tmp66 - _tmp129 * _tmp85) - _tmp86 * fh1;
  const Scalar _tmp131 = _tmp101 + _tmp59;
  const Scalar _tmp132 = _tmp105 * _tmp131;
  const Scalar _tmp133 = Scalar(1.0) / (_tmp103 - _tmp132 - _tmp62);
  const Scalar _tmp134 = Scalar(1.0) * _tmp133;
  const Scalar _tmp135 = _tmp131 * _tmp133;
  const Scalar _tmp136 = _tmp110 + _tmp114 * _tmp135 - _tmp115 * _tmp99;
  const Scalar _tmp137 = Scalar(1.0) * _tmp43 * (_tmp114 * _tmp134 - _tmp120 * _tmp136);
  const Scalar _tmp138 = _tmp128 * _tmp133;
  const Scalar _tmp139 = _tmp101 - _tmp129 * _tmp99 - _tmp131 * _tmp138;
  const Scalar _tmp140 = -_tmp119 * _tmp97 + _tmp122 * _tmp135 - _tmp123 * _tmp99;
  const Scalar _tmp141 = Scalar(1.0) * _tmp42 * (-_tmp120 * _tmp140 + _tmp122 * _tmp134);
  const Scalar _tmp142 = _tmp113 * _tmp134;
  const Scalar _tmp143 = _tmp131 * _tmp142 - _tmp84 * _tmp99;
  const Scalar _tmp144 = Scalar(1.0) * _tmp44 * (-_tmp120 * _tmp143 + _tmp142);
  const Scalar _tmp145 = _tmp92 + _tmp95;
  const Scalar _tmp146 = _tmp145 * fh1;
  const Scalar _tmp147 = -_tmp146 * _tmp42 - Scalar(40.024799999999999) * _tmp25 - _tmp28 * fv1;
  const Scalar _tmp148 = _tmp105 * _tmp134;
  const Scalar _tmp149 = _tmp132 * _tmp134 + Scalar(1.0);
  const Scalar _tmp150 = -Scalar(1.0) * _tmp120 * _tmp149 + Scalar(1.0) * _tmp148;
  const Scalar _tmp151 = Scalar(40.024799999999999) * _tmp12 + _tmp146 * _tmp43 + _tmp18 * fv1;
  const Scalar _tmp152 = _tmp102 * _tmp131;
  const Scalar _tmp153 = Scalar(1.0) * _tmp134 * _tmp152 - Scalar(1.0) * _tmp134;
  const Scalar _tmp154 =
      Scalar(1.0) * _tmp127 * (-_tmp120 * _tmp139 - _tmp128 * _tmp134 + Scalar(1.0)) +
      _tmp137 * fh1 + _tmp141 * fh1 + _tmp144 * fh1 + _tmp147 * _tmp150 + _tmp151 * _tmp153;
  const Scalar _tmp155 = Scalar(1.0) / (_tmp130);
  const Scalar _tmp156 = std::asinh(_tmp154 * _tmp155);
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp156;
  const Scalar _tmp158 =
      -_tmp130 * _tmp157 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp52), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp50 - 1), Scalar(2))));
  const Scalar _tmp159 = Scalar(0.71007031138673404) * _tmp155;
  const Scalar _tmp160 = _tmp158 * _tmp159;
  const Scalar _tmp161 = Scalar(1.0) * _tmp156;
  const Scalar _tmp162 = std::pow(_tmp130, Scalar(-2));
  const Scalar _tmp163 = _tmp126 * _tmp162;
  const Scalar _tmp164 = _tmp145 * _tmp43;
  const Scalar _tmp165 = _tmp145 * _tmp42;
  const Scalar _tmp166 = (-_tmp154 * _tmp163 + _tmp155 * (_tmp137 + _tmp141 + _tmp144 -
                                                          _tmp150 * _tmp165 + _tmp153 * _tmp164)) /
                         std::sqrt(Scalar(std::pow(_tmp154, Scalar(2)) * _tmp162 + 1));
  const Scalar _tmp167 = Scalar(1.4083112389913199) * _tmp130;
  const Scalar _tmp168 = _tmp102 * _tmp43;
  const Scalar _tmp169 = _tmp136 * _tmp168;
  const Scalar _tmp170 = _tmp102 * _tmp149;
  const Scalar _tmp171 = _tmp134 * _tmp151;
  const Scalar _tmp172 = _tmp102 * _tmp140 * _tmp42;
  const Scalar _tmp173 = _tmp102 * _tmp143 * _tmp44;
  const Scalar _tmp174 = _tmp102 * _tmp127 * _tmp139 + _tmp147 * _tmp170 - _tmp152 * _tmp171 +
                         _tmp169 * fh1 + _tmp172 * fh1 + _tmp173 * fh1;
  const Scalar _tmp175 = _tmp116 * _tmp43 * _tmp80;
  const Scalar _tmp176 = _tmp44 * _tmp84;
  const Scalar _tmp177 = _tmp176 * fh1;
  const Scalar _tmp178 = _tmp127 * _tmp129;
  const Scalar _tmp179 = _tmp124 * _tmp42 * _tmp80;
  const Scalar _tmp180 = _tmp175 * fh1 - _tmp177 * _tmp81 - _tmp178 * _tmp81 + _tmp179 * fh1;
  const Scalar _tmp181 = Scalar(1.0) / (_tmp180);
  const Scalar _tmp182 = std::asinh(_tmp174 * _tmp181);
  const Scalar _tmp183 = Scalar(1.4083112389913199) * _tmp180;
  const Scalar _tmp184 =
      -_tmp182 * _tmp183 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp69), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp72), Scalar(2))));
  const Scalar _tmp185 = Scalar(0.71007031138673404) * _tmp181;
  const Scalar _tmp186 = _tmp184 * _tmp185;
  const Scalar _tmp187 = Scalar(1.0) * _tmp182;
  const Scalar _tmp188 = _tmp175 - _tmp176 * _tmp81 + _tmp179;
  const Scalar _tmp189 = Scalar(1.4083112389913199) * _tmp188;
  const Scalar _tmp190 = std::pow(_tmp180, Scalar(-2));
  const Scalar _tmp191 = _tmp188 * _tmp190;
  const Scalar _tmp192 =
      (-_tmp174 * _tmp191 + _tmp181 * (-_tmp131 * _tmp134 * _tmp145 * _tmp168 - _tmp165 * _tmp170 +
                                       _tmp169 + _tmp172 + _tmp173)) /
      std::sqrt(Scalar(std::pow(_tmp174, Scalar(2)) * _tmp190 + 1));
  const Scalar _tmp193 = _tmp114 * _tmp133 * _tmp43;
  const Scalar _tmp194 = _tmp142 * _tmp44;
  const Scalar _tmp195 = _tmp122 * _tmp133 * _tmp42;
  const Scalar _tmp196 = _tmp127 * _tmp138 - _tmp147 * _tmp148 + _tmp171 - _tmp193 * fh1 -
                         _tmp194 * fh1 - _tmp195 * fh1;
  const Scalar _tmp197 = _tmp123 * _tmp42;
  const Scalar _tmp198 = _tmp115 * _tmp43;
  const Scalar _tmp199 = _tmp177 + _tmp178 + _tmp197 * fh1 + _tmp198 * fh1;
  const Scalar _tmp200 = Scalar(1.0) / (_tmp199);
  const Scalar _tmp201 = std::asinh(_tmp196 * _tmp200);
  const Scalar _tmp202 = Scalar(1.0) * _tmp201;
  const Scalar _tmp203 = Scalar(1.4083112389913199) * _tmp199;
  const Scalar _tmp204 =
      -_tmp201 * _tmp203 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp60 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp63 - 1), Scalar(2))));
  const Scalar _tmp205 = Scalar(0.71007031138673404) * _tmp200;
  const Scalar _tmp206 = _tmp204 * _tmp205;
  const Scalar _tmp207 = _tmp176 + _tmp197 + _tmp198;
  const Scalar _tmp208 = Scalar(1.4083112389913199) * _tmp207;
  const Scalar _tmp209 = std::pow(_tmp199, Scalar(-2));
  const Scalar _tmp210 = _tmp207 * _tmp209;
  const Scalar _tmp211 = (-_tmp196 * _tmp210 + _tmp200 * (_tmp134 * _tmp164 + _tmp148 * _tmp165 -
                                                          _tmp193 - _tmp194 - _tmp195)) /
                         std::sqrt(Scalar(std::pow(_tmp196, Scalar(2)) * _tmp209 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = -Scalar(48.000000000000128) * _tmp30 -
               Scalar(1.4083112389913199) * fh1 *
                   (-Scalar(1.0) * _tmp0 * _tmp37 * fv1 * std::sinh(_tmp38) -
                    Scalar(34.083374946563197) * _tmp0 -
                    (-Scalar(0.71007031138673404) * _tmp0 * _tmp34 +
                     _tmp35 * (Scalar(1.4083112389913199) * _tmp31 * _tmp37 - _tmp33)) *
                        std::sinh(_tmp36)) +
               Scalar(1.4083112389913199) * std::cosh(_tmp36) -
               Scalar(1.4083112389913199) * std::cosh(_tmp38);
  _res(1, 0) =
      -Scalar(1.4083112389913199) * _tmp126 *
          (Scalar(34.083374946563197) * _tmp155 - std::cosh(_tmp160) + std::cosh(_tmp161)) -
      _tmp167 *
          (-Scalar(34.083374946563197) * _tmp163 + Scalar(1.0) * _tmp166 * std::sinh(_tmp161) -
           (-Scalar(0.71007031138673404) * _tmp158 * _tmp163 +
            _tmp159 * (-_tmp126 * _tmp157 - _tmp166 * _tmp167)) *
               std::sinh(_tmp160));
  _res(2, 0) =
      -_tmp183 *
          (-Scalar(34.083374946563197) * _tmp191 + Scalar(1.0) * _tmp192 * std::sinh(_tmp187) -
           (-Scalar(0.71007031138673404) * _tmp184 * _tmp191 +
            _tmp185 * (-_tmp182 * _tmp189 - _tmp183 * _tmp192)) *
               std::sinh(_tmp186)) -
      _tmp189 * (Scalar(34.083374946563197) * _tmp181 - std::cosh(_tmp186) + std::cosh(_tmp187));
  _res(3, 0) =
      -_tmp203 *
          (-Scalar(34.083374946563197) * _tmp210 + Scalar(1.0) * _tmp211 * std::sinh(_tmp202) -
           (-Scalar(0.71007031138673404) * _tmp204 * _tmp210 +
            _tmp205 * (-_tmp201 * _tmp208 - _tmp203 * _tmp211)) *
               std::sinh(_tmp206)) -
      _tmp208 * (Scalar(34.083374946563197) * _tmp200 + std::cosh(_tmp202) - std::cosh(_tmp206));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
