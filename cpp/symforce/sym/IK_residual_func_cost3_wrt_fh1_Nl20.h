// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_fh1_Nl20
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtFh1Nl20(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 306

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (106)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp8 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp7 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = 2 * _tmp3;
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = _tmp0 * _tmp4;
  const Scalar _tmp13 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp13 - _tmp9;
  const Scalar _tmp15 = _tmp14 + _tmp6;
  const Scalar _tmp16 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp7 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp18 = _tmp0 * _tmp10;
  const Scalar _tmp19 = _tmp1 * _tmp4;
  const Scalar _tmp20 =
      -Scalar(0.010999999999999999) * _tmp18 + Scalar(0.010999999999999999) * _tmp19;
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp22 = _tmp20 - _tmp21;
  const Scalar _tmp23 = _tmp17 + _tmp22;
  const Scalar _tmp24 = _tmp23 + position_vector(1, 0) + Scalar(-4.8333311099999996);
  const Scalar _tmp25 = _tmp15 + position_vector(0, 0) + Scalar(1.79662371);
  const Scalar _tmp26 = std::pow(Scalar(std::pow(_tmp24, Scalar(2)) + std::pow(_tmp25, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp27 = _tmp24 * _tmp26;
  const Scalar _tmp28 = _tmp25 * _tmp26;
  const Scalar _tmp29 = _tmp15 * _tmp27 - _tmp23 * _tmp28;
  const Scalar _tmp30 = -_tmp6;
  const Scalar _tmp31 = _tmp13 + _tmp9;
  const Scalar _tmp32 = _tmp30 + _tmp31;
  const Scalar _tmp33 = _tmp32 + position_vector(0, 0) + Scalar(-2.5202214700000001);
  const Scalar _tmp34 = Scalar(1.0) / (_tmp33);
  const Scalar _tmp35 = -_tmp17;
  const Scalar _tmp36 = _tmp20 + _tmp21;
  const Scalar _tmp37 = _tmp35 + _tmp36;
  const Scalar _tmp38 = _tmp37 + position_vector(1, 0) + Scalar(8.3888750099999996);
  const Scalar _tmp39 = _tmp34 * _tmp38;
  const Scalar _tmp40 = _tmp17 + _tmp36;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0) + Scalar(-4.7752063900000001);
  const Scalar _tmp42 = _tmp31 + _tmp6;
  const Scalar _tmp43 = _tmp42 + position_vector(0, 0) + Scalar(-2.71799795);
  const Scalar _tmp44 = std::pow(Scalar(std::pow(_tmp41, Scalar(2)) + std::pow(_tmp43, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp45 = _tmp43 * _tmp44;
  const Scalar _tmp46 = _tmp41 * _tmp44;
  const Scalar _tmp47 = _tmp39 * _tmp45 - _tmp46;
  const Scalar _tmp48 =
      std::sqrt(Scalar(std::pow(_tmp33, Scalar(2)) + std::pow(_tmp38, Scalar(2))));
  const Scalar _tmp49 = Scalar(1.0) / (_tmp48);
  const Scalar _tmp50 = _tmp34 * _tmp48;
  const Scalar _tmp51 = _tmp50 * (_tmp32 * _tmp38 * _tmp49 - _tmp33 * _tmp37 * _tmp49);
  const Scalar _tmp52 = _tmp14 + _tmp30;
  const Scalar _tmp53 = _tmp22 + _tmp35;
  const Scalar _tmp54 = _tmp53 + position_vector(1, 0) + Scalar(8.3196563700000006);
  const Scalar _tmp55 = _tmp52 + position_vector(0, 0) + Scalar(1.9874742000000001);
  const Scalar _tmp56 = std::pow(Scalar(std::pow(_tmp54, Scalar(2)) + std::pow(_tmp55, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp57 = _tmp54 * _tmp56;
  const Scalar _tmp58 = _tmp55 * _tmp56;
  const Scalar _tmp59 = Scalar(1.0) / (_tmp39 * _tmp58 - _tmp57);
  const Scalar _tmp60 = _tmp59 * (_tmp51 * _tmp58 - _tmp52 * _tmp57 + _tmp53 * _tmp58);
  const Scalar _tmp61 = _tmp40 * _tmp45 - _tmp42 * _tmp46 + _tmp45 * _tmp51 - _tmp47 * _tmp60;
  const Scalar _tmp62 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp63 = Scalar(1.0) * _tmp62;
  const Scalar _tmp64 = _tmp58 * _tmp59;
  const Scalar _tmp65 = _tmp29 * _tmp50 * (_tmp45 * _tmp63 - _tmp47 * _tmp63 * _tmp64);
  const Scalar _tmp66 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp67 =
      -Scalar(0.010999999999999999) * _tmp16 - Scalar(0.010999999999999999) * _tmp8;
  const Scalar _tmp68 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp19;
  const Scalar _tmp69 = _tmp67 - _tmp68;
  const Scalar _tmp70 = _tmp66 + _tmp69;
  const Scalar _tmp71 = -_tmp66 + _tmp69;
  const Scalar _tmp72 = _tmp59 * (_tmp58 * _tmp70 - _tmp58 * _tmp71);
  const Scalar _tmp73 = _tmp66 + _tmp67 + _tmp68;
  const Scalar _tmp74 = _tmp39 * _tmp70;
  const Scalar _tmp75 = _tmp59 * (_tmp57 * _tmp71 - _tmp58 * _tmp74);
  const Scalar _tmp76 = Scalar(1.0) * _tmp37;
  const Scalar _tmp77 = Scalar(1.0) * _tmp32;
  const Scalar _tmp78 = (-_tmp52 + _tmp77) / (_tmp53 - _tmp76);
  const Scalar _tmp79 = _tmp45 * _tmp70 - _tmp45 * _tmp73 - _tmp47 * _tmp72 -
                        _tmp78 * (-_tmp45 * _tmp74 + _tmp46 * _tmp73 - _tmp47 * _tmp75);
  const Scalar _tmp80 = Scalar(1.0) / (_tmp79);
  const Scalar _tmp81 = -Scalar(1.0) * _tmp72 + Scalar(1.0) * _tmp75 * _tmp78;
  const Scalar _tmp82 = _tmp61 * _tmp80;
  const Scalar _tmp83 = _tmp62 * _tmp79;
  const Scalar _tmp84 = _tmp81 + _tmp83 * (-Scalar(1.0) * _tmp60 - _tmp81 * _tmp82);
  const Scalar _tmp85 = _tmp80 * _tmp84;
  const Scalar _tmp86 = _tmp47 * _tmp80;
  const Scalar _tmp87 = -_tmp84 * _tmp86 + Scalar(1.0);
  const Scalar _tmp88 = _tmp27 * _tmp50 * (_tmp45 * _tmp85 + _tmp64 * _tmp87);
  const Scalar _tmp89 = _tmp39 * _tmp72 - _tmp70 - _tmp78 * (_tmp39 * _tmp75 + _tmp74);
  const Scalar _tmp90 = _tmp83 * (_tmp39 * _tmp60 - _tmp51 - _tmp82 * _tmp89) + _tmp89;
  const Scalar _tmp91 = -_tmp39 - _tmp86 * _tmp90;
  const Scalar _tmp92 = _tmp80 * _tmp90;
  const Scalar _tmp93 = _tmp28 * _tmp50 * (_tmp45 * _tmp92 + _tmp64 * _tmp91 + Scalar(1.0));
  const Scalar _tmp94 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp95 = _tmp76 * _tmp78 + _tmp77;
  const Scalar _tmp96 = 0;
  const Scalar _tmp97 = _tmp80 * _tmp96;
  const Scalar _tmp98 = _tmp86 * _tmp96;
  const Scalar _tmp99 = _tmp28 * _tmp59 * _tmp91;
  const Scalar _tmp100 = _tmp29 * _tmp63;
  const Scalar _tmp101 = _tmp100 * fh1;
  const Scalar _tmp102 = _tmp47 * _tmp59;
  const Scalar _tmp103 = _tmp27 * _tmp59 * _tmp87;
  const Scalar _tmp104 = _tmp28 * _tmp92;
  const Scalar _tmp105 = _tmp27 * _tmp85;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = -std::exp(-fh1);
  _res(1, 0) = -(-_tmp65 - _tmp88 - _tmp93) *
               std::exp(_tmp50 * _tmp94 * (_tmp45 * _tmp97 - _tmp64 * _tmp98) + _tmp65 * fh1 +
                        _tmp88 * fh1 + _tmp93 * fh1);
  _res(2, 0) =
      -(-_tmp100 * _tmp102 + _tmp103 + _tmp99) *
      std::exp(_tmp101 * _tmp102 - _tmp103 * fh1 + _tmp59 * _tmp94 * _tmp98 - _tmp99 * fh1);
  _res(3, 0) = -(_tmp100 + _tmp104 + _tmp105) *
               std::exp(-_tmp101 - _tmp104 * fh1 - _tmp105 * fh1 - _tmp94 * _tmp97);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
