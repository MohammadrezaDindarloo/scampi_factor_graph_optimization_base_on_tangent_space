// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl13
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl13(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 532

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (160)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp5 = 2 * _tmp4;
  const Scalar _tmp6 = _tmp3 * _tmp5;
  const Scalar _tmp7 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp6 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp12 = _tmp4 * _tmp8;
  const Scalar _tmp13 = _tmp11 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp16 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 + _tmp17;
  const Scalar _tmp19 = _tmp10 + _tmp18;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp6 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp22 = _tmp5 * _tmp7;
  const Scalar _tmp23 = _tmp3 * _tmp8;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp15 +
                        Scalar(0.20999999999999999) * _tmp26 + Scalar(0.20999999999999999);
  const Scalar _tmp28 = _tmp25 + _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(1, 0);
  const Scalar _tmp31 = Scalar(7.3875128562042027) *
                            std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp20), Scalar(2)) +
                        Scalar(22.802596067096832) *
                            std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp30), Scalar(2));
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp33 =
      -Scalar(0.010999999999999999) * _tmp16 - Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp35 = _tmp33 + _tmp34;
  const Scalar _tmp36 = _tmp32 + _tmp35;
  const Scalar _tmp37 = -_tmp10;
  const Scalar _tmp38 = _tmp18 + _tmp37;
  const Scalar _tmp39 = -_tmp21;
  const Scalar _tmp40 = _tmp25 - _tmp27;
  const Scalar _tmp41 = _tmp39 + _tmp40;
  const Scalar _tmp42 = Scalar(1.0) * _tmp41;
  const Scalar _tmp43 = -_tmp42;
  const Scalar _tmp44 = _tmp21 + _tmp40;
  const Scalar _tmp45 = _tmp43 + _tmp44;
  const Scalar _tmp46 = _tmp28 + _tmp39;
  const Scalar _tmp47 = Scalar(1.0) / (_tmp43 + _tmp46);
  const Scalar _tmp48 = _tmp14 - _tmp17;
  const Scalar _tmp49 = _tmp10 + _tmp48;
  const Scalar _tmp50 = _tmp37 + _tmp48;
  const Scalar _tmp51 = Scalar(1.0) * _tmp50;
  const Scalar _tmp52 = -_tmp49 + _tmp51;
  const Scalar _tmp53 = _tmp47 * _tmp52;
  const Scalar _tmp54 = _tmp45 * _tmp53;
  const Scalar _tmp55 = Scalar(1.0) / (-_tmp38 + _tmp51 - _tmp54);
  const Scalar _tmp56 = Scalar(1.0) * _tmp55;
  const Scalar _tmp57 = _tmp45 * _tmp47;
  const Scalar _tmp58 = _tmp20 + Scalar(-2.71799795);
  const Scalar _tmp59 = _tmp30 + Scalar(-4.7752063900000001);
  const Scalar _tmp60 = std::pow(Scalar(std::pow(_tmp58, Scalar(2)) + std::pow(_tmp59, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp58 * _tmp60;
  const Scalar _tmp62 = _tmp36 * fh1;
  const Scalar _tmp63 = Scalar(5.1796800000000003) * _tmp13 + _tmp19 * fv1 + _tmp61 * _tmp62;
  const Scalar _tmp64 = _tmp59 * _tmp60;
  const Scalar _tmp65 = -Scalar(5.1796800000000003) * _tmp24 - _tmp29 * fv1 - _tmp62 * _tmp64;
  const Scalar _tmp66 = _tmp54 * _tmp56 + Scalar(1.0);
  const Scalar _tmp67 = Scalar(1.0) * _tmp47;
  const Scalar _tmp68 = _tmp49 + position_vector(0, 0);
  const Scalar _tmp69 = _tmp68 + Scalar(1.79662371);
  const Scalar _tmp70 = _tmp46 + position_vector(1, 0);
  const Scalar _tmp71 = _tmp70 + Scalar(-4.8333311099999996);
  const Scalar _tmp72 = std::pow(Scalar(std::pow(_tmp69, Scalar(2)) + std::pow(_tmp71, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp73 = _tmp69 * _tmp72;
  const Scalar _tmp74 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp75 = _tmp74 + Scalar(8.3196563700000006);
  const Scalar _tmp76 = _tmp50 + position_vector(0, 0);
  const Scalar _tmp77 = _tmp76 + Scalar(1.9874742000000001);
  const Scalar _tmp78 =
      std::sqrt(Scalar(std::pow(_tmp75, Scalar(2)) + std::pow(_tmp77, Scalar(2))));
  const Scalar _tmp79 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp80 = Scalar(1.0) / (_tmp77);
  const Scalar _tmp81 = _tmp78 * _tmp80;
  const Scalar _tmp82 = _tmp81 * (-_tmp41 * _tmp77 * _tmp79 + _tmp50 * _tmp75 * _tmp79);
  const Scalar _tmp83 = _tmp71 * _tmp72;
  const Scalar _tmp84 = _tmp46 * _tmp73 - _tmp49 * _tmp83 + _tmp73 * _tmp82;
  const Scalar _tmp85 = _tmp75 * _tmp80;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp73 * _tmp85 - _tmp83);
  const Scalar _tmp87 = _tmp85 * _tmp86;
  const Scalar _tmp88 = -_tmp32;
  const Scalar _tmp89 = _tmp35 + _tmp88;
  const Scalar _tmp90 = _tmp33 - _tmp34;
  const Scalar _tmp91 = _tmp88 + _tmp90;
  const Scalar _tmp92 = _tmp85 * _tmp91;
  const Scalar _tmp93 = -_tmp73 * _tmp92 + _tmp83 * _tmp89;
  const Scalar _tmp94 = _tmp87 * _tmp93 + _tmp92;
  const Scalar _tmp95 = -_tmp73 * _tmp89 + _tmp73 * _tmp91;
  const Scalar _tmp96 = -_tmp53 * _tmp94 + _tmp87 * _tmp95 - _tmp91;
  const Scalar _tmp97 = _tmp44 + position_vector(1, 0);
  const Scalar _tmp98 = _tmp97 + Scalar(8.3888750099999996);
  const Scalar _tmp99 = _tmp38 + position_vector(0, 0);
  const Scalar _tmp100 = _tmp99 + Scalar(-2.5202214700000001);
  const Scalar _tmp101 =
      std::pow(Scalar(std::pow(_tmp100, Scalar(2)) + std::pow(_tmp98, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp102 = _tmp100 * _tmp101;
  const Scalar _tmp103 = _tmp101 * _tmp98;
  const Scalar _tmp104 = _tmp102 * _tmp85 - _tmp103;
  const Scalar _tmp105 = _tmp104 * _tmp86;
  const Scalar _tmp106 = _tmp102 * _tmp44 + _tmp102 * _tmp82 - _tmp103 * _tmp38 - _tmp105 * _tmp84;
  const Scalar _tmp107 = _tmp32 + _tmp90;
  const Scalar _tmp108 = -_tmp102 * _tmp92 + _tmp103 * _tmp107 - _tmp105 * _tmp93;
  const Scalar _tmp109 =
      -_tmp102 * _tmp107 + _tmp102 * _tmp91 - _tmp105 * _tmp95 - _tmp108 * _tmp53;
  const Scalar _tmp110 = Scalar(1.0) / (_tmp109);
  const Scalar _tmp111 = _tmp106 * _tmp110;
  const Scalar _tmp112 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp113 = _tmp109 * _tmp112;
  const Scalar _tmp114 = _tmp113 * (-_tmp111 * _tmp96 - _tmp82 + _tmp84 * _tmp87);
  const Scalar _tmp115 = _tmp114 + _tmp96;
  const Scalar _tmp116 = _tmp108 * _tmp110;
  const Scalar _tmp117 = _tmp45 * _tmp55;
  const Scalar _tmp118 = _tmp114 * _tmp117 - _tmp115 * _tmp116 + _tmp94;
  const Scalar _tmp119 = _tmp61 * fh1;
  const Scalar _tmp120 = _tmp113 * _tmp56;
  const Scalar _tmp121 = Scalar(1.0) * _tmp112;
  const Scalar _tmp122 = -_tmp108 * _tmp121 + _tmp120 * _tmp45;
  const Scalar _tmp123 = fh1 * (_tmp19 * _tmp64 - _tmp29 * _tmp61);
  const Scalar _tmp124 = Scalar(1.0) * _tmp86;
  const Scalar _tmp125 = -_tmp124 * _tmp95 + _tmp52 * _tmp67 * _tmp86 * _tmp93;
  const Scalar _tmp126 = _tmp113 * (-_tmp111 * _tmp125 - _tmp124 * _tmp84);
  const Scalar _tmp127 = _tmp125 + _tmp126;
  const Scalar _tmp128 = -_tmp116 * _tmp127 + _tmp117 * _tmp126 - _tmp124 * _tmp93;
  const Scalar _tmp129 = _tmp64 * fh1;
  const Scalar _tmp130 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp131 = _tmp42 * _tmp53 + _tmp51;
  const Scalar _tmp132 = 0;
  const Scalar _tmp133 = _tmp131 * _tmp55;
  const Scalar _tmp134 = -_tmp108 * _tmp132 - _tmp133 * _tmp45 + _tmp43;
  const Scalar _tmp135 = _tmp105 * _tmp73;
  const Scalar _tmp136 = _tmp102 * _tmp110;
  const Scalar _tmp137 = _tmp104 * _tmp110;
  const Scalar _tmp138 = -_tmp127 * _tmp137 + Scalar(1.0);
  const Scalar _tmp139 = _tmp73 * _tmp86;
  const Scalar _tmp140 = -_tmp115 * _tmp137 - _tmp85;
  const Scalar _tmp141 = -_tmp119 * _tmp81 * (_tmp115 * _tmp136 + _tmp139 * _tmp140 + Scalar(1.0)) -
                         _tmp123 * _tmp81 * (_tmp102 * _tmp121 - _tmp121 * _tmp135) -
                         _tmp129 * _tmp81 * (_tmp127 * _tmp136 + _tmp138 * _tmp139) -
                         _tmp130 * _tmp81 * (_tmp102 * _tmp132 - _tmp132 * _tmp135);
  const Scalar _tmp142 = Scalar(1.0) / (_tmp141);
  const Scalar _tmp143 = std::asinh(
      _tmp142 * (Scalar(1.0) * _tmp119 * (_tmp114 * _tmp56 - _tmp118 * _tmp67) +
                 Scalar(1.0) * _tmp123 * (_tmp120 - _tmp122 * _tmp67) +
                 Scalar(1.0) * _tmp129 * (_tmp126 * _tmp56 - _tmp128 * _tmp67) +
                 Scalar(1.0) * _tmp130 * (-_tmp131 * _tmp56 - _tmp134 * _tmp67 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp63 * (_tmp56 * _tmp57 - _tmp56) +
                 Scalar(1.0) * _tmp65 * (_tmp53 * _tmp56 - _tmp66 * _tmp67)));
  const Scalar _tmp144 = Scalar(9.6622558468725703) * _tmp141;
  const Scalar _tmp145 =
      Scalar(69.216682114881593) *
          std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp74 - 1), Scalar(2)) +
      Scalar(3.9500536956656402) *
          std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp76 - 1), Scalar(2));
  const Scalar _tmp146 = _tmp47 * _tmp65;
  const Scalar _tmp147 = _tmp56 * _tmp63;
  const Scalar _tmp148 = _tmp121 * _tmp123;
  const Scalar _tmp149 = _tmp130 * _tmp132;
  const Scalar _tmp150 = -_tmp105 * _tmp148 - _tmp105 * _tmp149 + _tmp119 * _tmp140 * _tmp86 +
                         _tmp129 * _tmp138 * _tmp86;
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 =
      std::asinh(_tmp151 * (_tmp118 * _tmp119 * _tmp47 + _tmp122 * _tmp123 * _tmp47 +
                            _tmp128 * _tmp129 * _tmp47 + _tmp130 * _tmp134 * _tmp47 +
                            _tmp146 * _tmp66 - _tmp147 * _tmp57));
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp150;
  const Scalar _tmp154 = Scalar(23.361089618893828) *
                             std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp70), Scalar(2)) +
                         Scalar(3.2278567553341642) *
                             std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp68 - 1), Scalar(2));
  const Scalar _tmp155 =
      _tmp110 * _tmp115 * _tmp119 + _tmp110 * _tmp127 * _tmp129 + _tmp148 + _tmp149;
  const Scalar _tmp156 = Scalar(1.0) / (_tmp155);
  const Scalar _tmp157 = std::asinh(_tmp156 * (-_tmp114 * _tmp119 * _tmp55 - _tmp120 * _tmp123 -
                                               _tmp126 * _tmp129 * _tmp55 + _tmp130 * _tmp133 -
                                               _tmp146 * _tmp52 * _tmp56 + _tmp147));
  const Scalar _tmp158 = Scalar(6.351516257848961) *
                             std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp99), Scalar(2)) +
                         Scalar(70.3732239334025) *
                             std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp97 - 1), Scalar(2));
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp155;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp2 * (-std::sinh(Scalar(1.0) * _tmp1) -
               std::sinh(Scalar(0.1034955) * _tmp0 * (-_tmp1 * _tmp2 - std::sqrt(_tmp31)))) -
      Scalar(8.36416322) *
          std::sqrt(Scalar(Scalar(0.014294040284261563) * _tmp31 +
                           std::pow(Scalar(-Scalar(0.1195576860108189) * _tmp36 -
                                           Scalar(0.1195576860108189) * position_vector(2, 0) + 1),
                                    Scalar(2))));
  _res(1, 0) =
      _tmp144 *
          (-std::sinh(Scalar(1.0) * _tmp143) -
           std::sinh(Scalar(0.1034955) * _tmp142 * (-_tmp143 * _tmp144 - std::sqrt(_tmp145)))) -
      Scalar(8.4718465799999993) *
          std::sqrt(Scalar(Scalar(0.013932974275675287) * _tmp145 +
                           std::pow(Scalar(-Scalar(0.11803802046660766) * _tmp91 -
                                           Scalar(0.11803802046660766) * position_vector(2, 0) + 1),
                                    Scalar(2))));
  _res(2, 0) =
      _tmp153 *
          (-std::sinh(Scalar(1.0) * _tmp152) -
           std::sinh(Scalar(0.1034955) * _tmp151 * (-_tmp152 * _tmp153 - std::sqrt(_tmp154)))) -
      Scalar(8.3700199099999999) *
          std::sqrt(Scalar(Scalar(0.01427404356387209) * _tmp154 +
                           std::pow(Scalar(-Scalar(0.11947402882581673) * _tmp89 -
                                           Scalar(0.11947402882581673) * position_vector(2, 0) + 1),
                                    Scalar(2))));
  _res(3, 0) =
      _tmp159 *
          (-std::sinh(Scalar(1.0) * _tmp157) -
           std::sinh(Scalar(0.1034955) * _tmp156 * (-_tmp157 * _tmp159 - std::sqrt(_tmp158)))) -
      Scalar(8.4693136199999994) *
          std::sqrt(Scalar(Scalar(0.013941309530580858) * _tmp158 +
                           std::pow(Scalar(-Scalar(0.11807332268798426) * _tmp107 -
                                           Scalar(0.11807332268798426) * position_vector(2, 0) + 1),
                                    Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
