// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost3_wrt_position_vector
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     lc0: Scalar
 *     lc1: Scalar
 *     lc2: Scalar
 *     lc3: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> FkResidualFuncCost3WrtPositionVector(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar lc0, const Scalar lc1, const Scalar lc2, const Scalar lc3, const Scalar epsilon) {
  // Total ops: 960

  // Unused inputs
  (void)lc0;
  (void)lc1;
  (void)lc2;
  (void)lc3;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (293)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp9 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp8 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = 2 * _tmp3;
  const Scalar _tmp12 = _tmp1 * _tmp11;
  const Scalar _tmp13 = _tmp0 * _tmp4;
  const Scalar _tmp14 =
      -Scalar(0.010999999999999999) * _tmp12 - Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = -_tmp10 + _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp7;
  const Scalar _tmp17 = _tmp16 + position_vector(0, 0) + Scalar(1.9874742000000001);
  const Scalar _tmp18 = _tmp10 + _tmp14;
  const Scalar _tmp19 = _tmp18 + _tmp7;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0) + Scalar(-2.5202214700000001);
  const Scalar _tmp21 = Scalar(1.0) / (_tmp20);
  const Scalar _tmp22 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp8 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp26 = _tmp0 * _tmp11;
  const Scalar _tmp27 = _tmp1 * _tmp4;
  const Scalar _tmp28 =
      -Scalar(0.010999999999999999) * _tmp26 + Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = _tmp25 + _tmp28;
  const Scalar _tmp30 = _tmp24 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(1, 0) + Scalar(8.3888750099999996);
  const Scalar _tmp32 = std::pow(_tmp31, Scalar(2));
  const Scalar _tmp33 = std::pow(_tmp20, Scalar(2));
  const Scalar _tmp34 = _tmp32 + _tmp33;
  const Scalar _tmp35 = std::sqrt(_tmp34);
  const Scalar _tmp36 = _tmp21 * _tmp35;
  const Scalar _tmp37 = _tmp15 + _tmp6;
  const Scalar _tmp38 = _tmp37 + position_vector(0, 0) + Scalar(1.79662371);
  const Scalar _tmp39 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp40 = Scalar(0.20999999999999999) * _tmp12 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp41 = Scalar(0.20999999999999999) * _tmp26 + Scalar(0.20999999999999999) * _tmp27;
  const Scalar _tmp42 = _tmp39 - _tmp40 + _tmp41;
  const Scalar _tmp43 = std::pow(_tmp38, Scalar(2));
  const Scalar _tmp44 = -_tmp25 + _tmp28;
  const Scalar _tmp45 = _tmp23 + _tmp44;
  const Scalar _tmp46 = _tmp45 + position_vector(1, 0) + Scalar(-4.8333311099999996);
  const Scalar _tmp47 = std::pow(_tmp46, Scalar(2));
  const Scalar _tmp48 = _tmp43 + _tmp47;
  const Scalar _tmp49 = std::pow(_tmp48, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp50 = _tmp42 * _tmp49;
  const Scalar _tmp51 = _tmp39 + _tmp40;
  const Scalar _tmp52 = -_tmp41 + _tmp51;
  const Scalar _tmp53 = _tmp49 * _tmp52;
  const Scalar _tmp54 = _tmp38 * _tmp53;
  const Scalar _tmp55 = _tmp21 * _tmp52;
  const Scalar _tmp56 = _tmp31 * _tmp55;
  const Scalar _tmp57 = _tmp38 * _tmp49;
  const Scalar _tmp58 = _tmp41 + _tmp51;
  const Scalar _tmp59 = _tmp23 + _tmp29;
  const Scalar _tmp60 = _tmp59 + position_vector(1, 0) + Scalar(-4.7752063900000001);
  const Scalar _tmp61 = std::pow(_tmp60, Scalar(2));
  const Scalar _tmp62 = _tmp18 + _tmp6;
  const Scalar _tmp63 = _tmp62 + position_vector(0, 0) + Scalar(-2.71799795);
  const Scalar _tmp64 = std::pow(_tmp63, Scalar(2));
  const Scalar _tmp65 = _tmp61 + _tmp64;
  const Scalar _tmp66 = std::pow(_tmp65, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp67 = _tmp60 * _tmp66;
  const Scalar _tmp68 = _tmp21 * _tmp31;
  const Scalar _tmp69 = _tmp52 * _tmp66;
  const Scalar _tmp70 = _tmp63 * _tmp69;
  const Scalar _tmp71 = _tmp58 * _tmp67 - _tmp68 * _tmp70;
  const Scalar _tmp72 = _tmp66 * _tmp68;
  const Scalar _tmp73 = _tmp63 * _tmp72;
  const Scalar _tmp74 = -_tmp67 + _tmp73;
  const Scalar _tmp75 = Scalar(1.0) / (_tmp74);
  const Scalar _tmp76 = -_tmp46 * _tmp49 + _tmp57 * _tmp68;
  const Scalar _tmp77 = _tmp75 * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) * _tmp30;
  const Scalar _tmp79 = Scalar(1.0) * _tmp19;
  const Scalar _tmp80 = (-_tmp62 + _tmp79) / (_tmp59 - _tmp78);
  const Scalar _tmp81 = _tmp58 * _tmp66;
  const Scalar _tmp82 = -_tmp63 * _tmp81 + _tmp70;
  const Scalar _tmp83 = -_tmp38 * _tmp50 + _tmp54 - _tmp77 * _tmp82 -
                        _tmp80 * (_tmp46 * _tmp50 - _tmp56 * _tmp57 - _tmp71 * _tmp77);
  const Scalar _tmp84 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp85 = _tmp68 * _tmp75;
  const Scalar _tmp86 = _tmp71 * _tmp75;
  const Scalar _tmp87 = -_tmp52 - _tmp80 * (_tmp56 + _tmp68 * _tmp86) + _tmp82 * _tmp85;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp35);
  const Scalar _tmp89 = _tmp19 * _tmp88;
  const Scalar _tmp90 = _tmp30 * _tmp88;
  const Scalar _tmp91 = -_tmp20 * _tmp90 + _tmp31 * _tmp89;
  const Scalar _tmp92 = _tmp35 * _tmp91;
  const Scalar _tmp93 = _tmp21 * _tmp92;
  const Scalar _tmp94 = _tmp63 * _tmp66;
  const Scalar _tmp95 = _tmp59 * _tmp66;
  const Scalar _tmp96 = -_tmp62 * _tmp67 + _tmp63 * _tmp95 + _tmp93 * _tmp94;
  const Scalar _tmp97 = _tmp37 * _tmp49;
  const Scalar _tmp98 = _tmp45 * _tmp49;
  const Scalar _tmp99 = _tmp38 * _tmp98 - _tmp46 * _tmp97 + _tmp57 * _tmp93 - _tmp77 * _tmp96;
  const Scalar _tmp100 = _tmp84 * _tmp99;
  const Scalar _tmp101 = -_tmp100 * _tmp87 + _tmp85 * _tmp96 - _tmp93;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp99);
  const Scalar _tmp103 = _tmp102 * _tmp83;
  const Scalar _tmp104 = _tmp101 * _tmp103 + _tmp87;
  const Scalar _tmp105 = _tmp104 * _tmp84;
  const Scalar _tmp106 = -_tmp105 * _tmp76 - _tmp68;
  const Scalar _tmp107 = _tmp75 * _tmp94;
  const Scalar _tmp108 = _tmp105 * _tmp57 + _tmp106 * _tmp107 + Scalar(1.0);
  const Scalar _tmp109 = std::pow(_tmp17, Scalar(2));
  const Scalar _tmp110 = _tmp24 + _tmp44;
  const Scalar _tmp111 = _tmp110 + position_vector(1, 0) + Scalar(8.3196563700000006);
  const Scalar _tmp112 = std::pow(_tmp111, Scalar(2));
  const Scalar _tmp113 = _tmp109 + _tmp112;
  const Scalar _tmp114 = std::pow(_tmp113, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp115 = _tmp114 * fh1;
  const Scalar _tmp116 = _tmp108 * _tmp115;
  const Scalar _tmp117 = _tmp116 * _tmp36;
  const Scalar _tmp118 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp119 = _tmp78 * _tmp80 + _tmp79;
  const Scalar _tmp120 = 0;
  const Scalar _tmp121 = _tmp120 * _tmp84;
  const Scalar _tmp122 = _tmp121 * _tmp77;
  const Scalar _tmp123 = _tmp121 * _tmp49;
  const Scalar _tmp124 = _tmp118 * (-_tmp122 * _tmp94 + _tmp123 * _tmp38);
  const Scalar _tmp125 = Scalar(1.0) * _tmp75;
  const Scalar _tmp126 = _tmp125 * _tmp80;
  const Scalar _tmp127 = -_tmp125 * _tmp82 + _tmp126 * _tmp71;
  const Scalar _tmp128 = _tmp127 * _tmp84;
  const Scalar _tmp129 = -_tmp125 * _tmp96 - _tmp128 * _tmp99;
  const Scalar _tmp130 = _tmp102 * _tmp129;
  const Scalar _tmp131 = _tmp127 + _tmp130 * _tmp83;
  const Scalar _tmp132 = _tmp131 * _tmp84;
  const Scalar _tmp133 = _tmp76 * _tmp84;
  const Scalar _tmp134 = -_tmp131 * _tmp133 + Scalar(1.0);
  const Scalar _tmp135 = _tmp107 * _tmp134 + _tmp132 * _tmp57;
  const Scalar _tmp136 = _tmp115 * _tmp135;
  const Scalar _tmp137 = _tmp136 * _tmp36;
  const Scalar _tmp138 = Scalar(1.0) * _tmp102;
  const Scalar _tmp139 = _tmp138 * _tmp49;
  const Scalar _tmp140 = _tmp102 * _tmp125;
  const Scalar _tmp141 = _tmp140 * _tmp76;
  const Scalar _tmp142 = _tmp139 * _tmp38 - _tmp141 * _tmp94;
  const Scalar _tmp143 = _tmp114 * _tmp16;
  const Scalar _tmp144 = _tmp110 * _tmp114;
  const Scalar _tmp145 = _tmp111 * _tmp143 - _tmp144 * _tmp17;
  const Scalar _tmp146 = _tmp145 * fh1;
  const Scalar _tmp147 = _tmp142 * _tmp146;
  const Scalar _tmp148 =
      std::exp(_tmp111 * _tmp137 + _tmp117 * _tmp17 + _tmp124 * _tmp36 + _tmp147 * _tmp36);
  const Scalar _tmp149 = _tmp142 * _tmp36;
  const Scalar _tmp150 = std::pow(_tmp113, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp151 = _tmp110 * _tmp150;
  const Scalar _tmp152 = _tmp150 * _tmp16;
  const Scalar _tmp153 = _tmp111 * _tmp17;
  const Scalar _tmp154 = _tmp109 * _tmp151 - _tmp144 - _tmp152 * _tmp153;
  const Scalar _tmp155 = _tmp154 * fh1;
  const Scalar _tmp156 = std::pow(_tmp65, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp157 = _tmp156 * _tmp64;
  const Scalar _tmp158 = -_tmp157 * _tmp52 + _tmp157 * _tmp58 + _tmp69 - _tmp81;
  const Scalar _tmp159 = std::pow(_tmp48, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp160 = _tmp159 * _tmp43;
  const Scalar _tmp161 = _tmp156 * _tmp60 * _tmp63;
  const Scalar _tmp162 = _tmp161 * _tmp58;
  const Scalar _tmp163 = Scalar(1.0) / (_tmp33);
  const Scalar _tmp164 = _tmp163 * _tmp31;
  const Scalar _tmp165 = _tmp157 * _tmp56 - _tmp162 + _tmp164 * _tmp70 - _tmp68 * _tmp69;
  const Scalar _tmp166 = std::pow(_tmp74, Scalar(-2));
  const Scalar _tmp167 = _tmp166 * (-_tmp157 * _tmp68 + _tmp161 - _tmp164 * _tmp94 + _tmp72);
  const Scalar _tmp168 = _tmp167 * _tmp76;
  const Scalar _tmp169 = _tmp159 * _tmp38 * _tmp46;
  const Scalar _tmp170 = -_tmp160 * _tmp68 - _tmp164 * _tmp57 + _tmp169 + _tmp49 * _tmp68;
  const Scalar _tmp171 = _tmp170 * _tmp75;
  const Scalar _tmp172 = _tmp169 * _tmp42;
  const Scalar _tmp173 = -_tmp158 * _tmp77 + _tmp160 * _tmp42 - _tmp160 * _tmp52 +
                         _tmp168 * _tmp82 - _tmp171 * _tmp82 - _tmp50 + _tmp53 -
                         _tmp80 * (_tmp160 * _tmp56 + _tmp164 * _tmp54 - _tmp165 * _tmp77 +
                                   _tmp168 * _tmp71 - _tmp171 * _tmp71 - _tmp172 - _tmp49 * _tmp56);
  const Scalar _tmp174 = std::pow(_tmp83, Scalar(-2));
  const Scalar _tmp175 = _tmp173 * _tmp174;
  const Scalar _tmp176 = _tmp120 * _tmp77 * _tmp94;
  const Scalar _tmp177 = _tmp121 * _tmp94;
  const Scalar _tmp178 = _tmp175 * _tmp57;
  const Scalar _tmp179 = _tmp118 * _tmp36;
  const Scalar _tmp180 = _tmp150 * fh1;
  const Scalar _tmp181 = _tmp109 * _tmp180;
  const Scalar _tmp182 = _tmp108 * _tmp36;
  const Scalar _tmp183 = _tmp163 * _tmp35;
  const Scalar _tmp184 = _tmp116 * _tmp17;
  const Scalar _tmp185 = _tmp111 * _tmp136;
  const Scalar _tmp186 = _tmp185 * _tmp88;
  const Scalar _tmp187 = _tmp76 * _tmp96;
  const Scalar _tmp188 = _tmp88 * _tmp91;
  const Scalar _tmp189 = _tmp188 * _tmp57;
  const Scalar _tmp190 = _tmp163 * _tmp92;
  const Scalar _tmp191 = std::pow(_tmp34, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp192 = _tmp19 * _tmp191;
  const Scalar _tmp193 = _tmp20 * _tmp31;
  const Scalar _tmp194 = _tmp191 * _tmp30;
  const Scalar _tmp195 = _tmp36 * (-_tmp192 * _tmp193 + _tmp194 * _tmp33 - _tmp90);
  const Scalar _tmp196 = -_tmp157 * _tmp59 - _tmp157 * _tmp93 + _tmp161 * _tmp62 +
                         _tmp188 * _tmp94 - _tmp190 * _tmp94 + _tmp195 * _tmp94 + _tmp66 * _tmp93 +
                         _tmp95;
  const Scalar _tmp197 = -_tmp160 * _tmp45 - _tmp160 * _tmp93 + _tmp167 * _tmp187 +
                         _tmp169 * _tmp37 - _tmp171 * _tmp96 + _tmp189 - _tmp190 * _tmp57 +
                         _tmp195 * _tmp57 - _tmp196 * _tmp77 + _tmp49 * _tmp93 + _tmp98;
  const Scalar _tmp198 = std::pow(_tmp99, Scalar(-2));
  const Scalar _tmp199 = Scalar(1.0) * _tmp198;
  const Scalar _tmp200 = _tmp197 * _tmp199;
  const Scalar _tmp201 = _tmp140 * _tmp170;
  const Scalar _tmp202 = _tmp138 * _tmp94;
  const Scalar _tmp203 = _tmp125 * _tmp198 * _tmp76;
  const Scalar _tmp204 = _tmp203 * _tmp94;
  const Scalar _tmp205 = _tmp146 * _tmp36;
  const Scalar _tmp206 = _tmp147 * _tmp88;
  const Scalar _tmp207 = _tmp104 * _tmp76;
  const Scalar _tmp208 = _tmp198 * _tmp83;
  const Scalar _tmp209 = _tmp197 * _tmp208;
  const Scalar _tmp210 = _tmp101 * _tmp102;
  const Scalar _tmp211 = _tmp167 * _tmp68;
  const Scalar _tmp212 = _tmp164 * _tmp75;
  const Scalar _tmp213 =
      _tmp158 * _tmp85 - _tmp211 * _tmp82 - _tmp212 * _tmp82 -
      _tmp80 * (-_tmp164 * _tmp52 - _tmp164 * _tmp86 + _tmp165 * _tmp85 - _tmp211 * _tmp71);
  const Scalar _tmp214 = _tmp68 * _tmp96;
  const Scalar _tmp215 = _tmp84 * _tmp87;
  const Scalar _tmp216 = _tmp87 * _tmp99;
  const Scalar _tmp217 =
      -_tmp101 * _tmp209 +
      _tmp103 * (-_tmp100 * _tmp213 - _tmp167 * _tmp214 + _tmp175 * _tmp216 - _tmp188 + _tmp190 -
                 _tmp195 + _tmp196 * _tmp85 - _tmp197 * _tmp215 - _tmp212 * _tmp96) +
      _tmp173 * _tmp210 + _tmp213;
  const Scalar _tmp218 = -_tmp105 * _tmp170 - _tmp133 * _tmp217 + _tmp164 + _tmp175 * _tmp207;
  const Scalar _tmp219 = _tmp66 * _tmp75;
  const Scalar _tmp220 = _tmp167 * _tmp94;
  const Scalar _tmp221 = _tmp106 * _tmp75;
  const Scalar _tmp222 = _tmp57 * _tmp84;
  const Scalar _tmp223 = _tmp115 * _tmp36;
  const Scalar _tmp224 = _tmp17 * _tmp223;
  const Scalar _tmp225 = _tmp153 * _tmp180;
  const Scalar _tmp226 = _tmp135 * _tmp36;
  const Scalar _tmp227 = _tmp134 * _tmp75;
  const Scalar _tmp228 = Scalar(1.0) * _tmp82;
  const Scalar _tmp229 = Scalar(1.0) * _tmp71 * _tmp80;
  const Scalar _tmp230 =
      -_tmp125 * _tmp158 + _tmp126 * _tmp165 + _tmp167 * _tmp228 - _tmp167 * _tmp229;
  const Scalar _tmp231 = _tmp127 * _tmp99;
  const Scalar _tmp232 = Scalar(1.0) * _tmp96;
  const Scalar _tmp233 = _tmp103 * (-_tmp100 * _tmp230 - _tmp125 * _tmp196 - _tmp128 * _tmp197 +
                                    _tmp167 * _tmp232 + _tmp175 * _tmp231) -
                         _tmp129 * _tmp209 + _tmp130 * _tmp173 + _tmp230;
  const Scalar _tmp234 = _tmp131 * _tmp76;
  const Scalar _tmp235 = -_tmp132 * _tmp170 - _tmp133 * _tmp233 + _tmp175 * _tmp234;
  const Scalar _tmp236 = _tmp111 * _tmp223;
  const Scalar _tmp237 = _tmp124 * _tmp88;
  const Scalar _tmp238 = _tmp184 * _tmp88;
  const Scalar _tmp239 = _tmp118 * _tmp121;
  const Scalar _tmp240 = _tmp115 * _tmp221;
  const Scalar _tmp241 = _tmp115 * _tmp227;
  const Scalar _tmp242 =
      std::exp(-_tmp111 * _tmp241 + _tmp141 * _tmp146 - _tmp17 * _tmp240 + _tmp239 * _tmp77);
  const Scalar _tmp243 = _tmp138 * fh1;
  const Scalar _tmp244 = _tmp145 * _tmp243;
  const Scalar _tmp245 = _tmp111 * _tmp115;
  const Scalar _tmp246 = _tmp134 * _tmp245;
  const Scalar _tmp247 = _tmp115 * _tmp17;
  const Scalar _tmp248 = _tmp106 * _tmp247;
  const Scalar _tmp249 = _tmp115 * _tmp75;
  const Scalar _tmp250 = _tmp17 * _tmp249;
  const Scalar _tmp251 = _tmp111 * _tmp249;
  const Scalar _tmp252 = _tmp118 * _tmp120;
  const Scalar _tmp253 = _tmp175 * _tmp252;
  const Scalar _tmp254 = _tmp146 * _tmp203;
  const Scalar _tmp255 = _tmp115 * _tmp132;
  const Scalar _tmp256 = _tmp105 * _tmp115;
  const Scalar _tmp257 = std::exp(-_tmp111 * _tmp255 - _tmp17 * _tmp256 - _tmp239 - _tmp244);
  const Scalar _tmp258 = _tmp131 * _tmp245;
  const Scalar _tmp259 = _tmp115 * _tmp84;
  const Scalar _tmp260 = _tmp17 * _tmp259;
  const Scalar _tmp261 = _tmp111 * _tmp259;
  const Scalar _tmp262 = _tmp104 * _tmp247;
  const Scalar _tmp263 = _tmp112 * _tmp180;
  const Scalar _tmp264 = _tmp156 * _tmp61;
  const Scalar _tmp265 = _tmp166 * (-_tmp161 * _tmp68 + _tmp21 * _tmp94 + _tmp264 - _tmp66);
  const Scalar _tmp266 = _tmp265 * _tmp76;
  const Scalar _tmp267 = _tmp36 * (-_tmp192 * _tmp32 + _tmp193 * _tmp194 + _tmp89);
  const Scalar _tmp268 = -_tmp161 * _tmp59 - _tmp161 * _tmp93 + _tmp188 * _tmp73 +
                         _tmp264 * _tmp62 + _tmp267 * _tmp94 - _tmp62 * _tmp66;
  const Scalar _tmp269 = _tmp159 * _tmp47;
  const Scalar _tmp270 = -_tmp169 * _tmp68 + _tmp21 * _tmp57 + _tmp269 - _tmp49;
  const Scalar _tmp271 = _tmp270 * _tmp75;
  const Scalar _tmp272 = -_tmp169 * _tmp45 - _tmp169 * _tmp93 + _tmp187 * _tmp265 +
                         _tmp189 * _tmp68 + _tmp267 * _tmp57 - _tmp268 * _tmp77 + _tmp269 * _tmp37 -
                         _tmp271 * _tmp96 - _tmp97;
  const Scalar _tmp273 = _tmp199 * _tmp272;
  const Scalar _tmp274 = _tmp140 * _tmp270;
  const Scalar _tmp275 = -_tmp112 * _tmp152 + _tmp143 + _tmp151 * _tmp153;
  const Scalar _tmp276 = _tmp275 * fh1;
  const Scalar _tmp277 = -_tmp161 * _tmp52 + _tmp162;
  const Scalar _tmp278 = _tmp161 * _tmp56 - _tmp21 * _tmp70 - _tmp264 * _tmp58 + _tmp81;
  const Scalar _tmp279 = -_tmp169 * _tmp52 + _tmp172 + _tmp266 * _tmp82 - _tmp271 * _tmp82 -
                         _tmp277 * _tmp77 -
                         _tmp80 * (_tmp169 * _tmp56 + _tmp266 * _tmp71 - _tmp269 * _tmp42 -
                                   _tmp271 * _tmp71 - _tmp278 * _tmp77 + _tmp50 - _tmp55 * _tmp57);
  const Scalar _tmp280 = _tmp174 * _tmp279;
  const Scalar _tmp281 = _tmp280 * _tmp57;
  const Scalar _tmp282 = _tmp208 * _tmp272;
  const Scalar _tmp283 = _tmp21 * _tmp75;
  const Scalar _tmp284 = _tmp265 * _tmp68;
  const Scalar _tmp285 = _tmp277 * _tmp85 + _tmp283 * _tmp82 - _tmp284 * _tmp82 -
                         _tmp80 * (_tmp278 * _tmp85 + _tmp283 * _tmp71 - _tmp284 * _tmp71 + _tmp55);
  const Scalar _tmp286 =
      -_tmp101 * _tmp282 +
      _tmp103 * (-_tmp100 * _tmp285 - _tmp188 * _tmp68 - _tmp214 * _tmp265 - _tmp215 * _tmp272 +
                 _tmp216 * _tmp280 - _tmp267 + _tmp268 * _tmp85 + _tmp283 * _tmp96) +
      _tmp210 * _tmp279 + _tmp285;
  const Scalar _tmp287 = -_tmp105 * _tmp270 - _tmp133 * _tmp286 + _tmp207 * _tmp280 - _tmp21;
  const Scalar _tmp288 = _tmp265 * _tmp94;
  const Scalar _tmp289 =
      -_tmp125 * _tmp277 + _tmp126 * _tmp278 + _tmp228 * _tmp265 - _tmp229 * _tmp265;
  const Scalar _tmp290 = _tmp103 * (-_tmp100 * _tmp289 - _tmp125 * _tmp268 - _tmp128 * _tmp272 +
                                    _tmp231 * _tmp280 + _tmp232 * _tmp265) -
                         _tmp129 * _tmp282 + _tmp130 * _tmp279 + _tmp289;
  const Scalar _tmp291 = -_tmp132 * _tmp270 - _tmp133 * _tmp290 + _tmp234 * _tmp280;
  const Scalar _tmp292 = _tmp252 * _tmp280;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -_tmp148 *
      (-_tmp117 + _tmp124 * _tmp183 + _tmp147 * _tmp183 - _tmp149 * _tmp155 -
       _tmp179 * (-_tmp120 * _tmp178 - _tmp121 * _tmp160 + _tmp122 * _tmp157 - _tmp122 * _tmp66 +
                  _tmp123 + _tmp168 * _tmp177 - _tmp171 * _tmp177 + _tmp175 * _tmp176) +
       _tmp181 * _tmp182 + _tmp183 * _tmp184 + _tmp183 * _tmp185 - _tmp186 -
       _tmp205 * (-_tmp138 * _tmp160 + _tmp139 + _tmp141 * _tmp157 - _tmp141 * _tmp66 +
                  _tmp168 * _tmp202 + _tmp197 * _tmp204 - _tmp200 * _tmp57 - _tmp201 * _tmp94) -
       _tmp206 -
       _tmp224 * (-_tmp104 * _tmp178 - _tmp105 * _tmp160 + _tmp105 * _tmp49 + _tmp106 * _tmp219 -
                  _tmp106 * _tmp220 + _tmp107 * _tmp218 - _tmp157 * _tmp221 + _tmp217 * _tmp222) +
       _tmp225 * _tmp226 -
       _tmp236 * (_tmp107 * _tmp235 - _tmp131 * _tmp178 - _tmp132 * _tmp160 + _tmp132 * _tmp49 +
                  _tmp134 * _tmp219 - _tmp134 * _tmp220 - _tmp157 * _tmp227 + _tmp222 * _tmp233) -
       _tmp237 - _tmp238);
  _res(2, 0) =
      -_tmp242 * (-_tmp141 * _tmp155 - _tmp146 * _tmp201 - _tmp167 * _tmp246 - _tmp167 * _tmp248 +
                  _tmp168 * _tmp239 + _tmp168 * _tmp244 - _tmp171 * _tmp239 - _tmp181 * _tmp221 +
                  _tmp197 * _tmp254 + _tmp218 * _tmp250 - _tmp225 * _tmp227 + _tmp235 * _tmp251 +
                  _tmp240 + _tmp253 * _tmp77);
  _res(3, 0) = -_tmp257 * (-_tmp105 * _tmp181 - _tmp132 * _tmp225 - _tmp146 * _tmp200 +
                           _tmp154 * _tmp243 - _tmp175 * _tmp258 - _tmp175 * _tmp262 +
                           _tmp217 * _tmp260 + _tmp233 * _tmp261 - _tmp253 + _tmp256);
  _res(0, 1) = 0;
  _res(1, 1) = -_tmp148 * (-_tmp137 - _tmp149 * _tmp276 -
                           _tmp179 * (-_tmp120 * _tmp281 - _tmp121 * _tmp169 + _tmp122 * _tmp161 +
                                      _tmp176 * _tmp280 + _tmp177 * _tmp266 - _tmp177 * _tmp271) +
                           _tmp182 * _tmp225 - _tmp186 * _tmp68 -
                           _tmp205 * (-_tmp138 * _tmp169 + _tmp141 * _tmp161 + _tmp202 * _tmp266 +
                                      _tmp204 * _tmp272 - _tmp273 * _tmp57 - _tmp274 * _tmp94) -
                           _tmp206 * _tmp68 -
                           _tmp224 * (-_tmp104 * _tmp281 - _tmp105 * _tmp169 - _tmp106 * _tmp288 +
                                      _tmp107 * _tmp287 - _tmp161 * _tmp221 + _tmp222 * _tmp286) +
                           _tmp226 * _tmp263 -
                           _tmp236 * (_tmp107 * _tmp291 - _tmp131 * _tmp281 - _tmp132 * _tmp169 -
                                      _tmp134 * _tmp288 - _tmp161 * _tmp227 + _tmp222 * _tmp290) -
                           _tmp237 * _tmp68 - _tmp238 * _tmp68);
  _res(2, 1) =
      -_tmp242 * (-_tmp141 * _tmp276 - _tmp146 * _tmp274 - _tmp221 * _tmp225 - _tmp227 * _tmp263 +
                  _tmp239 * _tmp266 - _tmp239 * _tmp271 + _tmp241 + _tmp244 * _tmp266 -
                  _tmp246 * _tmp265 - _tmp248 * _tmp265 + _tmp250 * _tmp287 + _tmp251 * _tmp291 +
                  _tmp254 * _tmp272 + _tmp292 * _tmp77);
  _res(3, 1) = -_tmp257 * (-_tmp105 * _tmp225 - _tmp132 * _tmp263 - _tmp146 * _tmp273 +
                           _tmp243 * _tmp275 + _tmp255 - _tmp258 * _tmp280 + _tmp260 * _tmp286 +
                           _tmp261 * _tmp290 - _tmp262 * _tmp280 - _tmp292);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
