// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fh1_Nl1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFh1Nl1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 656

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (214)
  const Scalar _tmp0 = std::pow(fh1, Scalar(-2));
  const Scalar _tmp1 = Scalar(1.0) / (fh1);
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp5 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp9 = 2 * _tmp2;
  const Scalar _tmp10 = _tmp8 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp4;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp4 * _tmp8;
  const Scalar _tmp15 = _tmp11 * _tmp2;
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = -Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp13 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp7;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = _tmp4 * _tmp9;
  const Scalar _tmp24 = _tmp11 * _tmp8;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = 1 - 2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp27 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp29 = _tmp26 - _tmp28;
  const Scalar _tmp30 = _tmp22 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = _tmp1 * fv1;
  const Scalar _tmp33 = std::asinh(_tmp32);
  const Scalar _tmp34 = Scalar(9.6622558468725703) * _tmp33;
  const Scalar _tmp35 =
      -Scalar(0.1034955) * _tmp34 * fh1 -
      Scalar(0.86104699584133515) *
          std::sqrt(
              Scalar(std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp20 - 1), Scalar(2)) +
                     Scalar(0.057067943376852184) *
                         std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp31 - 1), Scalar(2))));
  const Scalar _tmp36 = _tmp1 * _tmp35;
  const Scalar _tmp37 =
      std::pow(Scalar(_tmp0 * std::pow(fv1, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp38 = Scalar(1.0) * _tmp33;
  const Scalar _tmp39 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp40 = _tmp13 + _tmp17;
  const Scalar _tmp41 = _tmp40 + _tmp6;
  const Scalar _tmp42 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(-4.7752063900000001);
  const Scalar _tmp44 = _tmp26 + _tmp28;
  const Scalar _tmp45 = _tmp21 + _tmp44;
  const Scalar _tmp46 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp47 = _tmp46 + Scalar(-2.71799795);
  const Scalar _tmp48 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp47, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp47 * _tmp48;
  const Scalar _tmp50 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp51 = -_tmp50;
  const Scalar _tmp52 =
      -Scalar(0.010999999999999999) * _tmp27 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp53 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp54 = _tmp52 + _tmp53;
  const Scalar _tmp55 = _tmp51 + _tmp54;
  const Scalar _tmp56 = _tmp22 + _tmp44;
  const Scalar _tmp57 = _tmp56 + position_vector(0, 0);
  const Scalar _tmp58 = _tmp57 + Scalar(-2.5202214700000001);
  const Scalar _tmp59 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp60 = _tmp40 + _tmp7;
  const Scalar _tmp61 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(8.3888750099999996);
  const Scalar _tmp63 = _tmp59 * _tmp62;
  const Scalar _tmp64 = _tmp43 * _tmp48;
  const Scalar _tmp65 = _tmp49 * _tmp63 - _tmp64;
  const Scalar _tmp66 = _tmp52 - _tmp53;
  const Scalar _tmp67 = _tmp50 + _tmp66;
  const Scalar _tmp68 = _tmp21 + _tmp29;
  const Scalar _tmp69 = _tmp68 + position_vector(0, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(1.79662371);
  const Scalar _tmp71 = _tmp18 + _tmp6;
  const Scalar _tmp72 = _tmp71 + position_vector(1, 0);
  const Scalar _tmp73 = _tmp72 + Scalar(-4.8333311099999996);
  const Scalar _tmp74 = std::pow(Scalar(std::pow(_tmp70, Scalar(2)) + std::pow(_tmp73, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp75 = _tmp70 * _tmp74;
  const Scalar _tmp76 = _tmp73 * _tmp74;
  const Scalar _tmp77 = Scalar(1.0) / (_tmp63 * _tmp75 - _tmp76);
  const Scalar _tmp78 = _tmp77 * (_tmp55 * _tmp75 - _tmp67 * _tmp75);
  const Scalar _tmp79 = _tmp50 + _tmp54;
  const Scalar _tmp80 = _tmp55 * _tmp63;
  const Scalar _tmp81 = _tmp67 * _tmp76 - _tmp75 * _tmp80;
  const Scalar _tmp82 = _tmp65 * _tmp77;
  const Scalar _tmp83 = -_tmp49 * _tmp80 + _tmp64 * _tmp79 - _tmp81 * _tmp82;
  const Scalar _tmp84 = Scalar(1.0) * _tmp56;
  const Scalar _tmp85 = Scalar(1.0) * _tmp60;
  const Scalar _tmp86 = -_tmp85;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp71 + _tmp86);
  const Scalar _tmp88 = _tmp87 * (-_tmp68 + _tmp84);
  const Scalar _tmp89 = _tmp49 * _tmp55 - _tmp49 * _tmp79 - _tmp65 * _tmp78 - _tmp83 * _tmp88;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp91 = _tmp84 + _tmp85 * _tmp88;
  const Scalar _tmp92 = 0;
  const Scalar _tmp93 = _tmp90 * _tmp92;
  const Scalar _tmp94 =
      std::sqrt(Scalar(std::pow(_tmp58, Scalar(2)) + std::pow(_tmp62, Scalar(2))));
  const Scalar _tmp95 = _tmp59 * _tmp94;
  const Scalar _tmp96 = _tmp31 + Scalar(1.9874742000000001);
  const Scalar _tmp97 = _tmp20 + Scalar(8.3196563700000006);
  const Scalar _tmp98 = std::pow(Scalar(std::pow(_tmp96, Scalar(2)) + std::pow(_tmp97, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp99 = _tmp97 * _tmp98;
  const Scalar _tmp100 = _tmp96 * _tmp98;
  const Scalar _tmp101 = -_tmp100 * _tmp19 + _tmp30 * _tmp99;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp103 = _tmp95 * (_tmp102 * _tmp56 * _tmp62 - _tmp102 * _tmp58 * _tmp60);
  const Scalar _tmp104 = _tmp103 * _tmp75 - _tmp68 * _tmp76 + _tmp71 * _tmp75;
  const Scalar _tmp105 = _tmp103 * _tmp49 - _tmp104 * _tmp82 + _tmp41 * _tmp49 - _tmp45 * _tmp64;
  const Scalar _tmp106 = Scalar(1.0) / (_tmp105);
  const Scalar _tmp107 = Scalar(1.0) * _tmp77;
  const Scalar _tmp108 = Scalar(1.0) * _tmp106;
  const Scalar _tmp109 =
      _tmp101 * _tmp95 * (-_tmp106 * _tmp107 * _tmp65 * _tmp75 + _tmp108 * _tmp49);
  const Scalar _tmp110 = _tmp107 * _tmp81;
  const Scalar _tmp111 = _tmp110 * _tmp88 - Scalar(1.0) * _tmp78;
  const Scalar _tmp112 = _tmp105 * _tmp90;
  const Scalar _tmp113 = _tmp106 * _tmp89;
  const Scalar _tmp114 = _tmp113 * (-_tmp104 * _tmp107 - _tmp111 * _tmp112);
  const Scalar _tmp115 = _tmp111 + _tmp114;
  const Scalar _tmp116 = _tmp65 * _tmp90;
  const Scalar _tmp117 = _tmp77 * (-_tmp115 * _tmp116 + Scalar(1.0));
  const Scalar _tmp118 = _tmp115 * _tmp90;
  const Scalar _tmp119 = _tmp95 * _tmp99 * (_tmp117 * _tmp75 + _tmp118 * _tmp49);
  const Scalar _tmp120 = _tmp63 * _tmp77;
  const Scalar _tmp121 = _tmp120 * _tmp81 + _tmp80;
  const Scalar _tmp122 = -_tmp121 * _tmp88 - _tmp55 + _tmp63 * _tmp78;
  const Scalar _tmp123 = _tmp113 * (-_tmp103 + _tmp104 * _tmp120 - _tmp112 * _tmp122);
  const Scalar _tmp124 = _tmp122 + _tmp123;
  const Scalar _tmp125 = _tmp124 * _tmp90;
  const Scalar _tmp126 = _tmp77 * (-_tmp116 * _tmp124 - _tmp63);
  const Scalar _tmp127 = _tmp100 * _tmp95 * (_tmp125 * _tmp49 + _tmp126 * _tmp75 + Scalar(1.0));
  const Scalar _tmp128 = -_tmp109 * fh1 - _tmp119 * fh1 - _tmp127 * fh1 -
                         _tmp39 * _tmp95 * (_tmp49 * _tmp93 - _tmp75 * _tmp82 * _tmp93);
  const Scalar _tmp129 = Scalar(1.0) / (_tmp128);
  const Scalar _tmp130 = _tmp51 + _tmp66;
  const Scalar _tmp131 = _tmp130 * fh1;
  const Scalar _tmp132 = -_tmp131 * _tmp99 - Scalar(5.1796800000000003) * _tmp16 - _tmp19 * fv1;
  const Scalar _tmp133 = _tmp41 + _tmp86;
  const Scalar _tmp134 = _tmp133 * _tmp88;
  const Scalar _tmp135 = Scalar(1.0) / (-_tmp134 - _tmp45 + _tmp84);
  const Scalar _tmp136 = Scalar(1.0) * _tmp135;
  const Scalar _tmp137 = _tmp134 * _tmp136 + Scalar(1.0);
  const Scalar _tmp138 = Scalar(1.0) * _tmp87;
  const Scalar _tmp139 = _tmp136 * _tmp88;
  const Scalar _tmp140 = -Scalar(1.0) * _tmp137 * _tmp138 + Scalar(1.0) * _tmp139;
  const Scalar _tmp141 = _tmp100 * _tmp131 + Scalar(5.1796800000000003) * _tmp25 + _tmp30 * fv1;
  const Scalar _tmp142 = _tmp133 * _tmp87;
  const Scalar _tmp143 = _tmp136 * _tmp142;
  const Scalar _tmp144 = -Scalar(1.0) * _tmp136 + Scalar(1.0) * _tmp143;
  const Scalar _tmp145 = _tmp113 * _tmp136;
  const Scalar _tmp146 = -_tmp108 * _tmp83 + _tmp133 * _tmp145;
  const Scalar _tmp147 = Scalar(1.0) * _tmp101;
  const Scalar _tmp148 = _tmp147 * (-_tmp138 * _tmp146 + _tmp145);
  const Scalar _tmp149 = _tmp133 * _tmp135;
  const Scalar _tmp150 = _tmp83 * _tmp90;
  const Scalar _tmp151 = _tmp121 + _tmp123 * _tmp149 - _tmp124 * _tmp150;
  const Scalar _tmp152 = Scalar(1.0) * _tmp100 * (_tmp123 * _tmp136 - _tmp138 * _tmp151);
  const Scalar _tmp153 = _tmp135 * _tmp91;
  const Scalar _tmp154 = -_tmp133 * _tmp153 - _tmp150 * _tmp92 + _tmp86;
  const Scalar _tmp155 = -_tmp110 + _tmp114 * _tmp149 - _tmp115 * _tmp150;
  const Scalar _tmp156 = Scalar(1.0) * _tmp99 * (_tmp114 * _tmp136 - _tmp138 * _tmp155);
  const Scalar _tmp157 =
      _tmp132 * _tmp140 + _tmp141 * _tmp144 + _tmp148 * fh1 + _tmp152 * fh1 + _tmp156 * fh1 +
      Scalar(1.0) * _tmp39 * (-_tmp136 * _tmp91 - _tmp138 * _tmp154 + Scalar(1.0));
  const Scalar _tmp158 = std::asinh(_tmp129 * _tmp157);
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp128;
  const Scalar _tmp160 =
      -_tmp158 * _tmp159 -
      Scalar(8.3888750099999996) *
          std::sqrt(
              Scalar(Scalar(0.090254729040973036) *
                         std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp57), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp61 - 1), Scalar(2))));
  const Scalar _tmp161 = Scalar(0.1034955) * _tmp129;
  const Scalar _tmp162 = _tmp160 * _tmp161;
  const Scalar _tmp163 = Scalar(1.0) * _tmp158;
  const Scalar _tmp164 = -_tmp109 - _tmp119 - _tmp127;
  const Scalar _tmp165 = Scalar(9.6622558468725703) * _tmp164;
  const Scalar _tmp166 = _tmp130 * _tmp99;
  const Scalar _tmp167 = _tmp100 * _tmp130;
  const Scalar _tmp168 = std::pow(_tmp128, Scalar(-2));
  const Scalar _tmp169 = _tmp164 * _tmp168;
  const Scalar _tmp170 =
      (_tmp129 * (-_tmp140 * _tmp166 + _tmp144 * _tmp167 + _tmp148 + _tmp152 + _tmp156) -
       _tmp157 * _tmp169) /
      std::sqrt(Scalar(std::pow(_tmp157, Scalar(2)) * _tmp168 + 1));
  const Scalar _tmp171 = _tmp101 * _tmp146 * _tmp87;
  const Scalar _tmp172 = _tmp100 * _tmp151 * _tmp87;
  const Scalar _tmp173 = _tmp136 * _tmp141;
  const Scalar _tmp174 = _tmp155 * _tmp87 * _tmp99;
  const Scalar _tmp175 = _tmp137 * _tmp87;
  const Scalar _tmp176 = _tmp132 * _tmp175 - _tmp142 * _tmp173 + _tmp154 * _tmp39 * _tmp87 +
                         _tmp171 * fh1 + _tmp172 * fh1 + _tmp174 * fh1;
  const Scalar _tmp177 = _tmp106 * _tmp147;
  const Scalar _tmp178 = _tmp177 * fh1;
  const Scalar _tmp179 = _tmp39 * _tmp93;
  const Scalar _tmp180 = _tmp100 * _tmp126;
  const Scalar _tmp181 = _tmp117 * _tmp99;
  const Scalar _tmp182 = -_tmp178 * _tmp82 - _tmp179 * _tmp82 + _tmp180 * fh1 + _tmp181 * fh1;
  const Scalar _tmp183 = Scalar(1.0) / (_tmp182);
  const Scalar _tmp184 = std::asinh(_tmp176 * _tmp183);
  const Scalar _tmp185 = Scalar(1.0) * _tmp184;
  const Scalar _tmp186 = Scalar(9.6622558468725703) * _tmp182;
  const Scalar _tmp187 =
      -_tmp184 * _tmp186 -
      Scalar(4.8333311099999996) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp72), Scalar(2)) +
                     Scalar(0.13817235445745474) *
                         std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp69 - 1), Scalar(2))));
  const Scalar _tmp188 = Scalar(0.1034955) * _tmp183;
  const Scalar _tmp189 = _tmp187 * _tmp188;
  const Scalar _tmp190 = -_tmp177 * _tmp82 + _tmp180 + _tmp181;
  const Scalar _tmp191 = Scalar(9.6622558468725703) * _tmp190;
  const Scalar _tmp192 = std::pow(_tmp182, Scalar(-2));
  const Scalar _tmp193 = _tmp190 * _tmp192;
  const Scalar _tmp194 = (-_tmp176 * _tmp193 + _tmp183 * (-_tmp143 * _tmp167 - _tmp166 * _tmp175 +
                                                          _tmp171 + _tmp172 + _tmp174)) /
                         std::sqrt(Scalar(std::pow(_tmp176, Scalar(2)) * _tmp192 + 1));
  const Scalar _tmp195 = _tmp100 * _tmp125;
  const Scalar _tmp196 = _tmp118 * _tmp99;
  const Scalar _tmp197 = _tmp178 + _tmp179 + _tmp195 * fh1 + _tmp196 * fh1;
  const Scalar _tmp198 = Scalar(9.6622558468725703) * _tmp197;
  const Scalar _tmp199 = std::pow(_tmp197, Scalar(-2));
  const Scalar _tmp200 = _tmp101 * _tmp145;
  const Scalar _tmp201 = _tmp114 * _tmp135 * _tmp99;
  const Scalar _tmp202 = _tmp100 * _tmp123 * _tmp135;
  const Scalar _tmp203 = -_tmp132 * _tmp139 + _tmp153 * _tmp39 + _tmp173 - _tmp200 * fh1 -
                         _tmp201 * fh1 - _tmp202 * fh1;
  const Scalar _tmp204 = _tmp177 + _tmp195 + _tmp196;
  const Scalar _tmp205 = _tmp199 * _tmp204;
  const Scalar _tmp206 = Scalar(1.0) / (_tmp197);
  const Scalar _tmp207 = (-_tmp203 * _tmp205 + _tmp206 * (_tmp136 * _tmp167 + _tmp139 * _tmp166 -
                                                          _tmp200 - _tmp201 - _tmp202)) /
                         std::sqrt(Scalar(_tmp199 * std::pow(_tmp203, Scalar(2)) + 1));
  const Scalar _tmp208 = std::asinh(_tmp203 * _tmp206);
  const Scalar _tmp209 = Scalar(9.6622558468725703) * _tmp204;
  const Scalar _tmp210 = Scalar(0.1034955) * _tmp206;
  const Scalar _tmp211 =
      -_tmp198 * _tmp208 -
      Scalar(4.7752063900000001) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp42), Scalar(2)) +
                     Scalar(0.32397683292140877) *
                         std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp46), Scalar(2))));
  const Scalar _tmp212 = _tmp210 * _tmp211;
  const Scalar _tmp213 = Scalar(1.0) * _tmp208;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -Scalar(8.4718465800000011) * _tmp1 -
      Scalar(9.6622558468725703) * fh1 *
          (-Scalar(1.0) * _tmp0 * _tmp37 * fv1 * std::sinh(_tmp38) -
           Scalar(0.87679799772039002) * _tmp0 -
           (-_tmp0 * _tmp35 +
            Scalar(0.1034955) * _tmp1 * (Scalar(9.6622558468725703) * _tmp32 * _tmp37 - _tmp34)) *
               std::sinh(_tmp36)) +
      Scalar(9.6622558468725703) * std::cosh(_tmp36) -
      Scalar(9.6622558468725703) * std::cosh(_tmp38);
  _res(1, 0) =
      -_tmp159 *
          (-Scalar(0.87653584775870996) * _tmp169 + Scalar(1.0) * _tmp170 * std::sinh(_tmp163) -
           (-Scalar(0.1034955) * _tmp160 * _tmp169 +
            _tmp161 * (-_tmp158 * _tmp165 - _tmp159 * _tmp170)) *
               std::sinh(_tmp162)) -
      _tmp165 * (Scalar(0.87653584775870996) * _tmp129 - std::cosh(_tmp162) + std::cosh(_tmp163));
  _res(2, 0) =
      -_tmp186 *
          (-Scalar(0.86625939559540499) * _tmp193 + Scalar(1.0) * _tmp194 * std::sinh(_tmp185) -
           (-Scalar(0.1034955) * _tmp187 * _tmp193 +
            _tmp188 * (-_tmp184 * _tmp191 - _tmp186 * _tmp194)) *
               std::sinh(_tmp189)) -
      _tmp191 * (Scalar(0.86625939559540499) * _tmp183 + std::cosh(_tmp185) - std::cosh(_tmp189));
  _res(3, 0) =
      -_tmp198 *
          (-Scalar(0.86565325453551001) * _tmp205 + Scalar(1.0) * _tmp207 * std::sinh(_tmp213) -
           (-Scalar(0.1034955) * _tmp205 * _tmp211 +
            _tmp210 * (-_tmp198 * _tmp207 - _tmp208 * _tmp209)) *
               std::sinh(_tmp212)) -
      _tmp209 * (Scalar(0.86565325453551001) * _tmp206 - std::cosh(_tmp212) + std::cosh(_tmp213));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
