// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_fv1_Nl20
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtFv1Nl20(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 285

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (106)
  const Scalar _tmp0 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -Scalar(0.010999999999999999) * _tmp2 - Scalar(0.010999999999999999) * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = 2 * _tmp6;
  const Scalar _tmp8 = _tmp1 * _tmp7;
  const Scalar _tmp9 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp10 = _tmp3 * _tmp9;
  const Scalar _tmp11 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp12 = _tmp3 * _tmp7;
  const Scalar _tmp13 = _tmp1 * _tmp9;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 + _tmp14 + _tmp5;
  const Scalar _tmp16 = 2 * _tmp1 * _tmp3;
  const Scalar _tmp17 = _tmp6 * _tmp9;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 =
      -Scalar(0.010999999999999999) * _tmp12 + Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp20 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp20 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp22 = _tmp19 + _tmp21;
  const Scalar _tmp23 = _tmp18 + _tmp22;
  const Scalar _tmp24 = position_vector(1, 0) + Scalar(-110.0);
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp27 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp8;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp26 + _tmp29;
  const Scalar _tmp31 = position_vector(0, 0) + Scalar(-125.0);
  const Scalar _tmp32 = _tmp30 + _tmp31;
  const Scalar _tmp33 = std::pow(Scalar(std::pow(_tmp25, Scalar(2)) + std::pow(_tmp32, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp34 = _tmp32 * _tmp33;
  const Scalar _tmp35 = -_tmp26;
  const Scalar _tmp36 = _tmp29 + _tmp35;
  const Scalar _tmp37 = _tmp31 + _tmp36;
  const Scalar _tmp38 = Scalar(1.0) / (_tmp37);
  const Scalar _tmp39 = _tmp19 - _tmp21;
  const Scalar _tmp40 = _tmp18 + _tmp39;
  const Scalar _tmp41 = position_vector(1, 0) + Scalar(110.0);
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = _tmp38 * _tmp42;
  const Scalar _tmp44 = -_tmp14 + _tmp5;
  const Scalar _tmp45 = _tmp11 + _tmp44;
  const Scalar _tmp46 = _tmp34 * _tmp45;
  const Scalar _tmp47 = _tmp25 * _tmp33;
  const Scalar _tmp48 = _tmp34 * _tmp43 - _tmp47;
  const Scalar _tmp49 = -_tmp18;
  const Scalar _tmp50 = _tmp39 + _tmp49;
  const Scalar _tmp51 = _tmp41 + _tmp50;
  const Scalar _tmp52 = _tmp27 - _tmp28;
  const Scalar _tmp53 = _tmp35 + _tmp52;
  const Scalar _tmp54 = position_vector(0, 0) + Scalar(125.0);
  const Scalar _tmp55 = _tmp53 + _tmp54;
  const Scalar _tmp56 = std::pow(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp55, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp57 = _tmp55 * _tmp56;
  const Scalar _tmp58 = _tmp51 * _tmp56;
  const Scalar _tmp59 = Scalar(1.0) / (_tmp43 * _tmp57 - _tmp58);
  const Scalar _tmp60 = -_tmp11 + _tmp44;
  const Scalar _tmp61 = _tmp43 * _tmp45;
  const Scalar _tmp62 = _tmp59 * (-_tmp57 * _tmp61 + _tmp58 * _tmp60);
  const Scalar _tmp63 = Scalar(1.0) * _tmp40;
  const Scalar _tmp64 = Scalar(1.0) * _tmp36;
  const Scalar _tmp65 = (-_tmp53 + _tmp64) / (_tmp50 - _tmp63);
  const Scalar _tmp66 = _tmp59 * (_tmp45 * _tmp57 - _tmp57 * _tmp60);
  const Scalar _tmp67 = -_tmp15 * _tmp34 + _tmp46 - _tmp48 * _tmp66 -
                        _tmp65 * (_tmp15 * _tmp47 - _tmp43 * _tmp46 - _tmp48 * _tmp62);
  const Scalar _tmp68 = Scalar(1.0) / (_tmp67);
  const Scalar _tmp69 = _tmp63 * _tmp65 + _tmp64;
  const Scalar _tmp70 = 0;
  const Scalar _tmp71 = _tmp57 * _tmp59;
  const Scalar _tmp72 = _tmp48 * _tmp71;
  const Scalar _tmp73 =
      std::sqrt(Scalar(std::pow(_tmp37, Scalar(2)) + std::pow(_tmp42, Scalar(2))));
  const Scalar _tmp74 = _tmp38 * _tmp73;
  const Scalar _tmp75 = _tmp74 * (_tmp34 * _tmp70 - _tmp70 * _tmp72);
  const Scalar _tmp76 = _tmp43 * _tmp66 - _tmp45 - _tmp65 * (_tmp43 * _tmp62 + _tmp61);
  const Scalar _tmp77 = Scalar(1.0) / (_tmp73);
  const Scalar _tmp78 = _tmp74 * (_tmp36 * _tmp42 * _tmp77 - _tmp37 * _tmp40 * _tmp77);
  const Scalar _tmp79 = _tmp59 * (_tmp50 * _tmp57 - _tmp53 * _tmp58 + _tmp57 * _tmp78);
  const Scalar _tmp80 = _tmp23 * _tmp34 - _tmp30 * _tmp47 + _tmp34 * _tmp78 - _tmp48 * _tmp79;
  const Scalar _tmp81 = _tmp68 * _tmp80;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp80);
  const Scalar _tmp83 = _tmp67 * _tmp82;
  const Scalar _tmp84 = _tmp76 + _tmp83 * (_tmp43 * _tmp79 - _tmp76 * _tmp81 - _tmp78);
  const Scalar _tmp85 = _tmp48 * _tmp68;
  const Scalar _tmp86 = -_tmp43 - _tmp84 * _tmp85;
  const Scalar _tmp87 = _tmp34 * _tmp68;
  const Scalar _tmp88 = _tmp26 + _tmp52;
  const Scalar _tmp89 = _tmp54 + _tmp88;
  const Scalar _tmp90 = _tmp22 + _tmp49;
  const Scalar _tmp91 = _tmp24 + _tmp90;
  const Scalar _tmp92 = std::pow(Scalar(std::pow(_tmp89, Scalar(2)) + std::pow(_tmp91, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp93 = _tmp89 * _tmp92;
  const Scalar _tmp94 = _tmp74 * fh1;
  const Scalar _tmp95 = Scalar(1.0) * _tmp62 * _tmp65 - Scalar(1.0) * _tmp66;
  const Scalar _tmp96 = _tmp83 * (-Scalar(1.0) * _tmp79 - _tmp81 * _tmp95) + _tmp95;
  const Scalar _tmp97 = -_tmp85 * _tmp96 + Scalar(1.0);
  const Scalar _tmp98 = _tmp91 * _tmp92;
  const Scalar _tmp99 = Scalar(1.0) * _tmp82;
  const Scalar _tmp100 = fh1 * (_tmp88 * _tmp98 - _tmp90 * _tmp93);
  const Scalar _tmp101 = _tmp59 * fh1;
  const Scalar _tmp102 = _tmp100 * _tmp99;
  const Scalar _tmp103 = _tmp48 * _tmp59;
  const Scalar _tmp104 = _tmp0 * _tmp70;
  const Scalar _tmp105 = _tmp68 * fh1;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -_tmp75 * std::exp(_tmp0 * _tmp75 + _tmp100 * _tmp74 * (_tmp34 * _tmp99 - _tmp72 * _tmp99) +
                         _tmp93 * _tmp94 * (_tmp71 * _tmp86 + _tmp84 * _tmp87 + Scalar(1.0)) +
                         _tmp94 * _tmp98 * (_tmp71 * _tmp97 + _tmp87 * _tmp96));
  _res(2, 0) = -_tmp103 * _tmp70 *
               std::exp(-_tmp101 * _tmp86 * _tmp93 - _tmp101 * _tmp97 * _tmp98 + _tmp102 * _tmp103 +
                        _tmp103 * _tmp104);
  _res(3, 0) =
      _tmp70 * std::exp(-_tmp102 - _tmp104 - _tmp105 * _tmp84 * _tmp93 - _tmp105 * _tmp96 * _tmp98);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
