// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 502

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (159)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp5 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp9 = 2 * _tmp2;
  const Scalar _tmp10 = _tmp8 * _tmp9;
  const Scalar _tmp11 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = 2 * _tmp11;
  const Scalar _tmp13 = _tmp12 * _tmp4;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = 2 * _tmp4 * _tmp8;
  const Scalar _tmp16 = _tmp11 * _tmp9;
  const Scalar _tmp17 = _tmp15 - _tmp16;
  const Scalar _tmp18 = -Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = -_tmp14 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp7;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = 1 - 2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp26 = _tmp4 * _tmp9;
  const Scalar _tmp27 = _tmp12 * _tmp8;
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = -_tmp25 + _tmp29;
  const Scalar _tmp31 = _tmp23 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(0, 0);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 =
      -Scalar(0.010999999999999999) * _tmp24 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp26 - Scalar(0.20999999999999999) * _tmp27;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp41 = _tmp14 + _tmp18;
  const Scalar _tmp42 = _tmp41 + _tmp6;
  const Scalar _tmp43 = _tmp42 + position_vector(1, 0);
  const Scalar _tmp44 = _tmp43 + Scalar(-4.7752063900000001);
  const Scalar _tmp45 = _tmp25 + _tmp29;
  const Scalar _tmp46 = _tmp22 + _tmp45;
  const Scalar _tmp47 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp48 = _tmp47 + Scalar(-2.71799795);
  const Scalar _tmp49 = std::pow(Scalar(std::pow(_tmp44, Scalar(2)) + std::pow(_tmp48, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp50 = _tmp48 * _tmp49;
  const Scalar _tmp51 = _tmp36 + _tmp37;
  const Scalar _tmp52 = _tmp35 + _tmp51;
  const Scalar _tmp53 = _tmp34 + _tmp38;
  const Scalar _tmp54 = _tmp22 + _tmp30;
  const Scalar _tmp55 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp56 = _tmp55 + Scalar(1.79662371);
  const Scalar _tmp57 = _tmp19 + _tmp6;
  const Scalar _tmp58 = _tmp57 + position_vector(1, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(-4.8333311099999996);
  const Scalar _tmp60 = std::pow(Scalar(std::pow(_tmp56, Scalar(2)) + std::pow(_tmp59, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp56 * _tmp60;
  const Scalar _tmp62 = _tmp52 * _tmp61 - _tmp53 * _tmp61;
  const Scalar _tmp63 = _tmp59 * _tmp60;
  const Scalar _tmp64 = _tmp23 + _tmp45;
  const Scalar _tmp65 = _tmp64 + position_vector(0, 0);
  const Scalar _tmp66 = _tmp65 + Scalar(-2.5202214700000001);
  const Scalar _tmp67 = Scalar(1.0) / (_tmp66);
  const Scalar _tmp68 = _tmp41 + _tmp7;
  const Scalar _tmp69 = _tmp68 + position_vector(1, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(8.3888750099999996);
  const Scalar _tmp71 = _tmp67 * _tmp70;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp61 * _tmp71 - _tmp63);
  const Scalar _tmp73 = _tmp44 * _tmp49;
  const Scalar _tmp74 = _tmp50 * _tmp71 - _tmp73;
  const Scalar _tmp75 = _tmp72 * _tmp74;
  const Scalar _tmp76 = _tmp34 + _tmp51;
  const Scalar _tmp77 = _tmp52 * _tmp71;
  const Scalar _tmp78 = _tmp53 * _tmp63 - _tmp61 * _tmp77;
  const Scalar _tmp79 = -_tmp50 * _tmp77 + _tmp73 * _tmp76 - _tmp75 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) * _tmp68;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp57 + _tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp64;
  const Scalar _tmp84 = -_tmp54 + _tmp83;
  const Scalar _tmp85 = _tmp82 * _tmp84;
  const Scalar _tmp86 = _tmp50 * _tmp52 - _tmp50 * _tmp76 - _tmp62 * _tmp75 - _tmp79 * _tmp85;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp88 = _tmp80 * _tmp85 + _tmp83;
  const Scalar _tmp89 = 0;
  const Scalar _tmp90 = _tmp87 * _tmp89;
  const Scalar _tmp91 = _tmp61 * _tmp75;
  const Scalar _tmp92 =
      std::sqrt(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp70, Scalar(2))));
  const Scalar _tmp93 = _tmp67 * _tmp92;
  const Scalar _tmp94 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp95 = _tmp93 * (_tmp64 * _tmp70 * _tmp94 - _tmp66 * _tmp68 * _tmp94);
  const Scalar _tmp96 = -_tmp54 * _tmp63 + _tmp57 * _tmp61 + _tmp61 * _tmp95;
  const Scalar _tmp97 = _tmp42 * _tmp50 - _tmp46 * _tmp73 + _tmp50 * _tmp95 - _tmp75 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp99 = Scalar(1.0) * _tmp98;
  const Scalar _tmp100 = _tmp21 + Scalar(8.3196563700000006);
  const Scalar _tmp101 = _tmp32 + Scalar(1.9874742000000001);
  const Scalar _tmp102 =
      std::pow(Scalar(std::pow(_tmp100, Scalar(2)) + std::pow(_tmp101, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp103 = _tmp100 * _tmp102;
  const Scalar _tmp104 = _tmp101 * _tmp102;
  const Scalar _tmp105 = fh1 * (_tmp103 * _tmp31 - _tmp104 * _tmp20);
  const Scalar _tmp106 = Scalar(1.0) * _tmp82;
  const Scalar _tmp107 = Scalar(1.0) * _tmp72;
  const Scalar _tmp108 = _tmp106 * _tmp72 * _tmp78 * _tmp84 - _tmp107 * _tmp62;
  const Scalar _tmp109 = _tmp87 * _tmp97;
  const Scalar _tmp110 = _tmp86 * _tmp98;
  const Scalar _tmp111 = _tmp110 * (-_tmp107 * _tmp96 - _tmp108 * _tmp109);
  const Scalar _tmp112 = _tmp108 + _tmp111;
  const Scalar _tmp113 = _tmp74 * _tmp87;
  const Scalar _tmp114 = -_tmp112 * _tmp113 + Scalar(1.0);
  const Scalar _tmp115 = _tmp61 * _tmp72;
  const Scalar _tmp116 = _tmp50 * _tmp87;
  const Scalar _tmp117 = _tmp103 * fh1;
  const Scalar _tmp118 = _tmp71 * _tmp72;
  const Scalar _tmp119 = _tmp118 * _tmp78 + _tmp77;
  const Scalar _tmp120 = _tmp118 * _tmp62 - _tmp119 * _tmp85 - _tmp52;
  const Scalar _tmp121 = _tmp110 * (-_tmp109 * _tmp120 + _tmp118 * _tmp96 - _tmp95);
  const Scalar _tmp122 = _tmp120 + _tmp121;
  const Scalar _tmp123 = -_tmp113 * _tmp122 - _tmp71;
  const Scalar _tmp124 = _tmp104 * fh1;
  const Scalar _tmp125 = -_tmp105 * _tmp93 * (_tmp50 * _tmp99 - _tmp91 * _tmp99) -
                         _tmp117 * _tmp93 * (_tmp112 * _tmp116 + _tmp114 * _tmp115) -
                         _tmp124 * _tmp93 * (_tmp115 * _tmp123 + _tmp116 * _tmp122 + Scalar(1.0)) -
                         _tmp40 * _tmp93 * (_tmp50 * _tmp90 - _tmp90 * _tmp91);
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp42 + _tmp81;
  const Scalar _tmp128 = _tmp127 * _tmp85;
  const Scalar _tmp129 = Scalar(1.0) / (-_tmp128 - _tmp46 + _tmp83);
  const Scalar _tmp130 = Scalar(1.0) * _tmp129;
  const Scalar _tmp131 = _tmp128 * _tmp130 + Scalar(1.0);
  const Scalar _tmp132 = _tmp130 * _tmp85;
  const Scalar _tmp133 = _tmp39 * fh1;
  const Scalar _tmp134 = -_tmp103 * _tmp133 - Scalar(5.1796800000000003) * _tmp17 - _tmp20 * fv1;
  const Scalar _tmp135 = _tmp104 * _tmp133 + Scalar(5.1796800000000003) * _tmp28 + _tmp31 * fv1;
  const Scalar _tmp136 = _tmp127 * _tmp82;
  const Scalar _tmp137 = _tmp110 * _tmp130;
  const Scalar _tmp138 = _tmp127 * _tmp137 - _tmp79 * _tmp99;
  const Scalar _tmp139 = _tmp127 * _tmp129;
  const Scalar _tmp140 = _tmp79 * _tmp87;
  const Scalar _tmp141 = _tmp119 + _tmp121 * _tmp139 - _tmp122 * _tmp140;
  const Scalar _tmp142 = _tmp129 * _tmp88;
  const Scalar _tmp143 = -_tmp127 * _tmp142 - _tmp140 * _tmp89 + _tmp81;
  const Scalar _tmp144 = -_tmp107 * _tmp78 + _tmp111 * _tmp139 - _tmp112 * _tmp140;
  const Scalar _tmp145 = std::asinh(
      _tmp126 * (Scalar(1.0) * _tmp105 * (-_tmp106 * _tmp138 + _tmp137) +
                 Scalar(1.0) * _tmp117 * (-_tmp106 * _tmp144 + _tmp111 * _tmp130) +
                 Scalar(1.0) * _tmp124 * (-_tmp106 * _tmp141 + _tmp121 * _tmp130) +
                 Scalar(1.0) * _tmp134 * (-_tmp106 * _tmp131 + _tmp132) +
                 Scalar(1.0) * _tmp135 * (_tmp130 * _tmp136 - _tmp130) +
                 Scalar(1.0) * _tmp40 * (-_tmp106 * _tmp143 - _tmp130 * _tmp88 + Scalar(1.0))));
  const Scalar _tmp146 = Scalar(9.6622558468725703) * _tmp125;
  const Scalar _tmp147 = _tmp130 * _tmp135;
  const Scalar _tmp148 = _tmp105 * _tmp99;
  const Scalar _tmp149 = _tmp40 * _tmp90;
  const Scalar _tmp150 = _tmp72 * fh1;
  const Scalar _tmp151 = _tmp103 * _tmp114 * _tmp150 + _tmp104 * _tmp123 * _tmp150 -
                         _tmp148 * _tmp75 - _tmp149 * _tmp75;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 =
      std::asinh(_tmp152 * (_tmp105 * _tmp138 * _tmp82 + _tmp117 * _tmp144 * _tmp82 +
                            _tmp124 * _tmp141 * _tmp82 + _tmp131 * _tmp134 * _tmp82 -
                            _tmp136 * _tmp147 + _tmp143 * _tmp40 * _tmp82));
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp151;
  const Scalar _tmp155 =
      _tmp112 * _tmp117 * _tmp87 + _tmp122 * _tmp124 * _tmp87 + _tmp148 + _tmp149;
  const Scalar _tmp156 = Scalar(1.0) / (_tmp155);
  const Scalar _tmp157 = std::asinh(_tmp156 * (-_tmp105 * _tmp137 - _tmp111 * _tmp117 * _tmp129 -
                                               _tmp121 * _tmp124 * _tmp129 - _tmp132 * _tmp134 +
                                               _tmp142 * _tmp40 + _tmp147));
  const Scalar _tmp158 = Scalar(9.6622558468725703) * _tmp155;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp33 *
          (Scalar(0.87679799772039002) * _tmp0 + std::cosh(Scalar(1.0) * _tmp1) -
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp1 * _tmp33 -
                Scalar(8.3196563700000006) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp21 - 1), Scalar(2)) +
                        Scalar(0.057067943376852184) *
                            std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp32 - 1),
                                     Scalar(2))))))) +
      _tmp39 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp146 *
          (Scalar(0.87653584775870996) * _tmp126 + std::cosh(Scalar(1.0) * _tmp145) -
           std::cosh(
               Scalar(0.1034955) * _tmp126 *
               (-_tmp145 * _tmp146 -
                Scalar(8.3888750099999996) *
                    std::sqrt(Scalar(
                        Scalar(0.090254729040973036) *
                            std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp65), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp69 - 1),
                                 Scalar(2))))))) +
      _tmp52 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp154 *
          (Scalar(0.86625939559540499) * _tmp152 + std::cosh(Scalar(1.0) * _tmp153) -
           std::cosh(
               Scalar(0.1034955) * _tmp152 *
               (-_tmp153 * _tmp154 -
                Scalar(4.8333311099999996) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp58), Scalar(2)) +
                        Scalar(0.13817235445745474) *
                            std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp55 - 1),
                                     Scalar(2))))))) +
      _tmp53 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp158 *
          (Scalar(0.86565325453551001) * _tmp156 + std::cosh(Scalar(1.0) * _tmp157) -
           std::cosh(
               Scalar(0.1034955) * _tmp156 *
               (-_tmp157 * _tmp158 -
                Scalar(4.7752063900000001) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp43), Scalar(2)) +
                        Scalar(0.32397683292140877) *
                            std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp47),
                                     Scalar(2))))))) +
      _tmp76 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
