// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_fh1_Nl18
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtFh1Nl18(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 301

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (108)
  const Scalar _tmp0 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp7;
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = 2 * _tmp3;
  const Scalar _tmp12 = _tmp10 * _tmp11;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp14 = _tmp11 * _tmp7;
  const Scalar _tmp15 = 2 * _tmp1 * _tmp10;
  const Scalar _tmp16 =
      -Scalar(0.010999999999999999) * _tmp14 + Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp13 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp6;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0) + Scalar(8.3888750099999996);
  const Scalar _tmp20 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp22 = _tmp1 * _tmp11;
  const Scalar _tmp23 = _tmp10 * _tmp8;
  const Scalar _tmp24 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp25 = -Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = _tmp21 + _tmp26;
  const Scalar _tmp28 = _tmp27 + position_vector(0, 0) + Scalar(-2.5202214700000001);
  const Scalar _tmp29 = std::pow(Scalar(std::pow(_tmp19, Scalar(2)) + std::pow(_tmp28, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp30 = _tmp28 * _tmp29;
  const Scalar _tmp31 = -_tmp13 + _tmp16;
  const Scalar _tmp32 = _tmp31 + _tmp6;
  const Scalar _tmp33 = _tmp32 + position_vector(1, 0) + Scalar(8.3196563700000006);
  const Scalar _tmp34 = -_tmp21;
  const Scalar _tmp35 = _tmp26 + _tmp34;
  const Scalar _tmp36 = _tmp35 + position_vector(0, 0) + Scalar(1.9874742000000001);
  const Scalar _tmp37 = Scalar(1.0) / (_tmp36);
  const Scalar _tmp38 = _tmp33 * _tmp37;
  const Scalar _tmp39 = _tmp19 * _tmp29;
  const Scalar _tmp40 = Scalar(1.0) / (_tmp30 * _tmp38 - _tmp39);
  const Scalar _tmp41 = Scalar(1.0) * _tmp32;
  const Scalar _tmp42 = Scalar(1.0) * _tmp35;
  const Scalar _tmp43 = (-_tmp27 + _tmp42) / (_tmp18 - _tmp41);
  const Scalar _tmp44 = _tmp41 * _tmp43 + _tmp42;
  const Scalar _tmp45 = 0;
  const Scalar _tmp46 = _tmp17 + _tmp5;
  const Scalar _tmp47 = _tmp46 + position_vector(1, 0) + Scalar(-4.7752063900000001);
  const Scalar _tmp48 = _tmp24 + _tmp25;
  const Scalar _tmp49 = _tmp21 + _tmp48;
  const Scalar _tmp50 = _tmp49 + position_vector(0, 0) + Scalar(-2.71799795);
  const Scalar _tmp51 = std::pow(Scalar(std::pow(_tmp47, Scalar(2)) + std::pow(_tmp50, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp52 = _tmp47 * _tmp51;
  const Scalar _tmp53 = _tmp50 * _tmp51;
  const Scalar _tmp54 = _tmp38 * _tmp53 - _tmp52;
  const Scalar _tmp55 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp56 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp57 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp58 = _tmp56 - _tmp57;
  const Scalar _tmp59 = -_tmp55 + _tmp58;
  const Scalar _tmp60 = _tmp55 + _tmp58;
  const Scalar _tmp61 = _tmp30 * _tmp59 - _tmp30 * _tmp60;
  const Scalar _tmp62 = _tmp40 * _tmp54;
  const Scalar _tmp63 = _tmp55 + _tmp56 + _tmp57;
  const Scalar _tmp64 = _tmp38 * _tmp59;
  const Scalar _tmp65 = -_tmp30 * _tmp64 + _tmp39 * _tmp60;
  const Scalar _tmp66 = -_tmp43 * (_tmp52 * _tmp63 - _tmp53 * _tmp64 - _tmp62 * _tmp65) +
                        _tmp53 * _tmp59 - _tmp53 * _tmp63 - _tmp61 * _tmp62;
  const Scalar _tmp67 = Scalar(1.0) / (_tmp66);
  const Scalar _tmp68 = _tmp54 * _tmp67;
  const Scalar _tmp69 = _tmp40 * _tmp45 * _tmp68;
  const Scalar _tmp70 = _tmp45 * _tmp67;
  const Scalar _tmp71 =
      std::sqrt(Scalar(std::pow(_tmp33, Scalar(2)) + std::pow(_tmp36, Scalar(2))));
  const Scalar _tmp72 = _tmp37 * _tmp71;
  const Scalar _tmp73 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp74 = _tmp72 * (-_tmp32 * _tmp36 * _tmp73 + _tmp33 * _tmp35 * _tmp73);
  const Scalar _tmp75 = _tmp18 * _tmp30 - _tmp27 * _tmp39 + _tmp30 * _tmp74;
  const Scalar _tmp76 = Scalar(1.0) * _tmp40;
  const Scalar _tmp77 = _tmp43 * _tmp65 * _tmp76 - _tmp61 * _tmp76;
  const Scalar _tmp78 = _tmp46 * _tmp53 - _tmp49 * _tmp52 + _tmp53 * _tmp74 - _tmp62 * _tmp75;
  const Scalar _tmp79 = _tmp67 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp81 = _tmp66 * _tmp80;
  const Scalar _tmp82 = _tmp77 + _tmp81 * (-_tmp75 * _tmp76 - _tmp77 * _tmp79);
  const Scalar _tmp83 = _tmp40 * (-_tmp68 * _tmp82 + Scalar(1.0));
  const Scalar _tmp84 = _tmp67 * _tmp82;
  const Scalar _tmp85 = _tmp31 + _tmp5;
  const Scalar _tmp86 = _tmp85 + position_vector(1, 0) + Scalar(-4.8333311099999996);
  const Scalar _tmp87 = _tmp34 + _tmp48;
  const Scalar _tmp88 = _tmp87 + position_vector(0, 0) + Scalar(1.79662371);
  const Scalar _tmp89 = std::pow(Scalar(std::pow(_tmp86, Scalar(2)) + std::pow(_tmp88, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp90 = _tmp86 * _tmp89;
  const Scalar _tmp91 = _tmp72 * _tmp90 * (_tmp30 * _tmp83 + _tmp53 * _tmp84);
  const Scalar _tmp92 = _tmp38 * _tmp40;
  const Scalar _tmp93 = -_tmp43 * (_tmp64 + _tmp65 * _tmp92) - _tmp59 + _tmp61 * _tmp92;
  const Scalar _tmp94 = _tmp81 * (-_tmp74 + _tmp75 * _tmp92 - _tmp79 * _tmp93) + _tmp93;
  const Scalar _tmp95 = _tmp67 * _tmp94;
  const Scalar _tmp96 = _tmp40 * (-_tmp38 - _tmp68 * _tmp94);
  const Scalar _tmp97 = _tmp88 * _tmp89;
  const Scalar _tmp98 = _tmp72 * _tmp97 * (_tmp30 * _tmp96 + _tmp53 * _tmp95 + Scalar(1.0));
  const Scalar _tmp99 = -_tmp85 * _tmp97 + _tmp87 * _tmp90;
  const Scalar _tmp100 = Scalar(1.0) * _tmp80;
  const Scalar _tmp101 = _tmp72 * _tmp99 * (-_tmp100 * _tmp30 * _tmp62 + _tmp100 * _tmp53);
  const Scalar _tmp102 = _tmp83 * _tmp90;
  const Scalar _tmp103 = _tmp100 * _tmp99;
  const Scalar _tmp104 = _tmp103 * fh1;
  const Scalar _tmp105 = _tmp96 * _tmp97;
  const Scalar _tmp106 = _tmp84 * _tmp90;
  const Scalar _tmp107 = _tmp95 * _tmp97;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = -std::exp(-fh1);
  _res(1, 0) = -(-_tmp101 - _tmp91 - _tmp98) *
               std::exp(_tmp0 * _tmp72 * (-_tmp30 * _tmp69 + _tmp53 * _tmp70) + _tmp101 * fh1 +
                        _tmp91 * fh1 + _tmp98 * fh1);
  _res(2, 0) = -(_tmp102 - _tmp103 * _tmp62 + _tmp105) *
               std::exp(_tmp0 * _tmp69 - _tmp102 * fh1 + _tmp104 * _tmp62 - _tmp105 * fh1);
  _res(3, 0) = -(_tmp103 + _tmp106 + _tmp107) *
               std::exp(-_tmp0 * _tmp70 - _tmp104 - _tmp106 * fh1 - _tmp107 * fh1);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
