// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl18
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl18(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 604

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (186)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp10 = 2 * _tmp5 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp3;
  const Scalar _tmp13 = _tmp10 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = 2 * _tmp3;
  const Scalar _tmp16 = _tmp15 * _tmp9;
  const Scalar _tmp17 = _tmp11 * _tmp5;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp14 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp8;
  const Scalar _tmp21 = _tmp20 + position_vector(0, 0);
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = _tmp15 * _tmp5;
  const Scalar _tmp25 = _tmp11 * _tmp9;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp27;
  const Scalar _tmp29 = -2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp29 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp31 = _tmp28 + _tmp30;
  const Scalar _tmp32 = _tmp23 + _tmp31;
  const Scalar _tmp33 = _tmp32 + position_vector(1, 0);
  const Scalar _tmp34 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp35 = -_tmp30;
  const Scalar _tmp36 = _tmp28 + _tmp35;
  const Scalar _tmp37 = _tmp23 + _tmp36;
  const Scalar _tmp38 = _tmp37 + position_vector(1, 0);
  const Scalar _tmp39 = _tmp14 - _tmp18;
  const Scalar _tmp40 = _tmp39 + _tmp8;
  const Scalar _tmp41 = _tmp40 + position_vector(0, 0);
  const Scalar _tmp42 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp43 = _tmp22 + _tmp31;
  const Scalar _tmp44 = _tmp43 + position_vector(1, 0);
  const Scalar _tmp45 = _tmp44 + Scalar(-4.7752063900000001);
  const Scalar _tmp46 = _tmp19 + _tmp7;
  const Scalar _tmp47 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp48 = _tmp47 + Scalar(-2.71799795);
  const Scalar _tmp49 = std::pow(Scalar(std::pow(_tmp45, Scalar(2)) + std::pow(_tmp48, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp50 = _tmp45 * _tmp49;
  const Scalar _tmp51 = _tmp38 + Scalar(8.3196563700000006);
  const Scalar _tmp52 = _tmp41 + Scalar(1.9874742000000001);
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = _tmp51 * _tmp53;
  const Scalar _tmp55 = _tmp48 * _tmp49;
  const Scalar _tmp56 = -_tmp50 + _tmp54 * _tmp55;
  const Scalar _tmp57 = _tmp22 + _tmp36;
  const Scalar _tmp58 = _tmp57 + position_vector(1, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(8.3888750099999996);
  const Scalar _tmp60 = _tmp39 + _tmp7;
  const Scalar _tmp61 = _tmp60 + position_vector(0, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(-2.5202214700000001);
  const Scalar _tmp63 = std::pow(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp62, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp64 = _tmp62 * _tmp63;
  const Scalar _tmp65 = _tmp59 * _tmp63;
  const Scalar _tmp66 = Scalar(1.0) / (_tmp54 * _tmp64 - _tmp65);
  const Scalar _tmp67 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp68 = -_tmp67;
  const Scalar _tmp69 = -Scalar(0.010999999999999999) * _tmp29 -
                        Scalar(0.010999999999999999) * _tmp4 + Scalar(-0.010999999999999999);
  const Scalar _tmp70 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp71 = _tmp69 - _tmp70;
  const Scalar _tmp72 = _tmp68 + _tmp71;
  const Scalar _tmp73 = _tmp67 + _tmp71;
  const Scalar _tmp74 = _tmp66 * (_tmp64 * _tmp72 - _tmp64 * _tmp73);
  const Scalar _tmp75 = _tmp69 + _tmp70;
  const Scalar _tmp76 = _tmp67 + _tmp75;
  const Scalar _tmp77 = _tmp54 * _tmp72;
  const Scalar _tmp78 = _tmp66 * (-_tmp64 * _tmp77 + _tmp65 * _tmp73);
  const Scalar _tmp79 = _tmp50 * _tmp76 - _tmp55 * _tmp77 - _tmp56 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) * _tmp37;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp57 + _tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp40;
  const Scalar _tmp84 = _tmp82 * (-_tmp60 + _tmp83);
  const Scalar _tmp85 = _tmp55 * _tmp72 - _tmp55 * _tmp76 - _tmp56 * _tmp74 - _tmp79 * _tmp84;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp87 = _tmp80 * _tmp84 + _tmp83;
  const Scalar _tmp88 = 0;
  const Scalar _tmp89 = _tmp64 * _tmp66;
  const Scalar _tmp90 = _tmp56 * _tmp89;
  const Scalar _tmp91 =
      std::sqrt(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp52, Scalar(2))));
  const Scalar _tmp92 = _tmp53 * _tmp91;
  const Scalar _tmp93 = _tmp92 * (_tmp55 * _tmp88 - _tmp88 * _tmp90);
  const Scalar _tmp94 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp95 = _tmp92 * (-_tmp37 * _tmp52 * _tmp94 + _tmp40 * _tmp51 * _tmp94);
  const Scalar _tmp96 = _tmp66 * (_tmp57 * _tmp64 - _tmp60 * _tmp65 + _tmp64 * _tmp95);
  const Scalar _tmp97 = Scalar(1.0) * _tmp78;
  const Scalar _tmp98 = -Scalar(1.0) * _tmp74 + _tmp84 * _tmp97;
  const Scalar _tmp99 = _tmp43 * _tmp55 - _tmp46 * _tmp50 + _tmp55 * _tmp95 - _tmp56 * _tmp96;
  const Scalar _tmp100 = _tmp86 * _tmp99;
  const Scalar _tmp101 = Scalar(1.0) / (_tmp99);
  const Scalar _tmp102 = _tmp101 * _tmp85;
  const Scalar _tmp103 = _tmp102 * (-_tmp100 * _tmp98 - Scalar(1.0) * _tmp96);
  const Scalar _tmp104 = _tmp86 * (_tmp103 + _tmp98);
  const Scalar _tmp105 = -_tmp104 * _tmp56 + Scalar(1.0);
  const Scalar _tmp106 = _tmp33 + Scalar(-4.8333311099999996);
  const Scalar _tmp107 = _tmp21 + Scalar(1.79662371);
  const Scalar _tmp108 =
      std::pow(Scalar(std::pow(_tmp106, Scalar(2)) + std::pow(_tmp107, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp109 = _tmp106 * _tmp108;
  const Scalar _tmp110 = _tmp109 * fh1;
  const Scalar _tmp111 = _tmp54 * _tmp78 + _tmp77;
  const Scalar _tmp112 = -_tmp111 * _tmp84 + _tmp54 * _tmp74 - _tmp72;
  const Scalar _tmp113 = _tmp102 * (-_tmp100 * _tmp112 + _tmp54 * _tmp96 - _tmp95);
  const Scalar _tmp114 = _tmp86 * (_tmp112 + _tmp113);
  const Scalar _tmp115 = -_tmp114 * _tmp56 - _tmp54;
  const Scalar _tmp116 = _tmp107 * _tmp108;
  const Scalar _tmp117 = _tmp116 * fh1;
  const Scalar _tmp118 = Scalar(1.0) * _tmp101;
  const Scalar _tmp119 = fh1 * (_tmp109 * _tmp20 - _tmp116 * _tmp32);
  const Scalar _tmp120 = -_tmp110 * _tmp92 * (_tmp104 * _tmp55 + _tmp105 * _tmp89) -
                         _tmp117 * _tmp92 * (_tmp114 * _tmp55 + _tmp115 * _tmp89 + Scalar(1.0)) -
                         _tmp119 * _tmp92 * (_tmp118 * _tmp55 - _tmp118 * _tmp90) - _tmp42 * _tmp93;
  const Scalar _tmp121 = Scalar(1.0) / (_tmp120);
  const Scalar _tmp122 = _tmp43 + _tmp81;
  const Scalar _tmp123 = _tmp122 * _tmp84;
  const Scalar _tmp124 = Scalar(1.0) / (-_tmp123 - _tmp46 + _tmp83);
  const Scalar _tmp125 = Scalar(1.0) * _tmp124;
  const Scalar _tmp126 = _tmp102 * _tmp125;
  const Scalar _tmp127 = -_tmp118 * _tmp79 + _tmp122 * _tmp126;
  const Scalar _tmp128 = Scalar(1.0) * _tmp82;
  const Scalar _tmp129 = _tmp122 * _tmp124;
  const Scalar _tmp130 = _tmp111 + _tmp113 * _tmp129 - _tmp114 * _tmp79;
  const Scalar _tmp131 = _tmp124 * _tmp87;
  const Scalar _tmp132 = _tmp82 * (-_tmp122 * _tmp131 - _tmp79 * _tmp88 + _tmp81);
  const Scalar _tmp133 = -Scalar(1.0) * _tmp125 * _tmp87 - Scalar(1.0) * _tmp132 + Scalar(1.0);
  const Scalar _tmp134 = _tmp103 * _tmp129 - _tmp104 * _tmp79 - _tmp97;
  const Scalar _tmp135 = fh1 * (_tmp68 + _tmp75);
  const Scalar _tmp136 = -_tmp109 * _tmp135 - Scalar(5.1796800000000003) * _tmp26 - _tmp32 * fv1;
  const Scalar _tmp137 = _tmp82 * (_tmp123 * _tmp125 + Scalar(1.0));
  const Scalar _tmp138 = _tmp125 * _tmp84;
  const Scalar _tmp139 = -Scalar(1.0) * _tmp137 + Scalar(1.0) * _tmp138;
  const Scalar _tmp140 = _tmp116 * _tmp135 + Scalar(5.1796800000000003) * _tmp13 + _tmp20 * fv1;
  const Scalar _tmp141 = _tmp122 * _tmp82;
  const Scalar _tmp142 = Scalar(1.0) * _tmp125 * _tmp141 - Scalar(1.0) * _tmp125;
  const Scalar _tmp143 = Scalar(1.0) * _tmp110 * (_tmp103 * _tmp125 - _tmp128 * _tmp134) +
                         Scalar(1.0) * _tmp117 * (_tmp113 * _tmp125 - _tmp128 * _tmp130) +
                         Scalar(1.0) * _tmp119 * (_tmp126 - _tmp127 * _tmp128) + _tmp133 * _tmp42 +
                         _tmp136 * _tmp139 + _tmp140 * _tmp142;
  const Scalar _tmp144 = std::asinh(_tmp121 * _tmp143);
  const Scalar _tmp145 = Scalar(9.6622558468725703) * _tmp120;
  const Scalar _tmp146 =
      -_tmp144 * _tmp145 -
      Scalar(8.3196563700000006) *
          std::sqrt(
              Scalar(std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp38 - 1), Scalar(2)) +
                     Scalar(0.057067943376852184) *
                         std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp41 - 1), Scalar(2))));
  const Scalar _tmp147 = Scalar(0.1034955) * _tmp121;
  const Scalar _tmp148 = _tmp146 * _tmp147;
  const Scalar _tmp149 = Scalar(9.6622558468725703) * _tmp93;
  const Scalar _tmp150 = std::pow(_tmp120, Scalar(-2));
  const Scalar _tmp151 = _tmp150 * _tmp93;
  const Scalar _tmp152 = _tmp22 + _tmp27 + _tmp35;
  const Scalar _tmp153 =
      (_tmp121 * (-_tmp133 + _tmp139 * _tmp152 + _tmp142 * _tmp20) - _tmp143 * _tmp151) /
      std::sqrt(Scalar(std::pow(_tmp143, Scalar(2)) * _tmp150 + 1));
  const Scalar _tmp154 = Scalar(1.0) * _tmp144;
  const Scalar _tmp155 = _tmp125 * _tmp140;
  const Scalar _tmp156 = _tmp110 * _tmp134 * _tmp82 + _tmp117 * _tmp130 * _tmp82 +
                         _tmp119 * _tmp127 * _tmp82 + _tmp132 * _tmp42 + _tmp136 * _tmp137 -
                         _tmp141 * _tmp155;
  const Scalar _tmp157 = _tmp42 * _tmp88;
  const Scalar _tmp158 = _tmp56 * _tmp66;
  const Scalar _tmp159 = _tmp118 * _tmp119;
  const Scalar _tmp160 = _tmp105 * _tmp110 * _tmp66 + _tmp115 * _tmp117 * _tmp66 -
                         _tmp157 * _tmp158 - _tmp158 * _tmp159;
  const Scalar _tmp161 = Scalar(1.0) / (_tmp160);
  const Scalar _tmp162 = std::asinh(_tmp156 * _tmp161);
  const Scalar _tmp163 = Scalar(1.0) * _tmp162;
  const Scalar _tmp164 = std::pow(_tmp160, Scalar(-2));
  const Scalar _tmp165 = _tmp158 * _tmp164 * _tmp88;
  const Scalar _tmp166 = _tmp125 * _tmp20;
  const Scalar _tmp167 =
      (-_tmp156 * _tmp165 + _tmp161 * (-_tmp132 + _tmp137 * _tmp152 - _tmp141 * _tmp166)) /
      std::sqrt(Scalar(std::pow(_tmp156, Scalar(2)) * _tmp164 + 1));
  const Scalar _tmp168 = Scalar(9.6622558468725703) * _tmp88;
  const Scalar _tmp169 = _tmp158 * _tmp168;
  const Scalar _tmp170 = Scalar(9.6622558468725703) * _tmp160;
  const Scalar _tmp171 = Scalar(0.1034955) * _tmp161;
  const Scalar _tmp172 =
      -_tmp162 * _tmp170 -
      Scalar(8.3888750099999996) *
          std::sqrt(
              Scalar(Scalar(0.090254729040973036) *
                         std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp61), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp58 - 1), Scalar(2))));
  const Scalar _tmp173 = _tmp171 * _tmp172;
  const Scalar _tmp174 = _tmp104 * _tmp110 + _tmp114 * _tmp117 + _tmp157 + _tmp159;
  const Scalar _tmp175 = Scalar(1.0) / (_tmp174);
  const Scalar _tmp176 = -_tmp103 * _tmp110 * _tmp124 - _tmp113 * _tmp117 * _tmp124 -
                         _tmp119 * _tmp126 + _tmp131 * _tmp42 - _tmp136 * _tmp138 + _tmp155;
  const Scalar _tmp177 = std::asinh(_tmp175 * _tmp176);
  const Scalar _tmp178 = Scalar(9.6622558468725703) * _tmp174;
  const Scalar _tmp179 =
      -_tmp177 * _tmp178 -
      Scalar(4.7752063900000001) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp44), Scalar(2)) +
                     Scalar(0.32397683292140877) *
                         std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp47), Scalar(2))));
  const Scalar _tmp180 = Scalar(0.1034955) * _tmp175;
  const Scalar _tmp181 = _tmp179 * _tmp180;
  const Scalar _tmp182 = std::pow(_tmp174, Scalar(-2));
  const Scalar _tmp183 = _tmp182 * _tmp88;
  const Scalar _tmp184 = (_tmp175 * (-_tmp131 - _tmp138 * _tmp152 + _tmp166) + _tmp176 * _tmp183) /
                         std::sqrt(Scalar(std::pow(_tmp176, Scalar(2)) * _tmp182 + 1));
  const Scalar _tmp185 = Scalar(1.0) * _tmp177;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp34 *
      (_tmp2 * std::sinh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::sinh(
                   Scalar(0.1034955) * _tmp0 *
                   (-_tmp1 * _tmp34 -
                    Scalar(4.8333311099999996) *
                        std::sqrt(Scalar(
                            std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp33), Scalar(2)) +
                            Scalar(0.13817235445745474) *
                                std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp21 - 1),
                                         Scalar(2)))))));
  _res(1, 0) =
      -_tmp145 *
          (-Scalar(0.87679799772039002) * _tmp151 + Scalar(1.0) * _tmp153 * std::sinh(_tmp154) -
           (-Scalar(0.1034955) * _tmp146 * _tmp151 +
            _tmp147 * (-_tmp144 * _tmp149 - _tmp145 * _tmp153)) *
               std::sinh(_tmp148)) -
      _tmp149 * (Scalar(0.87679799772039002) * _tmp121 - std::cosh(_tmp148) + std::cosh(_tmp154));
  _res(2, 0) =
      -_tmp169 * (Scalar(0.87653584775870996) * _tmp161 + std::cosh(_tmp163) - std::cosh(_tmp173)) -
      _tmp170 *
          (-Scalar(0.87653584775870996) * _tmp165 + Scalar(1.0) * _tmp167 * std::sinh(_tmp163) -
           (-Scalar(0.1034955) * _tmp165 * _tmp172 +
            _tmp171 * (-_tmp162 * _tmp169 - _tmp167 * _tmp170)) *
               std::sinh(_tmp173));
  _res(3, 0) =
      _tmp168 * (Scalar(0.86565325453551001) * _tmp175 - std::cosh(_tmp181) + std::cosh(_tmp185)) -
      _tmp178 *
          (Scalar(0.86565325453551001) * _tmp183 + Scalar(1.0) * _tmp184 * std::sinh(_tmp185) -
           (Scalar(0.1034955) * _tmp179 * _tmp183 +
            _tmp180 * (_tmp168 * _tmp177 - _tmp178 * _tmp184)) *
               std::sinh(_tmp181));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
