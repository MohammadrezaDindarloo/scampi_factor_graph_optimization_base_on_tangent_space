// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl6
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl6(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 604

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (188)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp9 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp10 = _tmp1 * _tmp9;
  const Scalar _tmp11 = -_tmp10 + _tmp8;
  const Scalar _tmp12 = Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = -_tmp12;
  const Scalar _tmp14 = 2 * _tmp1;
  const Scalar _tmp15 = _tmp14 * _tmp7;
  const Scalar _tmp16 = _tmp3 * _tmp9;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp13 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp6;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp23 = _tmp14 * _tmp3;
  const Scalar _tmp24 = _tmp7 * _tmp9;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(1.0) * _tmp0 /
                        std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp34 = -_tmp17;
  const Scalar _tmp35 = _tmp13 + _tmp34;
  const Scalar _tmp36 = _tmp35 + _tmp6;
  const Scalar _tmp37 = _tmp36 + position_vector(1, 0);
  const Scalar _tmp38 = -_tmp22;
  const Scalar _tmp39 = _tmp28 + _tmp38;
  const Scalar _tmp40 = _tmp39 + position_vector(0, 0);
  const Scalar _tmp41 = _tmp26 + _tmp27;
  const Scalar _tmp42 = _tmp38 + _tmp41;
  const Scalar _tmp43 = _tmp42 + position_vector(0, 0);
  const Scalar _tmp44 = _tmp43 + Scalar(125.0);
  const Scalar _tmp45 = _tmp35 + _tmp5;
  const Scalar _tmp46 = _tmp45 + position_vector(1, 0);
  const Scalar _tmp47 = _tmp46 + Scalar(-110.0);
  const Scalar _tmp48 = std::pow(Scalar(std::pow(_tmp44, Scalar(2)) + std::pow(_tmp47, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp44 * _tmp48;
  const Scalar _tmp50 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp51 = -_tmp50;
  const Scalar _tmp52 =
      -Scalar(0.010999999999999999) * _tmp2 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp53 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp54 = _tmp52 + _tmp53;
  const Scalar _tmp55 = _tmp51 + _tmp54;
  const Scalar _tmp56 = _tmp52 - _tmp53;
  const Scalar _tmp57 = _tmp51 + _tmp56;
  const Scalar _tmp58 = _tmp37 + Scalar(110.0);
  const Scalar _tmp59 = _tmp40 + Scalar(125.0);
  const Scalar _tmp60 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp61 = _tmp58 * _tmp60;
  const Scalar _tmp62 = _tmp57 * _tmp61;
  const Scalar _tmp63 = _tmp50 + _tmp54;
  const Scalar _tmp64 = _tmp18 + _tmp5;
  const Scalar _tmp65 = _tmp64 + position_vector(1, 0);
  const Scalar _tmp66 = _tmp65 + Scalar(-110.0);
  const Scalar _tmp67 = _tmp22 + _tmp41;
  const Scalar _tmp68 = _tmp67 + position_vector(0, 0);
  const Scalar _tmp69 = _tmp68 + Scalar(-125.0);
  const Scalar _tmp70 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp69, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp71 = _tmp66 * _tmp70;
  const Scalar _tmp72 = _tmp69 * _tmp70;
  const Scalar _tmp73 = -_tmp62 * _tmp72 + _tmp63 * _tmp71;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp61 * _tmp72 - _tmp71);
  const Scalar _tmp75 = _tmp47 * _tmp48;
  const Scalar _tmp76 = _tmp49 * _tmp61 - _tmp75;
  const Scalar _tmp77 = _tmp74 * _tmp76;
  const Scalar _tmp78 = -_tmp49 * _tmp62 + _tmp55 * _tmp75 - _tmp73 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) * _tmp36;
  const Scalar _tmp80 = -_tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp64 + _tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp39;
  const Scalar _tmp83 = _tmp81 * (-_tmp67 + _tmp82);
  const Scalar _tmp84 = _tmp57 * _tmp72 - _tmp63 * _tmp72;
  const Scalar _tmp85 = -_tmp49 * _tmp55 + _tmp49 * _tmp57 - _tmp77 * _tmp84 - _tmp78 * _tmp83;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp87 = Scalar(1.0) * _tmp74;
  const Scalar _tmp88 = _tmp73 * _tmp87;
  const Scalar _tmp89 = _tmp83 * _tmp88 - _tmp84 * _tmp87;
  const Scalar _tmp90 =
      std::sqrt(Scalar(std::pow(_tmp58, Scalar(2)) + std::pow(_tmp59, Scalar(2))));
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 = _tmp60 * _tmp90;
  const Scalar _tmp93 = _tmp92 * (-_tmp36 * _tmp59 * _tmp91 + _tmp39 * _tmp58 * _tmp91);
  const Scalar _tmp94 = _tmp64 * _tmp72 - _tmp67 * _tmp71 + _tmp72 * _tmp93;
  const Scalar _tmp95 = -_tmp42 * _tmp75 + _tmp45 * _tmp49 + _tmp49 * _tmp93 - _tmp77 * _tmp94;
  const Scalar _tmp96 = _tmp86 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp98 = _tmp85 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (-_tmp87 * _tmp94 - _tmp89 * _tmp96);
  const Scalar _tmp100 = _tmp86 * (_tmp89 + _tmp99);
  const Scalar _tmp101 = -_tmp100 * _tmp76 + Scalar(1.0);
  const Scalar _tmp102 = _tmp72 * _tmp74;
  const Scalar _tmp103 = _tmp20 + Scalar(110.0);
  const Scalar _tmp104 = _tmp30 + Scalar(-125.0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp103 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp109 = _tmp79 * _tmp83 + _tmp82;
  const Scalar _tmp110 = 0;
  const Scalar _tmp111 = _tmp110 * _tmp77;
  const Scalar _tmp112 = _tmp92 * (_tmp110 * _tmp49 - _tmp111 * _tmp72);
  const Scalar _tmp113 = _tmp76 * _tmp87 * _tmp97;
  const Scalar _tmp114 = Scalar(1.0) * _tmp97;
  const Scalar _tmp115 = _tmp104 * _tmp105;
  const Scalar _tmp116 = fh1 * (_tmp106 * _tmp29 - _tmp115 * _tmp19);
  const Scalar _tmp117 = _tmp61 * _tmp74;
  const Scalar _tmp118 = _tmp117 * _tmp73 + _tmp62;
  const Scalar _tmp119 = _tmp117 * _tmp84 - _tmp118 * _tmp83 - _tmp57;
  const Scalar _tmp120 = _tmp98 * (_tmp117 * _tmp94 - _tmp119 * _tmp96 - _tmp93);
  const Scalar _tmp121 = _tmp86 * (_tmp119 + _tmp120);
  const Scalar _tmp122 = -_tmp121 * _tmp76 - _tmp61;
  const Scalar _tmp123 = _tmp115 * fh1;
  const Scalar _tmp124 = -_tmp107 * _tmp92 * (_tmp100 * _tmp49 + _tmp101 * _tmp102) -
                         _tmp108 * _tmp112 -
                         _tmp116 * _tmp92 * (-_tmp113 * _tmp72 + _tmp114 * _tmp49) -
                         _tmp123 * _tmp92 * (_tmp102 * _tmp122 + _tmp121 * _tmp49 + Scalar(1.0));
  const Scalar _tmp125 = Scalar(1.0) / (_tmp124);
  const Scalar _tmp126 = fh1 * (_tmp50 + _tmp56);
  const Scalar _tmp127 = -_tmp106 * _tmp126 - Scalar(40.024799999999999) * _tmp11 - _tmp19 * fv1;
  const Scalar _tmp128 = _tmp45 + _tmp80;
  const Scalar _tmp129 = _tmp128 * _tmp83;
  const Scalar _tmp130 = Scalar(1.0) / (-_tmp129 - _tmp42 + _tmp82);
  const Scalar _tmp131 = Scalar(1.0) * _tmp130;
  const Scalar _tmp132 = _tmp81 * (_tmp129 * _tmp131 + Scalar(1.0));
  const Scalar _tmp133 = _tmp131 * _tmp83;
  const Scalar _tmp134 = -Scalar(1.0) * _tmp132 + Scalar(1.0) * _tmp133;
  const Scalar _tmp135 = _tmp128 * _tmp130;
  const Scalar _tmp136 = _tmp118 + _tmp120 * _tmp135 - _tmp121 * _tmp78;
  const Scalar _tmp137 = Scalar(1.0) * _tmp81;
  const Scalar _tmp138 = _tmp115 * _tmp126 + Scalar(40.024799999999999) * _tmp25 + _tmp29 * fv1;
  const Scalar _tmp139 = _tmp128 * _tmp81;
  const Scalar _tmp140 = Scalar(1.0) * _tmp131 * _tmp139 - Scalar(1.0) * _tmp131;
  const Scalar _tmp141 = _tmp109 * _tmp130;
  const Scalar _tmp142 = _tmp81 * (-_tmp110 * _tmp78 - _tmp128 * _tmp141 + _tmp80);
  const Scalar _tmp143 = -Scalar(1.0) * _tmp109 * _tmp131 - Scalar(1.0) * _tmp142 + Scalar(1.0);
  const Scalar _tmp144 = _tmp131 * _tmp98;
  const Scalar _tmp145 = -_tmp114 * _tmp78 + _tmp128 * _tmp144;
  const Scalar _tmp146 = -_tmp100 * _tmp78 + _tmp135 * _tmp99 - _tmp88;
  const Scalar _tmp147 = Scalar(1.0) * _tmp107 * (_tmp131 * _tmp99 - _tmp137 * _tmp146) +
                         _tmp108 * _tmp143 +
                         Scalar(1.0) * _tmp116 * (-_tmp137 * _tmp145 + _tmp144) +
                         Scalar(1.0) * _tmp123 * (_tmp120 * _tmp131 - _tmp136 * _tmp137) +
                         _tmp127 * _tmp134 + _tmp138 * _tmp140;
  const Scalar _tmp148 = std::asinh(_tmp125 * _tmp147);
  const Scalar _tmp149 = Scalar(1.4083112389913199) * _tmp124;
  const Scalar _tmp150 =
      -_tmp148 * _tmp149 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp37 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp40 - 1), Scalar(2))));
  const Scalar _tmp151 = Scalar(0.71007031138673404) * _tmp125;
  const Scalar _tmp152 = _tmp150 * _tmp151;
  const Scalar _tmp153 = Scalar(1.0) * _tmp148;
  const Scalar _tmp154 = Scalar(1.4083112389913199) * _tmp112;
  const Scalar _tmp155 = std::pow(_tmp124, Scalar(-2));
  const Scalar _tmp156 = _tmp12 + _tmp34 + _tmp5;
  const Scalar _tmp157 = _tmp112 * _tmp155;
  const Scalar _tmp158 =
      (_tmp125 * (_tmp134 * _tmp156 + _tmp140 * _tmp29 - _tmp143) - _tmp147 * _tmp157) /
      std::sqrt(Scalar(std::pow(_tmp147, Scalar(2)) * _tmp155 + 1));
  const Scalar _tmp159 = _tmp108 * _tmp110;
  const Scalar _tmp160 = _tmp101 * _tmp107 * _tmp74 - _tmp113 * _tmp116 +
                         _tmp122 * _tmp123 * _tmp74 - _tmp159 * _tmp77;
  const Scalar _tmp161 = std::pow(_tmp160, Scalar(-2));
  const Scalar _tmp162 = _tmp111 * _tmp161;
  const Scalar _tmp163 = _tmp131 * _tmp138;
  const Scalar _tmp164 = _tmp107 * _tmp146 * _tmp81 + _tmp108 * _tmp142 +
                         _tmp116 * _tmp145 * _tmp81 + _tmp123 * _tmp136 * _tmp81 +
                         _tmp127 * _tmp132 - _tmp139 * _tmp163;
  const Scalar _tmp165 = Scalar(1.0) / (_tmp160);
  const Scalar _tmp166 = std::asinh(_tmp164 * _tmp165);
  const Scalar _tmp167 = Scalar(1.4083112389913199) * _tmp160;
  const Scalar _tmp168 =
      -_tmp166 * _tmp167 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp65), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp68), Scalar(2))));
  const Scalar _tmp169 = Scalar(0.71007031138673404) * _tmp165;
  const Scalar _tmp170 = _tmp168 * _tmp169;
  const Scalar _tmp171 = _tmp131 * _tmp29;
  const Scalar _tmp172 =
      (-_tmp162 * _tmp164 + _tmp165 * (_tmp132 * _tmp156 - _tmp139 * _tmp171 - _tmp142)) /
      std::sqrt(Scalar(_tmp161 * std::pow(_tmp164, Scalar(2)) + 1));
  const Scalar _tmp173 = Scalar(1.4083112389913199) * _tmp110;
  const Scalar _tmp174 = _tmp173 * _tmp77;
  const Scalar _tmp175 = Scalar(1.0) * _tmp166;
  const Scalar _tmp176 = _tmp100 * _tmp107 + _tmp114 * _tmp116 + _tmp121 * _tmp123 + _tmp159;
  const Scalar _tmp177 = Scalar(1.0) / (_tmp176);
  const Scalar _tmp178 = -_tmp107 * _tmp130 * _tmp99 + _tmp108 * _tmp141 - _tmp116 * _tmp144 -
                         _tmp120 * _tmp123 * _tmp130 - _tmp127 * _tmp133 + _tmp163;
  const Scalar _tmp179 = std::asinh(_tmp177 * _tmp178);
  const Scalar _tmp180 = Scalar(1.4083112389913199) * _tmp176;
  const Scalar _tmp181 =
      -_tmp179 * _tmp180 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp46), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp43 - 1), Scalar(2))));
  const Scalar _tmp182 = Scalar(0.71007031138673404) * _tmp177;
  const Scalar _tmp183 = _tmp181 * _tmp182;
  const Scalar _tmp184 = Scalar(1.0) * _tmp179;
  const Scalar _tmp185 = std::pow(_tmp176, Scalar(-2));
  const Scalar _tmp186 = _tmp110 * _tmp185;
  const Scalar _tmp187 = (_tmp177 * (-_tmp133 * _tmp156 - _tmp141 + _tmp171) + _tmp178 * _tmp186) /
                         std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp185 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 *
      (_tmp33 * std::sinh(Scalar(1.0) * _tmp31) +
       _tmp33 * std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                          (-_tmp31 * _tmp32 -
                           Scalar(125.0) *
                               std::sqrt(Scalar(
                                   std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp30),
                                            Scalar(2)) +
                                   Scalar(0.77439999999999998) *
                                       std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp20 - 1),
                                                Scalar(2)))))));
  _res(1, 0) =
      -_tmp149 *
          (-Scalar(34.083374946563197) * _tmp157 + Scalar(1.0) * _tmp158 * std::sinh(_tmp153) -
           (-Scalar(0.71007031138673404) * _tmp150 * _tmp157 +
            _tmp151 * (-_tmp148 * _tmp154 - _tmp149 * _tmp158)) *
               std::sinh(_tmp152)) -
      _tmp154 * (Scalar(34.083374946563197) * _tmp125 - std::cosh(_tmp152) + std::cosh(_tmp153));
  _res(2, 0) =
      -_tmp167 *
          (-Scalar(34.083374946563197) * _tmp162 + Scalar(1.0) * _tmp172 * std::sinh(_tmp175) -
           (-Scalar(0.71007031138673404) * _tmp162 * _tmp168 +
            _tmp169 * (-_tmp166 * _tmp174 - _tmp167 * _tmp172)) *
               std::sinh(_tmp170)) -
      _tmp174 * (Scalar(34.083374946563197) * _tmp165 - std::cosh(_tmp170) + std::cosh(_tmp175));
  _res(3, 0) =
      _tmp173 * (Scalar(34.083374946563197) * _tmp177 - std::cosh(_tmp183) + std::cosh(_tmp184)) -
      _tmp180 * (Scalar(34.083374946563197) * _tmp186 + Scalar(1.0) * _tmp187 * std::sinh(_tmp184) -
                 (Scalar(0.71007031138673404) * _tmp181 * _tmp186 +
                  _tmp182 * (_tmp173 * _tmp179 - _tmp180 * _tmp187)) *
                     std::sinh(_tmp183));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
