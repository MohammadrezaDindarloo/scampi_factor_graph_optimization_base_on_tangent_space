// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl17
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl17(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 595

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (190)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = 2 * _tmp4;
  const Scalar _tmp6 = _tmp3 * _tmp5;
  const Scalar _tmp7 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp6 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = _tmp5 * _tmp7;
  const Scalar _tmp12 = _tmp3 * _tmp8;
  const Scalar _tmp13 = _tmp11 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp16 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 + _tmp17;
  const Scalar _tmp19 = _tmp10 + _tmp18;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp6 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp22 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp23 = _tmp4 * _tmp8;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -_tmp25;
  const Scalar _tmp27 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp15 +
                        Scalar(0.20999999999999999) * _tmp27 + Scalar(0.20999999999999999);
  const Scalar _tmp29 = _tmp26 + _tmp28;
  const Scalar _tmp30 = _tmp21 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(1, 0);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = _tmp14 - _tmp17;
  const Scalar _tmp34 = _tmp10 + _tmp33;
  const Scalar _tmp35 = _tmp34 + position_vector(0, 0);
  const Scalar _tmp36 = -_tmp21;
  const Scalar _tmp37 = _tmp29 + _tmp36;
  const Scalar _tmp38 = _tmp37 + position_vector(1, 0);
  const Scalar _tmp39 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp40 = Scalar(1.0) * _tmp37;
  const Scalar _tmp41 = -_tmp40;
  const Scalar _tmp42 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp43 = -_tmp42;
  const Scalar _tmp44 =
      -Scalar(0.010999999999999999) * _tmp16 - Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp45 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp46 = _tmp44 - _tmp45;
  const Scalar _tmp47 = _tmp43 + _tmp46;
  const Scalar _tmp48 = -_tmp28;
  const Scalar _tmp49 = _tmp26 + _tmp48;
  const Scalar _tmp50 = _tmp36 + _tmp49;
  const Scalar _tmp51 = _tmp50 + position_vector(1, 0);
  const Scalar _tmp52 = _tmp51 + Scalar(110.0);
  const Scalar _tmp53 = -_tmp10;
  const Scalar _tmp54 = _tmp33 + _tmp53;
  const Scalar _tmp55 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp56 = _tmp55 + Scalar(125.0);
  const Scalar _tmp57 = std::pow(Scalar(std::pow(_tmp52, Scalar(2)) + std::pow(_tmp56, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp58 = _tmp52 * _tmp57;
  const Scalar _tmp59 = _tmp44 + _tmp45;
  const Scalar _tmp60 = _tmp43 + _tmp59;
  const Scalar _tmp61 = _tmp21 + _tmp49;
  const Scalar _tmp62 = _tmp61 + position_vector(1, 0);
  const Scalar _tmp63 = _tmp62 + Scalar(110.0);
  const Scalar _tmp64 = _tmp18 + _tmp53;
  const Scalar _tmp65 = _tmp64 + position_vector(0, 0);
  const Scalar _tmp66 = _tmp65 + Scalar(-125.0);
  const Scalar _tmp67 = std::pow(Scalar(std::pow(_tmp63, Scalar(2)) + std::pow(_tmp66, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp68 = _tmp63 * _tmp67;
  const Scalar _tmp69 = _tmp38 + Scalar(-110.0);
  const Scalar _tmp70 = _tmp35 + Scalar(125.0);
  const Scalar _tmp71 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp72 = _tmp69 * _tmp71;
  const Scalar _tmp73 = _tmp42 + _tmp46;
  const Scalar _tmp74 = _tmp66 * _tmp67;
  const Scalar _tmp75 = _tmp73 * _tmp74;
  const Scalar _tmp76 = _tmp60 * _tmp68 - _tmp72 * _tmp75;
  const Scalar _tmp77 = Scalar(1.0) / (-_tmp68 + _tmp72 * _tmp74);
  const Scalar _tmp78 = _tmp56 * _tmp57;
  const Scalar _tmp79 = -_tmp58 + _tmp72 * _tmp78;
  const Scalar _tmp80 = _tmp77 * _tmp79;
  const Scalar _tmp81 = _tmp72 * _tmp73;
  const Scalar _tmp82 = _tmp47 * _tmp58 - _tmp76 * _tmp80 - _tmp78 * _tmp81;
  const Scalar _tmp83 = -_tmp60 * _tmp74 + _tmp75;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp41 + _tmp61);
  const Scalar _tmp85 = Scalar(1.0) * _tmp34;
  const Scalar _tmp86 = _tmp84 * (-_tmp64 + _tmp85);
  const Scalar _tmp87 = -_tmp47 * _tmp78 + _tmp73 * _tmp78 - _tmp80 * _tmp83 - _tmp82 * _tmp86;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 = _tmp40 * _tmp86 + _tmp85;
  const Scalar _tmp90 = 0;
  const Scalar _tmp91 = _tmp41 + _tmp50;
  const Scalar _tmp92 = _tmp86 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (-_tmp54 + _tmp85 - _tmp92);
  const Scalar _tmp94 = _tmp89 * _tmp93;
  const Scalar _tmp95 = _tmp84 * (_tmp41 - _tmp82 * _tmp90 - _tmp91 * _tmp94);
  const Scalar _tmp96 = -Scalar(1.0) * _tmp94 - Scalar(1.0) * _tmp95 + Scalar(1.0);
  const Scalar _tmp97 =
      std::sqrt(Scalar(std::pow(_tmp69, Scalar(2)) + std::pow(_tmp70, Scalar(2))));
  const Scalar _tmp98 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp99 = _tmp71 * _tmp97;
  const Scalar _tmp100 = _tmp99 * (_tmp34 * _tmp69 * _tmp98 - _tmp37 * _tmp70 * _tmp98);
  const Scalar _tmp101 = _tmp100 * _tmp74 + _tmp61 * _tmp74 - _tmp64 * _tmp68;
  const Scalar _tmp102 = _tmp100 * _tmp78 - _tmp101 * _tmp80 + _tmp50 * _tmp78 - _tmp54 * _tmp58;
  const Scalar _tmp103 = Scalar(1.0) / (_tmp102);
  const Scalar _tmp104 = Scalar(1.0) * _tmp103;
  const Scalar _tmp105 = _tmp103 * _tmp87;
  const Scalar _tmp106 = Scalar(1.0) * _tmp93;
  const Scalar _tmp107 = _tmp106 * _tmp91;
  const Scalar _tmp108 = -_tmp104 * _tmp82 + _tmp105 * _tmp107;
  const Scalar _tmp109 = Scalar(1.0) * _tmp84;
  const Scalar _tmp110 = _tmp105 * _tmp106;
  const Scalar _tmp111 = _tmp31 + Scalar(-110.0);
  const Scalar _tmp112 = _tmp20 + Scalar(-125.0);
  const Scalar _tmp113 =
      std::pow(Scalar(std::pow(_tmp111, Scalar(2)) + std::pow(_tmp112, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp114 = _tmp112 * _tmp113;
  const Scalar _tmp115 = _tmp111 * _tmp113;
  const Scalar _tmp116 = fh1 * (-_tmp114 * _tmp30 + _tmp115 * _tmp19);
  const Scalar _tmp117 = _tmp72 * _tmp77;
  const Scalar _tmp118 = _tmp117 * _tmp76 + _tmp81;
  const Scalar _tmp119 = _tmp117 * _tmp83 - _tmp118 * _tmp86 - _tmp73;
  const Scalar _tmp120 = _tmp102 * _tmp88;
  const Scalar _tmp121 = _tmp105 * (-_tmp100 + _tmp101 * _tmp117 - _tmp119 * _tmp120);
  const Scalar _tmp122 = _tmp88 * (_tmp119 + _tmp121);
  const Scalar _tmp123 = _tmp91 * _tmp93;
  const Scalar _tmp124 = _tmp118 + _tmp121 * _tmp123 - _tmp122 * _tmp82;
  const Scalar _tmp125 = _tmp114 * fh1;
  const Scalar _tmp126 = fh1 * (_tmp42 + _tmp59);
  const Scalar _tmp127 = -_tmp115 * _tmp126 - Scalar(40.024799999999999) * _tmp24 - _tmp30 * fv1;
  const Scalar _tmp128 = _tmp84 * (_tmp106 * _tmp92 + Scalar(1.0));
  const Scalar _tmp129 = _tmp106 * _tmp86;
  const Scalar _tmp130 = -Scalar(1.0) * _tmp128 + Scalar(1.0) * _tmp129;
  const Scalar _tmp131 = _tmp114 * _tmp126 + Scalar(40.024799999999999) * _tmp13 + _tmp19 * fv1;
  const Scalar _tmp132 = -Scalar(1.0) * _tmp106 + Scalar(1.0) * _tmp107 * _tmp84;
  const Scalar _tmp133 = Scalar(1.0) * _tmp77;
  const Scalar _tmp134 = _tmp133 * _tmp76;
  const Scalar _tmp135 = -_tmp133 * _tmp83 + _tmp134 * _tmp86;
  const Scalar _tmp136 = _tmp105 * (-_tmp101 * _tmp133 - _tmp120 * _tmp135);
  const Scalar _tmp137 = _tmp88 * (_tmp135 + _tmp136);
  const Scalar _tmp138 = _tmp123 * _tmp136 - _tmp134 - _tmp137 * _tmp82;
  const Scalar _tmp139 = _tmp115 * fh1;
  const Scalar _tmp140 = Scalar(1.0) * _tmp116 * (-_tmp108 * _tmp109 + _tmp110) +
                         Scalar(1.0) * _tmp125 * (_tmp106 * _tmp121 - _tmp109 * _tmp124) +
                         _tmp127 * _tmp130 + _tmp131 * _tmp132 +
                         Scalar(1.0) * _tmp139 * (_tmp106 * _tmp136 - _tmp109 * _tmp138) +
                         _tmp39 * _tmp96;
  const Scalar _tmp141 = -_tmp137 * _tmp79 + Scalar(1.0);
  const Scalar _tmp142 = _tmp74 * _tmp77;
  const Scalar _tmp143 = -_tmp122 * _tmp79 - _tmp72;
  const Scalar _tmp144 = _tmp103 * _tmp133 * _tmp79;
  const Scalar _tmp145 = _tmp80 * _tmp90;
  const Scalar _tmp146 = _tmp99 * (-_tmp145 * _tmp74 + _tmp78 * _tmp90);
  const Scalar _tmp147 = -_tmp116 * _tmp99 * (_tmp104 * _tmp78 - _tmp144 * _tmp74) -
                         _tmp125 * _tmp99 * (_tmp122 * _tmp78 + _tmp142 * _tmp143 + Scalar(1.0)) -
                         _tmp139 * _tmp99 * (_tmp137 * _tmp78 + _tmp141 * _tmp142) -
                         _tmp146 * _tmp39;
  const Scalar _tmp148 = Scalar(1.0) / (_tmp147);
  const Scalar _tmp149 = std::asinh(_tmp140 * _tmp148);
  const Scalar _tmp150 = Scalar(1.4083112389913199) * _tmp147;
  const Scalar _tmp151 =
      -_tmp149 * _tmp150 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp38), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp35 - 1), Scalar(2))));
  const Scalar _tmp152 = Scalar(0.71007031138673404) * _tmp148;
  const Scalar _tmp153 = _tmp151 * _tmp152;
  const Scalar _tmp154 = Scalar(1.0) * _tmp149;
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp146;
  const Scalar _tmp156 = std::pow(_tmp147, Scalar(-2));
  const Scalar _tmp157 = _tmp146 * _tmp156;
  const Scalar _tmp158 = _tmp25 + _tmp36 + _tmp48;
  const Scalar _tmp159 =
      (-_tmp140 * _tmp157 + _tmp148 * (_tmp130 * _tmp158 + _tmp132 * _tmp19 - _tmp96)) /
      std::sqrt(Scalar(std::pow(_tmp140, Scalar(2)) * _tmp156 + 1));
  const Scalar _tmp160 = _tmp39 * _tmp90;
  const Scalar _tmp161 = -_tmp116 * _tmp144 + _tmp125 * _tmp143 * _tmp77 +
                         _tmp139 * _tmp141 * _tmp77 - _tmp160 * _tmp80;
  const Scalar _tmp162 = Scalar(1.0) / (_tmp161);
  const Scalar _tmp163 = _tmp106 * _tmp131;
  const Scalar _tmp164 = _tmp84 * _tmp91;
  const Scalar _tmp165 = _tmp108 * _tmp116 * _tmp84 + _tmp124 * _tmp125 * _tmp84 +
                         _tmp127 * _tmp128 + _tmp138 * _tmp139 * _tmp84 - _tmp163 * _tmp164 +
                         _tmp39 * _tmp95;
  const Scalar _tmp166 = std::asinh(_tmp162 * _tmp165);
  const Scalar _tmp167 = Scalar(1.0) * _tmp166;
  const Scalar _tmp168 = std::pow(_tmp161, Scalar(-2));
  const Scalar _tmp169 = _tmp145 * _tmp168;
  const Scalar _tmp170 = _tmp106 * _tmp19;
  const Scalar _tmp171 =
      (_tmp162 * (_tmp128 * _tmp158 - _tmp164 * _tmp170 - _tmp95) - _tmp165 * _tmp169) /
      std::sqrt(Scalar(std::pow(_tmp165, Scalar(2)) * _tmp168 + 1));
  const Scalar _tmp172 = Scalar(1.4083112389913199) * _tmp90;
  const Scalar _tmp173 = _tmp172 * _tmp80;
  const Scalar _tmp174 = Scalar(1.4083112389913199) * _tmp161;
  const Scalar _tmp175 = Scalar(0.71007031138673404) * _tmp162;
  const Scalar _tmp176 =
      -_tmp166 * _tmp174 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp65), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp62 - 1), Scalar(2))));
  const Scalar _tmp177 = _tmp175 * _tmp176;
  const Scalar _tmp178 = _tmp104 * _tmp116 + _tmp122 * _tmp125 + _tmp137 * _tmp139 + _tmp160;
  const Scalar _tmp179 = Scalar(1.0) / (_tmp178);
  const Scalar _tmp180 = -_tmp110 * _tmp116 - _tmp121 * _tmp125 * _tmp93 - _tmp127 * _tmp129 -
                         _tmp136 * _tmp139 * _tmp93 + _tmp163 + _tmp39 * _tmp94;
  const Scalar _tmp181 = std::asinh(_tmp179 * _tmp180);
  const Scalar _tmp182 = Scalar(1.0) * _tmp181;
  const Scalar _tmp183 = Scalar(1.4083112389913199) * _tmp178;
  const Scalar _tmp184 =
      -_tmp181 * _tmp183 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp51 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp55 - 1), Scalar(2))));
  const Scalar _tmp185 = Scalar(0.71007031138673404) * _tmp179;
  const Scalar _tmp186 = _tmp184 * _tmp185;
  const Scalar _tmp187 = std::pow(_tmp178, Scalar(-2));
  const Scalar _tmp188 = _tmp187 * _tmp90;
  const Scalar _tmp189 = (_tmp179 * (-_tmp129 * _tmp158 + _tmp170 - _tmp94) + _tmp180 * _tmp188) /
                         std::sqrt(Scalar(std::pow(_tmp180, Scalar(2)) * _tmp187 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                         (-_tmp1 * _tmp32 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp20),
                                           Scalar(2)) +
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp31),
                                               Scalar(2)))))));
  _res(1, 0) = _tmp150 * (-Scalar(1.0) * _tmp159 * std::cosh(_tmp154) -
                          (-Scalar(0.71007031138673404) * _tmp151 * _tmp157 +
                           _tmp152 * (-_tmp149 * _tmp155 - _tmp150 * _tmp159)) *
                              std::cosh(_tmp153)) +
               _tmp155 * (-std::sinh(_tmp153) - std::sinh(_tmp154));
  _res(2, 0) = _tmp173 * (-std::sinh(_tmp167) - std::sinh(_tmp177)) +
               _tmp174 * (-Scalar(1.0) * _tmp171 * std::cosh(_tmp167) -
                          (-Scalar(0.71007031138673404) * _tmp169 * _tmp176 +
                           _tmp175 * (-_tmp166 * _tmp173 - _tmp171 * _tmp174)) *
                              std::cosh(_tmp177));
  _res(3, 0) = -_tmp172 * (-std::sinh(_tmp182) - std::sinh(_tmp186)) +
               _tmp183 * (-Scalar(1.0) * _tmp189 * std::cosh(_tmp182) -
                          (Scalar(0.71007031138673404) * _tmp184 * _tmp188 +
                           _tmp185 * (_tmp172 * _tmp181 - _tmp183 * _tmp189)) *
                              std::cosh(_tmp186));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
