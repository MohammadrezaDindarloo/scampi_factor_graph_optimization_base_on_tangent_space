// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl7
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl7(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 596

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (188)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = 2 * _tmp1 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp9 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp8 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp11 = 2 * _tmp4;
  const Scalar _tmp12 = _tmp1 * _tmp11;
  const Scalar _tmp13 = _tmp2 * _tmp5;
  const Scalar _tmp14 = _tmp12 - _tmp13;
  const Scalar _tmp15 = Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = -_tmp15;
  const Scalar _tmp17 = -_tmp10 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp7;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp22 = _tmp11 * _tmp2;
  const Scalar _tmp23 = _tmp1 * _tmp5;
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(0, 0);
  const Scalar _tmp30 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp31 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp32 = Scalar(1.0) * _tmp0 /
                        std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp33 = -_tmp7;
  const Scalar _tmp34 = _tmp17 + _tmp33;
  const Scalar _tmp35 = _tmp34 + position_vector(1, 0);
  const Scalar _tmp36 = -_tmp21;
  const Scalar _tmp37 = _tmp27 + _tmp36;
  const Scalar _tmp38 = _tmp37 + position_vector(0, 0);
  const Scalar _tmp39 = Scalar(1.0) * _tmp34;
  const Scalar _tmp40 = -_tmp39;
  const Scalar _tmp41 = _tmp10 + _tmp33;
  const Scalar _tmp42 = _tmp16 + _tmp41;
  const Scalar _tmp43 = Scalar(1.0) / (_tmp40 + _tmp42);
  const Scalar _tmp44 = _tmp25 + _tmp26;
  const Scalar _tmp45 = _tmp36 + _tmp44;
  const Scalar _tmp46 = Scalar(1.0) * _tmp37;
  const Scalar _tmp47 = _tmp43 * (-_tmp45 + _tmp46);
  const Scalar _tmp48 = _tmp42 + position_vector(1, 0);
  const Scalar _tmp49 = _tmp48 + Scalar(-110.0);
  const Scalar _tmp50 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(125.0);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp49 * _tmp52;
  const Scalar _tmp54 = _tmp35 + Scalar(110.0);
  const Scalar _tmp55 = _tmp38 + Scalar(125.0);
  const Scalar _tmp56 = Scalar(1.0) / (_tmp55);
  const Scalar _tmp57 = _tmp54 * _tmp56;
  const Scalar _tmp58 = _tmp51 * _tmp52;
  const Scalar _tmp59 = Scalar(1.0) / (-_tmp53 + _tmp57 * _tmp58);
  const Scalar _tmp60 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp61 = -_tmp60;
  const Scalar _tmp62 =
      -Scalar(0.010999999999999999) * _tmp20 - Scalar(0.010999999999999999) * _tmp8;
  const Scalar _tmp63 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp64 = _tmp62 - _tmp63;
  const Scalar _tmp65 = _tmp61 + _tmp64;
  const Scalar _tmp66 = _tmp57 * _tmp65;
  const Scalar _tmp67 = _tmp62 + _tmp63;
  const Scalar _tmp68 = _tmp61 + _tmp67;
  const Scalar _tmp69 = _tmp59 * (_tmp53 * _tmp68 - _tmp58 * _tmp66);
  const Scalar _tmp70 = Scalar(1.0) * _tmp69;
  const Scalar _tmp71 = _tmp59 * (_tmp58 * _tmp65 - _tmp58 * _tmp68);
  const Scalar _tmp72 = _tmp47 * _tmp70 - Scalar(1.0) * _tmp71;
  const Scalar _tmp73 = _tmp10 + _tmp16 + _tmp7;
  const Scalar _tmp74 = _tmp73 + position_vector(1, 0);
  const Scalar _tmp75 = _tmp74 + Scalar(-110.0);
  const Scalar _tmp76 = _tmp21 + _tmp44;
  const Scalar _tmp77 = _tmp76 + position_vector(0, 0);
  const Scalar _tmp78 = _tmp77 + Scalar(-125.0);
  const Scalar _tmp79 = std::pow(Scalar(std::pow(_tmp75, Scalar(2)) + std::pow(_tmp78, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp80 = _tmp78 * _tmp79;
  const Scalar _tmp81 = _tmp60 + _tmp67;
  const Scalar _tmp82 = _tmp75 * _tmp79;
  const Scalar _tmp83 = _tmp57 * _tmp80 - _tmp82;
  const Scalar _tmp84 = -_tmp66 * _tmp80 - _tmp69 * _tmp83 + _tmp81 * _tmp82;
  const Scalar _tmp85 = -_tmp47 * _tmp84 + _tmp65 * _tmp80 - _tmp71 * _tmp83 - _tmp80 * _tmp81;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp87 =
      std::sqrt(Scalar(std::pow(_tmp54, Scalar(2)) + std::pow(_tmp55, Scalar(2))));
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 = _tmp56 * _tmp87;
  const Scalar _tmp90 = _tmp89 * (-_tmp34 * _tmp55 * _tmp88 + _tmp37 * _tmp54 * _tmp88);
  const Scalar _tmp91 = _tmp59 * (_tmp42 * _tmp58 - _tmp45 * _tmp53 + _tmp58 * _tmp90);
  const Scalar _tmp92 = _tmp73 * _tmp80 - _tmp76 * _tmp82 + _tmp80 * _tmp90 - _tmp83 * _tmp91;
  const Scalar _tmp93 = _tmp86 * _tmp92;
  const Scalar _tmp94 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp95 = _tmp85 * _tmp94;
  const Scalar _tmp96 = _tmp95 * (-_tmp72 * _tmp93 - Scalar(1.0) * _tmp91);
  const Scalar _tmp97 = _tmp72 + _tmp96;
  const Scalar _tmp98 = _tmp80 * _tmp86;
  const Scalar _tmp99 = _tmp83 * _tmp86;
  const Scalar _tmp100 = -_tmp97 * _tmp99 + Scalar(1.0);
  const Scalar _tmp101 = _tmp58 * _tmp59;
  const Scalar _tmp102 = _tmp19 + Scalar(110.0);
  const Scalar _tmp103 = _tmp29 + Scalar(-125.0);
  const Scalar _tmp104 =
      std::pow(Scalar(std::pow(_tmp102, Scalar(2)) + std::pow(_tmp103, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = _tmp102 * _tmp104;
  const Scalar _tmp106 = _tmp105 * fh1;
  const Scalar _tmp107 = Scalar(1.0) * _tmp94;
  const Scalar _tmp108 = _tmp101 * _tmp83;
  const Scalar _tmp109 = _tmp103 * _tmp104;
  const Scalar _tmp110 = fh1 * (_tmp105 * _tmp28 - _tmp109 * _tmp18);
  const Scalar _tmp111 = _tmp57 * _tmp69 + _tmp66;
  const Scalar _tmp112 = -_tmp111 * _tmp47 + _tmp57 * _tmp71 - _tmp65;
  const Scalar _tmp113 = _tmp95 * (-_tmp112 * _tmp93 + _tmp57 * _tmp91 - _tmp90);
  const Scalar _tmp114 = _tmp112 + _tmp113;
  const Scalar _tmp115 = -_tmp114 * _tmp99 - _tmp57;
  const Scalar _tmp116 = _tmp109 * fh1;
  const Scalar _tmp117 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp118 = _tmp39 * _tmp47 + _tmp46;
  const Scalar _tmp119 = 0;
  const Scalar _tmp120 = _tmp89 * (-_tmp108 * _tmp119 + _tmp119 * _tmp80);
  const Scalar _tmp121 = -_tmp106 * _tmp89 * (_tmp100 * _tmp101 + _tmp97 * _tmp98) -
                         _tmp110 * _tmp89 * (-_tmp107 * _tmp108 + _tmp107 * _tmp80) -
                         _tmp116 * _tmp89 * (_tmp101 * _tmp115 + _tmp114 * _tmp98 + Scalar(1.0)) -
                         _tmp117 * _tmp120;
  const Scalar _tmp122 = Scalar(1.0) / (_tmp121);
  const Scalar _tmp123 = _tmp40 + _tmp73;
  const Scalar _tmp124 = _tmp123 * _tmp47;
  const Scalar _tmp125 = Scalar(1.0) / (-_tmp124 + _tmp46 - _tmp76);
  const Scalar _tmp126 = _tmp118 * _tmp125;
  const Scalar _tmp127 = _tmp43 * (-_tmp119 * _tmp84 - _tmp123 * _tmp126 + _tmp40);
  const Scalar _tmp128 = -Scalar(1.0) * _tmp126 - Scalar(1.0) * _tmp127 + Scalar(1.0);
  const Scalar _tmp129 = Scalar(1.0) * _tmp125;
  const Scalar _tmp130 = _tmp123 * _tmp125;
  const Scalar _tmp131 = _tmp84 * _tmp86;
  const Scalar _tmp132 = _tmp130 * _tmp96 - _tmp131 * _tmp97 - _tmp70;
  const Scalar _tmp133 = Scalar(1.0) * _tmp43;
  const Scalar _tmp134 = fh1 * (_tmp60 + _tmp64);
  const Scalar _tmp135 = -_tmp105 * _tmp134 - Scalar(40.024799999999999) * _tmp14 - _tmp18 * fv1;
  const Scalar _tmp136 = _tmp43 * (_tmp124 * _tmp129 + Scalar(1.0));
  const Scalar _tmp137 = _tmp129 * _tmp47;
  const Scalar _tmp138 = -Scalar(1.0) * _tmp136 + Scalar(1.0) * _tmp137;
  const Scalar _tmp139 = _tmp109 * _tmp134 + Scalar(40.024799999999999) * _tmp24 + _tmp28 * fv1;
  const Scalar _tmp140 = _tmp123 * _tmp43;
  const Scalar _tmp141 = Scalar(1.0) * _tmp129 * _tmp140 - Scalar(1.0) * _tmp129;
  const Scalar _tmp142 = _tmp129 * _tmp95;
  const Scalar _tmp143 = -_tmp107 * _tmp84 + _tmp123 * _tmp142;
  const Scalar _tmp144 = _tmp111 + _tmp113 * _tmp130 - _tmp114 * _tmp131;
  const Scalar _tmp145 = Scalar(1.0) * _tmp106 * (_tmp129 * _tmp96 - _tmp132 * _tmp133) +
                         Scalar(1.0) * _tmp110 * (-_tmp133 * _tmp143 + _tmp142) +
                         Scalar(1.0) * _tmp116 * (_tmp113 * _tmp129 - _tmp133 * _tmp144) +
                         _tmp117 * _tmp128 + _tmp135 * _tmp138 + _tmp139 * _tmp141;
  const Scalar _tmp146 = std::asinh(_tmp122 * _tmp145);
  const Scalar _tmp147 = Scalar(1.4083112389913199) * _tmp121;
  const Scalar _tmp148 =
      -_tmp146 * _tmp147 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp35 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp38 - 1), Scalar(2))));
  const Scalar _tmp149 = Scalar(0.71007031138673404) * _tmp122;
  const Scalar _tmp150 = _tmp148 * _tmp149;
  const Scalar _tmp151 = Scalar(1.0) * _tmp146;
  const Scalar _tmp152 = Scalar(1.4083112389913199) * _tmp120;
  const Scalar _tmp153 = _tmp15 + _tmp41;
  const Scalar _tmp154 = std::pow(_tmp121, Scalar(-2));
  const Scalar _tmp155 = _tmp120 * _tmp154;
  const Scalar _tmp156 =
      (_tmp122 * (-_tmp128 + _tmp138 * _tmp153 + _tmp141 * _tmp28) - _tmp145 * _tmp155) /
      std::sqrt(Scalar(std::pow(_tmp145, Scalar(2)) * _tmp154 + 1));
  const Scalar _tmp157 = _tmp129 * _tmp139;
  const Scalar _tmp158 = _tmp106 * _tmp132 * _tmp43 + _tmp110 * _tmp143 * _tmp43 +
                         _tmp116 * _tmp144 * _tmp43 + _tmp117 * _tmp127 + _tmp135 * _tmp136 -
                         _tmp140 * _tmp157;
  const Scalar _tmp159 = _tmp117 * _tmp119;
  const Scalar _tmp160 = _tmp59 * _tmp83;
  const Scalar _tmp161 = _tmp107 * _tmp110;
  const Scalar _tmp162 = _tmp100 * _tmp106 * _tmp59 + _tmp115 * _tmp116 * _tmp59 -
                         _tmp159 * _tmp160 - _tmp160 * _tmp161;
  const Scalar _tmp163 = Scalar(1.0) / (_tmp162);
  const Scalar _tmp164 = std::asinh(_tmp158 * _tmp163);
  const Scalar _tmp165 = Scalar(1.0) * _tmp164;
  const Scalar _tmp166 = std::pow(_tmp162, Scalar(-2));
  const Scalar _tmp167 = _tmp119 * _tmp160 * _tmp166;
  const Scalar _tmp168 = _tmp129 * _tmp28;
  const Scalar _tmp169 =
      (-_tmp158 * _tmp167 + _tmp163 * (-_tmp127 + _tmp136 * _tmp153 - _tmp140 * _tmp168)) /
      std::sqrt(Scalar(std::pow(_tmp158, Scalar(2)) * _tmp166 + 1));
  const Scalar _tmp170 = Scalar(1.4083112389913199) * _tmp162;
  const Scalar _tmp171 =
      -_tmp164 * _tmp170 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp48), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp50 - 1), Scalar(2))));
  const Scalar _tmp172 = Scalar(0.71007031138673404) * _tmp163;
  const Scalar _tmp173 = _tmp171 * _tmp172;
  const Scalar _tmp174 = Scalar(1.4083112389913199) * _tmp119;
  const Scalar _tmp175 = _tmp160 * _tmp174;
  const Scalar _tmp176 = _tmp106 * _tmp86 * _tmp97 + _tmp114 * _tmp116 * _tmp86 + _tmp159 + _tmp161;
  const Scalar _tmp177 = Scalar(1.0) / (_tmp176);
  const Scalar _tmp178 = -_tmp106 * _tmp125 * _tmp96 - _tmp110 * _tmp142 -
                         _tmp113 * _tmp116 * _tmp125 + _tmp117 * _tmp126 - _tmp135 * _tmp137 +
                         _tmp157;
  const Scalar _tmp179 = std::asinh(_tmp177 * _tmp178);
  const Scalar _tmp180 = Scalar(1.0) * _tmp179;
  const Scalar _tmp181 = std::pow(_tmp176, Scalar(-2));
  const Scalar _tmp182 = _tmp119 * _tmp181;
  const Scalar _tmp183 = (_tmp177 * (-_tmp126 - _tmp137 * _tmp153 + _tmp168) + _tmp178 * _tmp182) /
                         std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp181 + 1));
  const Scalar _tmp184 = Scalar(1.4083112389913199) * _tmp176;
  const Scalar _tmp185 =
      -_tmp179 * _tmp184 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp74), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp77), Scalar(2))));
  const Scalar _tmp186 = Scalar(0.71007031138673404) * _tmp177;
  const Scalar _tmp187 = _tmp185 * _tmp186;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp31 *
      (-_tmp32 * std::cosh(Scalar(1.0) * _tmp30) +
       _tmp32 * std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                          (-_tmp30 * _tmp31 -
                           Scalar(125.0) *
                               std::sqrt(Scalar(
                                   std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp29),
                                            Scalar(2)) +
                                   Scalar(0.77439999999999998) *
                                       std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp19 - 1),
                                                Scalar(2)))))));
  _res(1, 0) = _tmp147 * (-Scalar(1.0) * _tmp156 * std::cosh(_tmp151) -
                          (-Scalar(0.71007031138673404) * _tmp148 * _tmp155 +
                           _tmp149 * (-_tmp146 * _tmp152 - _tmp147 * _tmp156)) *
                              std::cosh(_tmp150)) +
               _tmp152 * (-std::sinh(_tmp150) - std::sinh(_tmp151));
  _res(2, 0) = _tmp170 * (-Scalar(1.0) * _tmp169 * std::cosh(_tmp165) -
                          (-Scalar(0.71007031138673404) * _tmp167 * _tmp171 +
                           _tmp172 * (-_tmp164 * _tmp175 - _tmp169 * _tmp170)) *
                              std::cosh(_tmp173)) +
               _tmp175 * (-std::sinh(_tmp165) - std::sinh(_tmp173));
  _res(3, 0) = -_tmp174 * (-std::sinh(_tmp180) - std::sinh(_tmp187)) +
               _tmp184 * (-Scalar(1.0) * _tmp183 * std::cosh(_tmp180) -
                          (Scalar(0.71007031138673404) * _tmp182 * _tmp185 +
                           _tmp186 * (_tmp174 * _tmp179 - _tmp183 * _tmp184)) *
                              std::cosh(_tmp187));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
