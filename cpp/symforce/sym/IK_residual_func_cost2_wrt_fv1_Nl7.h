// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl7
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl7(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 598

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (193)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = 2 * _tmp3 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp11 = 1 - 2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp11;
  const Scalar _tmp13 = 2 * _tmp6;
  const Scalar _tmp14 = _tmp13 * _tmp3;
  const Scalar _tmp15 = _tmp4 * _tmp7;
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp17;
  const Scalar _tmp19 = -_tmp12 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp9;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp13 * _tmp4;
  const Scalar _tmp25 = _tmp3 * _tmp7;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp29 = _tmp27 - _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = -_tmp9;
  const Scalar _tmp34 = _tmp19 + _tmp33;
  const Scalar _tmp35 = _tmp34 + position_vector(1, 0);
  const Scalar _tmp36 = -_tmp23;
  const Scalar _tmp37 = _tmp29 + _tmp36;
  const Scalar _tmp38 = _tmp37 + position_vector(0, 0);
  const Scalar _tmp39 = _tmp21 + Scalar(8.3888750099999996);
  const Scalar _tmp40 = _tmp31 + Scalar(-2.5202214700000001);
  const Scalar _tmp41 = std::pow(Scalar(std::pow(_tmp39, Scalar(2)) + std::pow(_tmp40, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp42 = _tmp39 * _tmp41;
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp44 = -_tmp43;
  const Scalar _tmp45 = -Scalar(0.010999999999999999) * _tmp10 -
                        Scalar(0.010999999999999999) * _tmp22 + Scalar(-0.010999999999999999);
  const Scalar _tmp46 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp47 = _tmp45 + _tmp46;
  const Scalar _tmp48 = fh1 * (_tmp44 + _tmp47);
  const Scalar _tmp49 = -Scalar(5.1796800000000003) * _tmp16 - _tmp20 * fv1 - _tmp42 * _tmp48;
  const Scalar _tmp50 = Scalar(1.0) * _tmp34;
  const Scalar _tmp51 = -_tmp50;
  const Scalar _tmp52 = _tmp12 + _tmp33;
  const Scalar _tmp53 = _tmp18 + _tmp52;
  const Scalar _tmp54 = Scalar(1.0) / (_tmp51 + _tmp53);
  const Scalar _tmp55 = _tmp12 + _tmp18 + _tmp9;
  const Scalar _tmp56 = _tmp51 + _tmp55;
  const Scalar _tmp57 = _tmp27 + _tmp28;
  const Scalar _tmp58 = _tmp36 + _tmp57;
  const Scalar _tmp59 = Scalar(1.0) * _tmp37;
  const Scalar _tmp60 = _tmp54 * (-_tmp58 + _tmp59);
  const Scalar _tmp61 = _tmp56 * _tmp60;
  const Scalar _tmp62 = _tmp23 + _tmp57;
  const Scalar _tmp63 = Scalar(1.0) / (_tmp59 - _tmp61 - _tmp62);
  const Scalar _tmp64 = Scalar(1.0) * _tmp63;
  const Scalar _tmp65 = _tmp54 * (_tmp61 * _tmp64 + Scalar(1.0));
  const Scalar _tmp66 = _tmp60 * _tmp64;
  const Scalar _tmp67 = -Scalar(1.0) * _tmp65 + Scalar(1.0) * _tmp66;
  const Scalar _tmp68 = _tmp45 - _tmp46;
  const Scalar _tmp69 = _tmp43 + _tmp68;
  const Scalar _tmp70 = _tmp58 + position_vector(0, 0);
  const Scalar _tmp71 = _tmp70 + Scalar(1.79662371);
  const Scalar _tmp72 = _tmp53 + position_vector(1, 0);
  const Scalar _tmp73 = _tmp72 + Scalar(-4.8333311099999996);
  const Scalar _tmp74 = std::pow(Scalar(std::pow(_tmp71, Scalar(2)) + std::pow(_tmp73, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp75 = _tmp71 * _tmp74;
  const Scalar _tmp76 = _tmp44 + _tmp68;
  const Scalar _tmp77 = -_tmp69 * _tmp75 + _tmp75 * _tmp76;
  const Scalar _tmp78 = _tmp73 * _tmp74;
  const Scalar _tmp79 = _tmp35 + Scalar(8.3196563700000006);
  const Scalar _tmp80 = _tmp38 + Scalar(1.9874742000000001);
  const Scalar _tmp81 = Scalar(1.0) / (_tmp80);
  const Scalar _tmp82 = _tmp79 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp75 * _tmp82 - _tmp78);
  const Scalar _tmp84 = _tmp55 + position_vector(1, 0);
  const Scalar _tmp85 = _tmp84 + Scalar(-4.7752063900000001);
  const Scalar _tmp86 = _tmp62 + position_vector(0, 0);
  const Scalar _tmp87 = _tmp86 + Scalar(-2.71799795);
  const Scalar _tmp88 = std::pow(Scalar(std::pow(_tmp85, Scalar(2)) + std::pow(_tmp87, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp89 = _tmp85 * _tmp88;
  const Scalar _tmp90 = _tmp87 * _tmp88;
  const Scalar _tmp91 = _tmp82 * _tmp90 - _tmp89;
  const Scalar _tmp92 = _tmp83 * _tmp91;
  const Scalar _tmp93 = _tmp43 + _tmp47;
  const Scalar _tmp94 = _tmp76 * _tmp90;
  const Scalar _tmp95 = _tmp76 * _tmp82;
  const Scalar _tmp96 = _tmp69 * _tmp78 - _tmp75 * _tmp95;
  const Scalar _tmp97 = -_tmp82 * _tmp94 + _tmp89 * _tmp93 - _tmp92 * _tmp96;
  const Scalar _tmp98 = -_tmp60 * _tmp97 - _tmp77 * _tmp92 - _tmp90 * _tmp93 + _tmp94;
  const Scalar _tmp99 =
      std::sqrt(Scalar(std::pow(_tmp79, Scalar(2)) + std::pow(_tmp80, Scalar(2))));
  const Scalar _tmp100 = Scalar(1.0) / (_tmp99);
  const Scalar _tmp101 = _tmp81 * _tmp99;
  const Scalar _tmp102 = _tmp101 * (-_tmp100 * _tmp34 * _tmp80 + _tmp100 * _tmp37 * _tmp79);
  const Scalar _tmp103 = _tmp102 * _tmp75 + _tmp53 * _tmp75 - _tmp58 * _tmp78;
  const Scalar _tmp104 = _tmp102 * _tmp90 - _tmp103 * _tmp92 + _tmp55 * _tmp90 - _tmp62 * _tmp89;
  const Scalar _tmp105 = Scalar(1.0) / (_tmp104);
  const Scalar _tmp106 = _tmp105 * _tmp98;
  const Scalar _tmp107 = _tmp106 * _tmp64;
  const Scalar _tmp108 = _tmp56 * _tmp64;
  const Scalar _tmp109 = Scalar(1.0) * _tmp105;
  const Scalar _tmp110 = _tmp106 * _tmp108 - _tmp109 * _tmp97;
  const Scalar _tmp111 = Scalar(1.0) * _tmp54;
  const Scalar _tmp112 = _tmp40 * _tmp41;
  const Scalar _tmp113 = fh1 * (-_tmp112 * _tmp20 + _tmp30 * _tmp42);
  const Scalar _tmp114 = _tmp112 * _tmp48 + Scalar(5.1796800000000003) * _tmp26 + _tmp30 * fv1;
  const Scalar _tmp115 = Scalar(1.0) * _tmp108 * _tmp54 - Scalar(1.0) * _tmp64;
  const Scalar _tmp116 = _tmp82 * _tmp83;
  const Scalar _tmp117 = _tmp116 * _tmp96 + _tmp95;
  const Scalar _tmp118 = _tmp116 * _tmp77 - _tmp117 * _tmp60 - _tmp76;
  const Scalar _tmp119 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp120 = _tmp104 * _tmp119;
  const Scalar _tmp121 = _tmp106 * (-_tmp102 + _tmp103 * _tmp116 - _tmp118 * _tmp120);
  const Scalar _tmp122 = _tmp118 + _tmp121;
  const Scalar _tmp123 = _tmp119 * _tmp97;
  const Scalar _tmp124 = _tmp56 * _tmp63;
  const Scalar _tmp125 = _tmp117 + _tmp121 * _tmp124 - _tmp122 * _tmp123;
  const Scalar _tmp126 = _tmp112 * fh1;
  const Scalar _tmp127 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp128 = _tmp50 * _tmp60 + _tmp59;
  const Scalar _tmp129 = _tmp128 * _tmp63;
  const Scalar _tmp130 = 0;
  const Scalar _tmp131 = _tmp54 * (-_tmp123 * _tmp130 - _tmp129 * _tmp56 + _tmp51);
  const Scalar _tmp132 = -Scalar(1.0) * _tmp128 * _tmp64 - Scalar(1.0) * _tmp131 + Scalar(1.0);
  const Scalar _tmp133 = Scalar(1.0) * _tmp83;
  const Scalar _tmp134 = _tmp133 * _tmp96;
  const Scalar _tmp135 = -_tmp133 * _tmp77 + _tmp134 * _tmp60;
  const Scalar _tmp136 = _tmp106 * (-_tmp103 * _tmp133 - _tmp120 * _tmp135);
  const Scalar _tmp137 = _tmp135 + _tmp136;
  const Scalar _tmp138 = -_tmp123 * _tmp137 + _tmp124 * _tmp136 - _tmp134;
  const Scalar _tmp139 = _tmp42 * fh1;
  const Scalar _tmp140 =
      Scalar(1.0) * _tmp113 * (_tmp107 - _tmp110 * _tmp111) + _tmp114 * _tmp115 +
      Scalar(1.0) * _tmp126 * (-_tmp111 * _tmp125 + _tmp121 * _tmp64) + _tmp127 * _tmp132 +
      Scalar(1.0) * _tmp139 * (-_tmp111 * _tmp138 + _tmp136 * _tmp64) + _tmp49 * _tmp67;
  const Scalar _tmp141 = _tmp119 * _tmp130;
  const Scalar _tmp142 = _tmp141 * _tmp92;
  const Scalar _tmp143 = _tmp101 * (_tmp141 * _tmp90 - _tmp142 * _tmp75);
  const Scalar _tmp144 = _tmp119 * _tmp90;
  const Scalar _tmp145 = _tmp119 * _tmp91;
  const Scalar _tmp146 = -_tmp122 * _tmp145 - _tmp82;
  const Scalar _tmp147 = _tmp75 * _tmp83;
  const Scalar _tmp148 = -_tmp137 * _tmp145 + Scalar(1.0);
  const Scalar _tmp149 = -_tmp101 * _tmp113 * (-_tmp109 * _tmp75 * _tmp92 + _tmp109 * _tmp90) -
                         _tmp101 * _tmp126 * (_tmp122 * _tmp144 + _tmp146 * _tmp147 + Scalar(1.0)) -
                         _tmp101 * _tmp139 * (_tmp137 * _tmp144 + _tmp147 * _tmp148) -
                         _tmp127 * _tmp143;
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 = std::asinh(_tmp140 * _tmp150);
  const Scalar _tmp152 = Scalar(9.6622558468725703) * _tmp149;
  const Scalar _tmp153 =
      -_tmp151 * _tmp152 -
      Scalar(8.3196563700000006) *
          std::sqrt(
              Scalar(std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp35 - 1), Scalar(2)) +
                     Scalar(0.057067943376852184) *
                         std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp38 - 1), Scalar(2))));
  const Scalar _tmp154 = Scalar(0.1034955) * _tmp150;
  const Scalar _tmp155 = _tmp153 * _tmp154;
  const Scalar _tmp156 = std::pow(_tmp149, Scalar(-2));
  const Scalar _tmp157 = _tmp143 * _tmp156;
  const Scalar _tmp158 = _tmp17 + _tmp52;
  const Scalar _tmp159 =
      (-_tmp140 * _tmp157 + _tmp150 * (_tmp115 * _tmp30 - _tmp132 + _tmp158 * _tmp67)) /
      std::sqrt(Scalar(std::pow(_tmp140, Scalar(2)) * _tmp156 + 1));
  const Scalar _tmp160 = Scalar(9.6622558468725703) * _tmp143;
  const Scalar _tmp161 = Scalar(1.0) * _tmp151;
  const Scalar _tmp162 = _tmp114 * _tmp64;
  const Scalar _tmp163 = _tmp54 * _tmp56;
  const Scalar _tmp164 = _tmp110 * _tmp113 * _tmp54 + _tmp125 * _tmp126 * _tmp54 +
                         _tmp127 * _tmp131 + _tmp138 * _tmp139 * _tmp54 - _tmp162 * _tmp163 +
                         _tmp49 * _tmp65;
  const Scalar _tmp165 = _tmp109 * _tmp113;
  const Scalar _tmp166 = _tmp127 * _tmp141;
  const Scalar _tmp167 =
      _tmp126 * _tmp146 * _tmp83 + _tmp139 * _tmp148 * _tmp83 - _tmp165 * _tmp92 - _tmp166 * _tmp92;
  const Scalar _tmp168 = Scalar(1.0) / (_tmp167);
  const Scalar _tmp169 = std::asinh(_tmp164 * _tmp168);
  const Scalar _tmp170 = Scalar(1.0) * _tmp169;
  const Scalar _tmp171 = std::pow(_tmp167, Scalar(-2));
  const Scalar _tmp172 = _tmp142 * _tmp171;
  const Scalar _tmp173 = _tmp30 * _tmp64;
  const Scalar _tmp174 =
      (-_tmp164 * _tmp172 + _tmp168 * (-_tmp131 + _tmp158 * _tmp65 - _tmp163 * _tmp173)) /
      std::sqrt(Scalar(std::pow(_tmp164, Scalar(2)) * _tmp171 + 1));
  const Scalar _tmp175 = Scalar(9.6622558468725703) * _tmp167;
  const Scalar _tmp176 =
      -_tmp169 * _tmp175 -
      Scalar(4.8333311099999996) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp72), Scalar(2)) +
                     Scalar(0.13817235445745474) *
                         std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp70 - 1), Scalar(2))));
  const Scalar _tmp177 = Scalar(9.6622558468725703) * _tmp141;
  const Scalar _tmp178 = _tmp177 * _tmp92;
  const Scalar _tmp179 = Scalar(0.1034955) * _tmp168;
  const Scalar _tmp180 = _tmp176 * _tmp179;
  const Scalar _tmp181 = -_tmp107 * _tmp113 - _tmp121 * _tmp126 * _tmp63 + _tmp127 * _tmp129 -
                         _tmp136 * _tmp139 * _tmp63 + _tmp162 - _tmp49 * _tmp66;
  const Scalar _tmp182 =
      _tmp119 * _tmp122 * _tmp126 + _tmp119 * _tmp137 * _tmp139 + _tmp165 + _tmp166;
  const Scalar _tmp183 = Scalar(1.0) / (_tmp182);
  const Scalar _tmp184 = std::asinh(_tmp181 * _tmp183);
  const Scalar _tmp185 = Scalar(1.0) * _tmp184;
  const Scalar _tmp186 = std::pow(_tmp182, Scalar(-2));
  const Scalar _tmp187 = _tmp141 * _tmp186;
  const Scalar _tmp188 = (_tmp181 * _tmp187 + _tmp183 * (-_tmp129 - _tmp158 * _tmp66 + _tmp173)) /
                         std::sqrt(Scalar(std::pow(_tmp181, Scalar(2)) * _tmp186 + 1));
  const Scalar _tmp189 = Scalar(9.6622558468725703) * _tmp182;
  const Scalar _tmp190 =
      -_tmp184 * _tmp189 -
      Scalar(4.7752063900000001) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp84), Scalar(2)) +
                     Scalar(0.32397683292140877) *
                         std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp86), Scalar(2))));
  const Scalar _tmp191 = Scalar(0.1034955) * _tmp183;
  const Scalar _tmp192 = _tmp190 * _tmp191;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 *
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp1 * _tmp32 -
                Scalar(8.3888750099999996) *
                    std::sqrt(Scalar(
                        Scalar(0.090254729040973036) *
                            std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp31), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp21 - 1), Scalar(2)))))));
  _res(1, 0) = _tmp152 * (-Scalar(1.0) * _tmp159 * std::cosh(_tmp161) -
                          (-Scalar(0.1034955) * _tmp153 * _tmp157 +
                           _tmp154 * (-_tmp151 * _tmp160 - _tmp152 * _tmp159)) *
                              std::cosh(_tmp155)) +
               _tmp160 * (-std::sinh(_tmp155) - std::sinh(_tmp161));
  _res(2, 0) = _tmp175 * (-Scalar(1.0) * _tmp174 * std::cosh(_tmp170) -
                          (-Scalar(0.1034955) * _tmp172 * _tmp176 +
                           _tmp179 * (-_tmp169 * _tmp178 - _tmp174 * _tmp175)) *
                              std::cosh(_tmp180)) +
               _tmp178 * (-std::sinh(_tmp170) - std::sinh(_tmp180));
  _res(3, 0) = -_tmp177 * (-std::sinh(_tmp185) - std::sinh(_tmp192)) +
               _tmp189 * (-Scalar(1.0) * _tmp188 * std::cosh(_tmp185) -
                          (Scalar(0.1034955) * _tmp187 * _tmp190 +
                           _tmp191 * (_tmp177 * _tmp184 - _tmp188 * _tmp189)) *
                              std::cosh(_tmp192));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
