// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 534

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (158)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp5 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp9 = 2 * _tmp2 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp10 * _tmp4;
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp13 = 2 * _tmp4;
  const Scalar _tmp14 = _tmp13 * _tmp8;
  const Scalar _tmp15 = _tmp10 * _tmp2;
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = -Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp12 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp7;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = 1 - 2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = _tmp13 * _tmp2;
  const Scalar _tmp25 = _tmp10 * _tmp8;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp29 = _tmp27 - _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp20 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp31 - 1), Scalar(2));
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 =
      -Scalar(0.010999999999999999) * _tmp21 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp12 + _tmp17;
  const Scalar _tmp41 = _tmp40 + _tmp6;
  const Scalar _tmp42 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(-110.0);
  const Scalar _tmp44 = _tmp27 + _tmp28;
  const Scalar _tmp45 = _tmp22 + _tmp44;
  const Scalar _tmp46 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp47 = _tmp46 + Scalar(-125.0);
  const Scalar _tmp48 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp47, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp47 * _tmp48;
  const Scalar _tmp50 = _tmp43 * _tmp48;
  const Scalar _tmp51 = _tmp22 + _tmp29;
  const Scalar _tmp52 = _tmp51 + position_vector(0, 0);
  const Scalar _tmp53 = _tmp52 + Scalar(-125.0);
  const Scalar _tmp54 = Scalar(1.0) / (_tmp53);
  const Scalar _tmp55 = _tmp40 + _tmp7;
  const Scalar _tmp56 = _tmp55 + position_vector(1, 0);
  const Scalar _tmp57 = _tmp56 + Scalar(110.0);
  const Scalar _tmp58 = _tmp54 * _tmp57;
  const Scalar _tmp59 = _tmp49 * _tmp58 - _tmp50;
  const Scalar _tmp60 = _tmp18 + _tmp6;
  const Scalar _tmp61 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(-110.0);
  const Scalar _tmp63 = _tmp23 + _tmp44;
  const Scalar _tmp64 = _tmp63 + position_vector(0, 0);
  const Scalar _tmp65 = _tmp64 + Scalar(125.0);
  const Scalar _tmp66 = std::pow(Scalar(std::pow(_tmp62, Scalar(2)) + std::pow(_tmp65, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp67 = _tmp62 * _tmp66;
  const Scalar _tmp68 = _tmp65 * _tmp66;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp58 * _tmp68 - _tmp67);
  const Scalar _tmp70 =
      std::sqrt(Scalar(std::pow(_tmp53, Scalar(2)) + std::pow(_tmp57, Scalar(2))));
  const Scalar _tmp71 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp72 = _tmp54 * _tmp70;
  const Scalar _tmp73 = _tmp72 * (_tmp51 * _tmp57 * _tmp71 - _tmp53 * _tmp55 * _tmp71);
  const Scalar _tmp74 = _tmp69 * (_tmp60 * _tmp68 - _tmp63 * _tmp67 + _tmp68 * _tmp73);
  const Scalar _tmp75 = _tmp41 * _tmp49 - _tmp45 * _tmp50 + _tmp49 * _tmp73 - _tmp59 * _tmp74;
  const Scalar _tmp76 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp77 = Scalar(1.0) * _tmp76;
  const Scalar _tmp78 = _tmp68 * _tmp69;
  const Scalar _tmp79 = _tmp20 + Scalar(110.0);
  const Scalar _tmp80 = _tmp31 + Scalar(125.0);
  const Scalar _tmp81 = std::pow(Scalar(std::pow(_tmp79, Scalar(2)) + std::pow(_tmp80, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp82 = _tmp79 * _tmp81;
  const Scalar _tmp83 = _tmp80 * _tmp81;
  const Scalar _tmp84 = fh1 * (-_tmp19 * _tmp83 + _tmp30 * _tmp82);
  const Scalar _tmp85 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp86 = _tmp36 + _tmp37;
  const Scalar _tmp87 = _tmp34 + _tmp86;
  const Scalar _tmp88 = _tmp34 + _tmp38;
  const Scalar _tmp89 = _tmp35 + _tmp86;
  const Scalar _tmp90 = _tmp69 * (-_tmp68 * _tmp88 + _tmp68 * _tmp89);
  const Scalar _tmp91 = _tmp58 * _tmp89;
  const Scalar _tmp92 = _tmp69 * (_tmp67 * _tmp88 - _tmp68 * _tmp91);
  const Scalar _tmp93 = -_tmp49 * _tmp91 + _tmp50 * _tmp87 - _tmp59 * _tmp92;
  const Scalar _tmp94 = Scalar(1.0) * _tmp51;
  const Scalar _tmp95 = Scalar(1.0) * _tmp55;
  const Scalar _tmp96 = -_tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp60 + _tmp96);
  const Scalar _tmp98 = _tmp97 * (-_tmp63 + _tmp94);
  const Scalar _tmp99 = -_tmp49 * _tmp87 + _tmp49 * _tmp89 - _tmp59 * _tmp90 - _tmp93 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) / (_tmp99);
  const Scalar _tmp101 = _tmp94 + _tmp95 * _tmp98;
  const Scalar _tmp102 = 0;
  const Scalar _tmp103 = _tmp100 * _tmp102;
  const Scalar _tmp104 = _tmp100 * _tmp59;
  const Scalar _tmp105 = _tmp102 * _tmp104;
  const Scalar _tmp106 = Scalar(1.0) * _tmp92;
  const Scalar _tmp107 = _tmp106 * _tmp98 - Scalar(1.0) * _tmp90;
  const Scalar _tmp108 = _tmp100 * _tmp75;
  const Scalar _tmp109 = _tmp76 * _tmp99;
  const Scalar _tmp110 = _tmp109 * (-_tmp107 * _tmp108 - Scalar(1.0) * _tmp74);
  const Scalar _tmp111 = _tmp107 + _tmp110;
  const Scalar _tmp112 = -_tmp104 * _tmp111 + Scalar(1.0);
  const Scalar _tmp113 = _tmp100 * _tmp49;
  const Scalar _tmp114 = _tmp82 * fh1;
  const Scalar _tmp115 = _tmp58 * _tmp92 + _tmp91;
  const Scalar _tmp116 = -_tmp115 * _tmp98 + _tmp58 * _tmp90 - _tmp89;
  const Scalar _tmp117 = _tmp109 * (-_tmp108 * _tmp116 + _tmp58 * _tmp74 - _tmp73);
  const Scalar _tmp118 = _tmp116 + _tmp117;
  const Scalar _tmp119 = -_tmp104 * _tmp118 - _tmp58;
  const Scalar _tmp120 = _tmp83 * fh1;
  const Scalar _tmp121 = -_tmp114 * _tmp72 * (_tmp111 * _tmp113 + _tmp112 * _tmp78) -
                         _tmp120 * _tmp72 * (_tmp113 * _tmp118 + _tmp119 * _tmp78 + Scalar(1.0)) -
                         _tmp72 * _tmp84 * (_tmp49 * _tmp77 - _tmp59 * _tmp77 * _tmp78) -
                         _tmp72 * _tmp85 * (_tmp103 * _tmp49 - _tmp105 * _tmp78);
  const Scalar _tmp122 = Scalar(1.0) / (_tmp121);
  const Scalar _tmp123 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp52), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp56 - 1), Scalar(2));
  const Scalar _tmp124 = _tmp100 * _tmp93;
  const Scalar _tmp125 = _tmp41 + _tmp96;
  const Scalar _tmp126 = _tmp125 * _tmp98;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 - _tmp45 + _tmp94);
  const Scalar _tmp128 = _tmp125 * _tmp127;
  const Scalar _tmp129 = _tmp115 + _tmp117 * _tmp128 - _tmp118 * _tmp124;
  const Scalar _tmp130 = Scalar(1.0) * _tmp97;
  const Scalar _tmp131 = Scalar(1.0) * _tmp127;
  const Scalar _tmp132 = Scalar(1.0) * fh1;
  const Scalar _tmp133 = _tmp39 * fh1;
  const Scalar _tmp134 = -_tmp133 * _tmp82 - Scalar(40.024799999999999) * _tmp16 - _tmp19 * fv1;
  const Scalar _tmp135 = _tmp126 * _tmp131 + Scalar(1.0);
  const Scalar _tmp136 = _tmp131 * _tmp98;
  const Scalar _tmp137 = _tmp109 * _tmp131;
  const Scalar _tmp138 = _tmp125 * _tmp137 - _tmp77 * _tmp93;
  const Scalar _tmp139 = _tmp133 * _tmp83 + Scalar(40.024799999999999) * _tmp26 + _tmp30 * fv1;
  const Scalar _tmp140 = _tmp125 * _tmp97;
  const Scalar _tmp141 = _tmp101 * _tmp127;
  const Scalar _tmp142 = -_tmp102 * _tmp124 - _tmp125 * _tmp141 + _tmp96;
  const Scalar _tmp143 = -_tmp106 + _tmp110 * _tmp128 - _tmp111 * _tmp124;
  const Scalar _tmp144 = std::asinh(
      _tmp122 * (_tmp132 * _tmp82 * (_tmp110 * _tmp131 - _tmp130 * _tmp143) +
                 _tmp132 * _tmp83 * (_tmp117 * _tmp131 - _tmp129 * _tmp130) +
                 Scalar(1.0) * _tmp134 * (-_tmp130 * _tmp135 + _tmp136) +
                 Scalar(1.0) * _tmp139 * (_tmp131 * _tmp140 - _tmp131) +
                 Scalar(1.0) * _tmp84 * (-_tmp130 * _tmp138 + _tmp137) +
                 Scalar(1.0) * _tmp85 * (-_tmp101 * _tmp131 - _tmp130 * _tmp142 + Scalar(1.0))));
  const Scalar _tmp145 = Scalar(1.4083112389913199) * _tmp121;
  const Scalar _tmp146 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp61), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp64 - 1), Scalar(2));
  const Scalar _tmp147 = _tmp77 * _tmp84;
  const Scalar _tmp148 = -_tmp105 * _tmp69 * _tmp85 + _tmp112 * _tmp114 * _tmp69 +
                         _tmp119 * _tmp120 * _tmp69 - _tmp147 * _tmp59 * _tmp69;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 = _tmp131 * _tmp139;
  const Scalar _tmp151 =
      std::asinh(_tmp149 * (_tmp114 * _tmp143 * _tmp97 + _tmp120 * _tmp129 * _tmp97 +
                            _tmp134 * _tmp135 * _tmp97 + _tmp138 * _tmp84 * _tmp97 -
                            _tmp140 * _tmp150 + _tmp142 * _tmp85 * _tmp97));
  const Scalar _tmp152 = Scalar(1.4083112389913199) * _tmp148;
  const Scalar _tmp153 =
      _tmp100 * _tmp111 * _tmp114 + _tmp100 * _tmp118 * _tmp120 + _tmp103 * _tmp85 + _tmp147;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 =
      std::asinh(_tmp154 * (-_tmp110 * _tmp114 * _tmp127 - _tmp117 * _tmp120 * _tmp127 -
                            _tmp134 * _tmp136 - _tmp137 * _tmp84 + _tmp141 * _tmp85 + _tmp150));
  const Scalar _tmp156 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp42), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp46), Scalar(2));
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp153;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
          (-std::sinh(Scalar(1.0) * _tmp1) -
           std::sinh(Scalar(0.71007031138673404) * _tmp0 * (-_tmp1 * _tmp33 - std::sqrt(_tmp32)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp32 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp39 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp145 * (-std::sinh(Scalar(1.0) * _tmp144) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp122 *
                           (-std::sqrt(_tmp123) - _tmp144 * _tmp145))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp123 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp89 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp152 * (-std::sinh(Scalar(1.0) * _tmp151) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp149 *
                           (-std::sqrt(_tmp146) - _tmp151 * _tmp152))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp146 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp88 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp157 * (-std::sinh(Scalar(1.0) * _tmp155) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp154 *
                           (-_tmp155 * _tmp157 - std::sqrt(_tmp156)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp156 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp87 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
